;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 07/07/2018 12:01:15
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x00000004298A  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x0028D4  	10452
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x002AEE  	10990
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x0028B0  	10416
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x0029A2  	10658
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x002A90  	10896
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x298A	0x2089EF  	MOV	#2206, W15
0x298C	0x20FFF0  	MOV	#4095, W0
0x298E	0xB7A020  	MOV	WREG, SPLIM
0x2990	0x200000  	MOV	#0, W0
0x2992	0xB7A034  	MOV	WREG, PSVPAG
0x2994	0x200040  	MOV	#4, W0
0x2996	0xB72044  	IOR	CORCON
0x2998	0x000000022CDE  	CALL	11486
;EBB_DPX.c,168 :: 		void main() {
;EBB_DPX.c,169 :: 		EBB_Init();
0x299C	0x07FDBD  	RCALL	_EBB_Init
;EBB_DPX.c,170 :: 		while(1)
L_main159:
;EBB_DPX.c,172 :: 		}
0x299E	0x37FFFF  	BRA	L_main159
;EBB_DPX.c,174 :: 		}
L_end_main:
L__main_end_loop:
0x29A0	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_EBB_Init:
;initialization.c,5 :: 		void EBB_Init()  //Initialize all hardware peripherals and software variables
;initialization.c,8 :: 		if(EEPROM_Read(ADDR_FIRST_BOOT) == 0xFFFF)                           //First boot initialization  (Central position)
0x2518	0x781F8A  	PUSH	W10
0x251A	0x781F8B  	PUSH	W11
0x251C	0x781F8C  	PUSH	W12
0x251E	0x2FDD0A  	MOV	#64976, W10
0x2520	0x2007FB  	MOV	#127, W11
0x2522	0x07FE81  	RCALL	_EEPROM_Read
0x2524	0x2FFFF1  	MOV	#65535, W1
0x2526	0xE10001  	CP	W0, W1
0x2528	0x3A001C  	BRA NZ	L_EBB_Init140
L__EBB_Init314:
;initialization.c,10 :: 		EEPROM_WRITE(ADDR_LAST_POSCNT, 0);
0x252A	0xEF2018  	CLR	W12
0x252C	0x2FDA0A  	MOV	#64928, W10
0x252E	0x2007FB  	MOV	#127, W11
0x2530	0x07FE83  	RCALL	_EEPROM_Write
;initialization.c,11 :: 		while(WR_bit);
L_EBB_Init141:
0x2532	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x2534	0x370001  	BRA	L_EBB_Init142
0x2536	0x37FFFD  	BRA	L_EBB_Init141
L_EBB_Init142:
;initialization.c,12 :: 		EEPROM_WRITE(ADDR_LAST_MAPPED_POSITION, 8);
0x2538	0x20008C  	MOV	#8, W12
0x253A	0x2FDC0A  	MOV	#64960, W10
0x253C	0x2007FB  	MOV	#127, W11
0x253E	0x07FE7C  	RCALL	_EEPROM_Write
;initialization.c,13 :: 		while(WR_bit);
L_EBB_Init143:
0x2540	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x2542	0x370001  	BRA	L_EBB_Init144
0x2544	0x37FFFD  	BRA	L_EBB_Init143
L_EBB_Init144:
;initialization.c,14 :: 		EEPROM_WRITE(ADDR_LAST_NUMBER_QUARTER_TURNS, 16);
0x2546	0x20010C  	MOV	#16, W12
0x2548	0x2FDB0A  	MOV	#64944, W10
0x254A	0x2007FB  	MOV	#127, W11
0x254C	0x07FE75  	RCALL	_EEPROM_Write
;initialization.c,15 :: 		while(WR_bit);
L_EBB_Init145:
0x254E	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x2550	0x370001  	BRA	L_EBB_Init146
0x2552	0x37FFFD  	BRA	L_EBB_Init145
L_EBB_Init146:
;initialization.c,16 :: 		EEPROM_WRITE(ADDR_FIRST_BOOT, 0);
0x2554	0xEF2018  	CLR	W12
0x2556	0x2FDD0A  	MOV	#64976, W10
0x2558	0x2007FB  	MOV	#127, W11
0x255A	0x07FE6E  	RCALL	_EEPROM_Write
;initialization.c,17 :: 		while(WR_bit);
L_EBB_Init147:
0x255C	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x255E	0x370001  	BRA	L_EBB_Init148
0x2560	0x37FFFD  	BRA	L_EBB_Init147
L_EBB_Init148:
;initialization.c,18 :: 		}
L_EBB_Init140:
;initialization.c,20 :: 		ADPCFG = 0b1111111111111110;                    //analog input on AN0 (Current Sense)
0x2562	0x2FFFE0  	MOV	#65534, W0
0x2564	0xB7A2A8  	MOV	WREG, ADPCFG
;initialization.c,21 :: 		TRISDbits.TRISD1 = 0;                           //green led;
0x2566	0xA922D2  	BCLR.B	TRISDbits, #1
;initialization.c,22 :: 		TRISDbits.TRISD3 = 0;                           //blue led;
0x2568	0xA962D2  	BCLR.B	TRISDbits, #3
;initialization.c,23 :: 		TRISDbits.TRISD2 = 0;                           //buzzer;
0x256A	0xA942D2  	BCLR.B	TRISDbits, #2
;initialization.c,24 :: 		TRISEbits.TRISE0 = 0;                           //PWM output
0x256C	0xA902D8  	BCLR	TRISEbits, #0
;initialization.c,25 :: 		TRISEbits.TRISE4 = 0;                           //Forward output
0x256E	0xA982D8  	BCLR	TRISEbits, #4
;initialization.c,26 :: 		TRISEbits.TRISE3 = 0;                           //Reverse output
0x2570	0xA962D8  	BCLR	TRISEbits, #3
;initialization.c,27 :: 		TRISEbits.TRISE2 = 0;                           //Enable output
0x2572	0xA942D8  	BCLR	TRISEbits, #2
;initialization.c,28 :: 		TRISBbits.TRISB0 = 1;                           //set ADC pin as input (Current sense: Vcsns = Iout x 3.1)
0x2574	0xA802C6  	BSET	TRISBbits, #0
;initialization.c,29 :: 		BUZZER = 0;                                                                                //Outputs at zero
0x2576	0xA942D6  	BCLR	LATD2_bit, BitPos(LATD2_bit+0)
;initialization.c,30 :: 		LED_B = 0;
0x2578	0xA922D6  	BCLR	LATD1_bit, BitPos(LATD1_bit+0)
;initialization.c,31 :: 		LED_G = 0;
0x257A	0xA962D6  	BCLR	LATD3_bit, BitPos(LATD3_bit+0)
;initialization.c,33 :: 		QEICON = 0b0000010110000010;                    //Set Quadrature Encoder
0x257C	0x205820  	MOV	#1410, W0
0x257E	0xB7A122  	MOV	WREG, QEICON
;initialization.c,35 :: 		POSCNT = EEPROM_Read(ADDR_LAST_POSCNT);              //Position Counter starter value (offset half register)
0x2580	0x2FDA0A  	MOV	#64928, W10
0x2582	0x2007FB  	MOV	#127, W11
0x2584	0x07FE50  	RCALL	_EEPROM_Read
0x2586	0xB7A126  	MOV	WREG, POSCNT
;initialization.c,36 :: 		MAXCNT = QUARTER_TURN;                          //Set maxcounter to a quarter turn for interrupts
0x2588	0x227400  	MOV	#10048, W0
0x258A	0xB7A128  	MOV	WREG, MAXCNT
;initialization.c,37 :: 		IPC10bits.QEIIP = 4;                            //Set interrupt priority on 4 for MAXCNT match
0x258C	0xB3C040  	MOV.B	#4, W0
0x258E	0x784080  	MOV.B	W0, W1
0x2590	0x200A80  	MOV	#lo_addr(IPC10bits), W0
0x2592	0x68C090  	XOR.B	W1, [W0], W1
0x2594	0x60C0E7  	AND.B	W1, #7, W1
0x2596	0x200A80  	MOV	#lo_addr(IPC10bits), W0
0x2598	0x68C090  	XOR.B	W1, [W0], W1
0x259A	0x200A80  	MOV	#lo_addr(IPC10bits), W0
0x259C	0x784801  	MOV.B	W1, [W0]
;initialization.c,38 :: 		IFS2bits.QEIIF = 0;                             //Reset Interrupt Flag
0x259E	0xA90089  	BCLR	IFS2bits, #8
;initialization.c,39 :: 		IEC2bits.QEIIE = 1;                             //Enable MAXCNT match interrupt
0x25A0	0xA80091  	BSET	IEC2bits, #8
;initialization.c,41 :: 		PWMCON1 = 0b0000000100000001;                   //independent mode, only PWM1L enabled
0x25A2	0x201010  	MOV	#257, W0
0x25A4	0xB7A1C8  	MOV	WREG, PWMCON1
;initialization.c,42 :: 		PTPER = 1999;                                   //PWM frequency = 10 kHz
0x25A6	0x207CF0  	MOV	#1999, W0
0x25A8	0xB7A1C4  	MOV	WREG, PTPER
;initialization.c,43 :: 		PDC1 = 0;                                       //initial 0% of duty cycle - motor is off;        MAX_Value = 4000;
0x25AA	0xEF21D6  	CLR	PDC1
;initialization.c,44 :: 		PTMR = 0;                                       //to clear the PWM time base
0x25AC	0xEF21C2  	CLR	PTMR
;initialization.c,45 :: 		PTCON = 0b1000000000000000;                     //prescaler 1:1, postscaler 1:1, free running mode, PWM on
0x25AE	0x280000  	MOV	#32768, W0
0x25B0	0xB7A1C0  	MOV	WREG, PTCON
;initialization.c,46 :: 		FORWARD = 0;                                                                        //all h-bridge input at zero
0x25B2	0xA982DC  	BCLR	LATE4_bit, BitPos(LATE4_bit+0)
;initialization.c,47 :: 		REVERSE = 0;
0x25B4	0xA962DC  	BCLR	LATE3_bit, BitPos(LATE3_bit+0)
;initialization.c,48 :: 		ENABLE = 0;
0x25B6	0xA942DC  	BCLR	LATE2_bit, BitPos(LATE2_bit+0)
;initialization.c,51 :: 		ebb_current_pos = EEPROM_Read(ADDR_LAST_MAPPED_POSITION);                       //Get the old mapped position
0x25B8	0x2FDC0A  	MOV	#64960, W10
0x25BA	0x2007FB  	MOV	#127, W11
0x25BC	0x07FE34  	RCALL	_EEPROM_Read
0x25BE	0x884490  	MOV	W0, _ebb_current_pos
;initialization.c,52 :: 		ebb_target_pos = ebb_current_pos;                                               //Set target as reached
0x25C0	0x8844D0  	MOV	W0, _ebb_target_pos
;initialization.c,53 :: 		motor_current_position = EEPROM_Read(ADDR_LAST_NUMBER_QUARTER_TURNS);           //Get the old quester turns number
0x25C2	0x2FDB0A  	MOV	#64944, W10
0x25C4	0x2007FB  	MOV	#127, W11
0x25C6	0x07FE2F  	RCALL	_EEPROM_Read
0x25C8	0x8844E0  	MOV	W0, _motor_current_position
;initialization.c,54 :: 		motor_target_position = motor_current_position;                                 //Set target as reached
0x25CA	0x8844A0  	MOV	W0, _motor_target_position
;initialization.c,55 :: 		ebb_settings = 0;
0x25CC	0xEF2000  	CLR	W0
0x25CE	0x8844B0  	MOV	W0, _ebb_settings
;initialization.c,56 :: 		brake_pressure_front = 0;
0x25D0	0xEF2000  	CLR	W0
0x25D2	0x8844C0  	MOV	W0, _brake_pressure_front
;initialization.c,57 :: 		is_requested_calibration = 0;
0x25D4	0x208101  	MOV	#lo_addr(_is_requested_calibration), W1
0x25D6	0xEF2000  	CLR	W0
0x25D8	0x784880  	MOV.B	W0, [W1]
;initialization.c,58 :: 		is_requested_movement = 0;
0x25DA	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x25DC	0xEF2000  	CLR	W0
0x25DE	0x784880  	MOV.B	W0, [W1]
;initialization.c,60 :: 		CAN_Init();                                     //initialize CAN module
0x25E0	0x07FE3D  	RCALL	_Can_init
;initialization.c,62 :: 		CAN_routine();                                   //Send first CAN Packet
0x25E2	0x07FF81  	RCALL	_CAN_routine
;initialization.c,64 :: 		UART1_Init(9600);
0x25E4	0x22580A  	MOV	#9600, W10
0x25E6	0x20000B  	MOV	#0, W11
0x25E8	0x07FEDF  	RCALL	_UART1_Init
;initialization.c,66 :: 		ebb_current_state = EBB_OFF;
0x25EA	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x25EC	0xEF2000  	CLR	W0
0x25EE	0x784880  	MOV.B	W0, [W1]
;initialization.c,69 :: 		setTimer(TIMER4_DEVICE,0.003);                                        //Interrupt every 200uS
0x25F0	0x29BA6B  	MOV	#39846, W11
0x25F2	0x23B44C  	MOV	#15172, W12
0x25F4	0xB3C03A  	MOV.B	#3, W10
0x25F6	0x07FF1A  	RCALL	_setTimer
;initialization.c,72 :: 		buzzer_state = ON;
0x25F8	0x200010  	MOV	#1, W0
0x25FA	0x884090  	MOV	W0, _buzzer_state
;initialization.c,73 :: 		LED_B = ON;
0x25FC	0xA822D6  	BSET	LATD1_bit, BitPos(LATD1_bit+0)
;initialization.c,74 :: 		LED_G = ON;
0x25FE	0xA862D6  	BSET	LATD3_bit, BitPos(LATD3_bit+0)
;initialization.c,75 :: 		delay_ms(1000);
0x2600	0x200668  	MOV	#102, W8
0x2602	0x2B9CB7  	MOV	#47563, W7
L_EBB_Init149:
0x2604	0xED200E  	DEC	W7
0x2606	0x3AFFFE  	BRA NZ	L_EBB_Init149
0x2608	0xED2010  	DEC	W8
0x260A	0x3AFFFC  	BRA NZ	L_EBB_Init149
0x260C	0x000000  	NOP
;initialization.c,76 :: 		buzzer_state = OFF;
0x260E	0xEF2000  	CLR	W0
0x2610	0x884090  	MOV	W0, _buzzer_state
;initialization.c,77 :: 		LED_B = OFF;
0x2612	0xA922D6  	BCLR	LATD1_bit, BitPos(LATD1_bit+0)
;initialization.c,78 :: 		LED_G = OFF;
0x2614	0xA962D6  	BCLR	LATD3_bit, BitPos(LATD3_bit+0)
;initialization.c,80 :: 		setTimer(TIMER1_DEVICE,0.01);                                         //Interrupt every 1mS
0x2616	0x2D70AB  	MOV	#55050, W11
0x2618	0x23C23C  	MOV	#15395, W12
0x261A	0xB3C01A  	MOV.B	#1, W10
0x261C	0x07FF07  	RCALL	_setTimer
;initialization.c,81 :: 		setTimer(TIMER2_DEVICE,0.001 * CONTROL_ROUTINE_REFRESH);              //Interrupt every CONTROL_ROUTINE_REFRESH mS
0x261E	0x2D70BB  	MOV	#55051, W11
0x2620	0x23C23C  	MOV	#15395, W12
0x2622	0xB3C02A  	MOV.B	#2, W10
0x2624	0x07FF03  	RCALL	_setTimer
;initialization.c,82 :: 		}
L_end_EBB_Init:
0x2626	0x78064F  	POP	W12
0x2628	0x7805CF  	POP	W11
0x262A	0x78054F  	POP	W10
0x262C	0x060000  	RETURN
; end of _EBB_Init
_EEPROM_Read:
0x2226	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.c,233 :: 		
;__Lib_EEPROM_p30.c,235 :: 		
0x2228	0x200140  	MOV	#lo_addr(W10), W0
0x222A	0xECA000  	INC2	W0
0x222C	0x780010  	MOV	[W0], W0
0x222E	0xB7A032  	MOV	WREG, TBLPAG
;__Lib_EEPROM_p30.c,236 :: 		
0x2230	0x78048A  	MOV	W10, W9
;__Lib_EEPROM_p30.c,238 :: 		
0x2232	0xBA0019  	TBLRDL	[W9], W0
;__Lib_EEPROM_p30.c,239 :: 		
;__Lib_EEPROM_p30.c,240 :: 		
L_end_EEPROM_Read:
0x2234	0xFA8000  	ULNK
0x2236	0x060000  	RETURN
; end of _EEPROM_Read
_EEPROM_Write:
0x2238	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.c,147 :: 		
;__Lib_EEPROM_p30.c,150 :: 		
0x223A	0x07FED8  	RCALL	_EEPROM_Erase
;__Lib_EEPROM_p30.c,154 :: 		
L_EEPROM_Write0:
0x223C	0xAEE761  	BTSS	NVMCON, #15
0x223E	0x370001  	BRA	L_EEPROM_Write1
;__Lib_EEPROM_p30.c,155 :: 		
0x2240	0x37FFFD  	BRA	L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM_p30.c,158 :: 		
0x2242	0x200140  	MOV	#lo_addr(W10), W0
0x2244	0x780490  	MOV	[W0], W9
;__Lib_EEPROM_p30.c,159 :: 		
0x2246	0xECA000  	INC2	W0
0x2248	0x780010  	MOV	[W0], W0
0x224A	0xB7A032  	MOV	WREG, TBLPAG
;__Lib_EEPROM_p30.c,160 :: 		
0x224C	0x78040C  	MOV	W12, W8
;__Lib_EEPROM_p30.c,162 :: 		
0x224E	0xBB0C88  	TBLWTL	W8, [W9]
;__Lib_EEPROM_p30.c,163 :: 		
0x2250	0x240040  	MOV	#16388, W0
0x2252	0xB7A760  	MOV	WREG, NVMCON
;__Lib_EEPROM_p30.c,166 :: 		
0x2254	0x07EF55  	RCALL	__Lib_EEPROM_p30_KeySequence
;__Lib_EEPROM_p30.c,170 :: 		
0x2256	0xA9C761  	BCLR	NVMCON, #14
;__Lib_EEPROM_p30.c,171 :: 		
L_end_EEPROM_Write:
0x2258	0xFA8000  	ULNK
0x225A	0x060000  	RETURN
; end of _EEPROM_Write
_EEPROM_Erase:
0x1FEC	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.c,99 :: 		
;__Lib_EEPROM_p30.c,101 :: 		
0x1FEE	0x781F8C  	PUSH	W12
0x1FF0	0x24044C  	MOV	#16452, W12
0x1FF2	0x07F5E1  	RCALL	__Lib_EEPROM_p30_EraseGlobal
;__Lib_EEPROM_p30.c,102 :: 		
L_end_EEPROM_Erase:
0x1FF4	0x78064F  	POP	W12
0x1FF6	0xFA8000  	ULNK
0x1FF8	0x060000  	RETURN
; end of _EEPROM_Erase
__Lib_EEPROM_p30_EraseGlobal:
0x0BB6	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.c,69 :: 		
;__Lib_EEPROM_p30.c,70 :: 		
0x0BB8	0x200140  	MOV	#lo_addr(W10), W0
0x0BBA	0x883B1A  	MOV	W10, NVMADR
;__Lib_EEPROM_p30.c,71 :: 		
0x0BBC	0xECA000  	INC2	W0
0x0BBE	0x780010  	MOV	[W0], W0
0x0BC0	0xB7A764  	MOV	WREG, NVMADRU
;__Lib_EEPROM_p30.c,73 :: 		
0x0BC2	0x883B0C  	MOV	W12, NVMCON
;__Lib_EEPROM_p30.c,75 :: 		
0x0BC4	0x07FA9D  	RCALL	__Lib_EEPROM_p30_KeySequence
;__Lib_EEPROM_p30.c,76 :: 		
L_end_EraseGlobal:
0x0BC6	0xFA8000  	ULNK
0x0BC8	0x060000  	RETURN
; end of __Lib_EEPROM_p30_EraseGlobal
__Lib_EEPROM_p30_KeySequence:
0x0100	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.c,33 :: 		
;__Lib_EEPROM_p30.c,35 :: 		
0x0102	0xFC0005  	DISI	#5
;__Lib_EEPROM_p30.c,36 :: 		
0x0104	0x200559  	MOV	#85, W9
;__Lib_EEPROM_p30.c,37 :: 		
0x0106	0x883B39  	MOV	W9, NVMKEY
;__Lib_EEPROM_p30.c,38 :: 		
0x0108	0x200AA9  	MOV	#170, W9
;__Lib_EEPROM_p30.c,39 :: 		
0x010A	0x883B39  	MOV	W9, NVMKEY
;__Lib_EEPROM_p30.c,40 :: 		
0x010C	0xA8E761  	BSET	NVMCON, #15
;__Lib_EEPROM_p30.c,41 :: 		
0x010E	0x000000  	NOP
;__Lib_EEPROM_p30.c,42 :: 		
0x0110	0x000000  	NOP
;__Lib_EEPROM_p30.c,44 :: 		
L_end_KeySequence:
0x0112	0xFA8000  	ULNK
0x0114	0x060000  	RETURN
; end of __Lib_EEPROM_p30_KeySequence
_Can_init:
;can.c,25 :: 		void Can_init() {
;can.c,26 :: 		unsigned int Can_Init_flags = 0;
0x225C	0x781F8A  	PUSH	W10
0x225E	0x781F8B  	PUSH	W11
0x2260	0x781F8C  	PUSH	W12
0x2262	0x781F8D  	PUSH	W13
;can.c,33 :: 		CAN1Initialize(2,4,3,4,2,Can_Init_flags);          // SJW,BRP,PHSEG1,PHSEG2,PROPSEG
0x2264	0x20004D  	MOV	#4, W13
0x2266	0x20003C  	MOV	#3, W12
0x2268	0x20004B  	MOV	#4, W11
0x226A	0x20002A  	MOV	#2, W10
0x226C	0x200FB0  	MOV	#251, W0
0x226E	0x781F80  	PUSH	W0
0x2270	0x200020  	MOV	#2, W0
0x2272	0x781F80  	PUSH	W0
0x2274	0x07FE4B  	RCALL	_CAN1Initialize
0x2276	0xB1004F  	SUB	#4, W15
;can.c,34 :: 		CAN1SetOperationMode(_CAN_MODE_CONFIG,0xFF);
0x2278	0x200FFB  	MOV	#255, W11
0x227A	0x20004A  	MOV	#4, W10
0x227C	0x07F4A6  	RCALL	_CAN1SetOperationMode
;can.c,36 :: 		CAN1SetMask(_CAN_MASK_B1, EBB_MASK_SW_DAUFR, _CAN_CONFIG_MATCH_MSG_TYPE & _CAN_CONFIG_STD_MSG);
0x227E	0x200FFD  	MOV	#255, W13
0x2280	0x207FFB  	MOV	#2047, W11
0x2282	0x20000C  	MOV	#0, W12
0x2284	0xEF2014  	CLR	W10
0x2286	0x07F4FF  	RCALL	_CAN1SetMask
;can.c,37 :: 		CAN1SetFilter(_CAN_FILTER_B1_F1, EBB_FILTER_SW, _CAN_CONFIG_STD_MSG);        //steering wheel commands
0x2288	0x200FFD  	MOV	#255, W13
0x228A	0x20400B  	MOV	#1024, W11
0x228C	0x20000C  	MOV	#0, W12
0x228E	0xEF2014  	CLR	W10
0x2290	0x07F4C3  	RCALL	_CAN1SetFilter
;can.c,38 :: 		CAN1SetFilter(_CAN_FILTER_B1_F2, EBB_FILTER_DAUFR, _CAN_CONFIG_STD_MSG);              //brake pressure
0x2292	0x200FFD  	MOV	#255, W13
0x2294	0x20650B  	MOV	#1616, W11
0x2296	0x20000C  	MOV	#0, W12
0x2298	0x20001A  	MOV	#1, W10
0x229A	0x07F4BE  	RCALL	_CAN1SetFilter
;can.c,40 :: 		CAN1SetMask(_CAN_MASK_B2, ALL_MASK_AUX, _CAN_CONFIG_MATCH_MSG_TYPE & _CAN_CONFIG_STD_MSG);
0x229C	0x200FFD  	MOV	#255, W13
0x229E	0x207F0B  	MOV	#2032, W11
0x22A0	0x20000C  	MOV	#0, W12
0x22A2	0x20001A  	MOV	#1, W10
0x22A4	0x07F4F0  	RCALL	_CAN1SetMask
;can.c,41 :: 		CAN1SetFilter(_CAN_FILTER_B2_F1, ALL_FILTER_AUX, _CAN_CONFIG_STD_MSG);     //auxiliary
0x22A6	0x200FFD  	MOV	#255, W13
0x22A8	0x207F0B  	MOV	#2032, W11
0x22AA	0x20000C  	MOV	#0, W12
0x22AC	0x20002A  	MOV	#2, W10
0x22AE	0x07F4B4  	RCALL	_CAN1SetFilter
;can.c,43 :: 		CAN1SetOperationMode(_CAN_MODE_NORMAL,0xFF);
0x22B0	0x200FFB  	MOV	#255, W11
0x22B2	0xEF2014  	CLR	W10
0x22B4	0x07F48A  	RCALL	_CAN1SetOperationMode
;can.c,45 :: 		Can_initInterrupt();
0x22B6	0x07FD96  	RCALL	_Can_initInterrupt
;can.c,46 :: 		Can_setWritePriority(CAN_PRIORITY_MEDIUM);
0x22B8	0x200FDA  	MOV	#253, W10
0x22BA	0x07FE07  	RCALL	_Can_setWritePriority
;can.c,47 :: 		}
L_end_Can_init:
0x22BC	0x7806CF  	POP	W13
0x22BE	0x78064F  	POP	W12
0x22C0	0x7805CF  	POP	W11
0x22C2	0x78054F  	POP	W10
0x22C4	0x060000  	RETURN
; end of _Can_init
_CAN1Initialize:
0x1F0C	0xFA0000  	LNK	#0
;__Lib_CAN_1.c,822 :: 		
0x1F0E	0x781F8A  	PUSH	W10
0x1F10	0x781F8B  	PUSH	W11
0x1F12	0x781F8C  	PUSH	W12
0x1F14	0x781F8D  	PUSH	W13
; PROPSEG start address is: 4 (W2)
0x1F16	0x97B94E  	MOV	[W14-8], W2
; CAN_CONFIG_FLAGS start address is: 12 (W6)
0x1F18	0x97BB3E  	MOV	[W14-10], W6
;__Lib_CAN_1.c,828 :: 		
0x1F1A	0xA96391  	BCLR	C1CTRLbits, #11
;__Lib_CAN_1.c,829 :: 		
0x1F1C	0xA98391  	BCLR	C1CTRLbits, #12
;__Lib_CAN_1.c,830 :: 		
0x1F1E	0xA9A391  	BCLR	C1CTRLbits, #13
;__Lib_CAN_1.c,831 :: 		
0x1F20	0xA9E391  	BCLR	C1CTRLbits, #15
;__Lib_CAN_1.c,836 :: 		
0x1F22	0xBE9F8A  	PUSH.D	W10
0x1F24	0x200FFB  	MOV	#255, W11
0x1F26	0x20004A  	MOV	#4, W10
0x1F28	0x07F650  	RCALL	_CAN1SetOperationMode
0x1F2A	0xBE054F  	POP.D	W10
;__Lib_CAN_1.c,842 :: 		
;__Lib_CAN_1.c,841 :: 		
;__Lib_CAN_1.c,840 :: 		
;__Lib_CAN_1.c,839 :: 		
;__Lib_CAN_1.c,844 :: 		
0x1F2C	0x781F86  	PUSH	W6
;__Lib_CAN_1.c,843 :: 		
0x1F2E	0x781F82  	PUSH	W2
; PROPSEG end address is: 4 (W2)
;__Lib_CAN_1.c,844 :: 		
0x1F30	0x07F6BE  	RCALL	_CAN1SetBaudRate
0x1F32	0xB1004F  	SUB	#4, W15
;__Lib_CAN_1.c,846 :: 		
0x1F34	0x630070  	AND	W6, #16, W0
;__Lib_CAN_1.c,847 :: 		
0x1F36	0xE10070  	CP	W0, #16
0x1F38	0x3A0001  	BRA NZ	L_CAN1Initialize59
L__CAN1Initialize89:
;__Lib_CAN_1.c,848 :: 		
0x1F3A	0xA8438E  	BSET.B	C1RX0CONbits, #2
L_CAN1Initialize59:
;__Lib_CAN_1.c,851 :: 		
0x1F3C	0xAEA00C  	BTSS	W6, #5
0x1F3E	0x370021  	BRA	L_CAN1Initialize60
;__Lib_CAN_1.c,852 :: 		
0x1F40	0xAE600C  	BTSS	W6, #3
0x1F42	0x370010  	BRA	L_CAN1Initialize61
; CAN_CONFIG_FLAGS end address is: 12 (W6)
;__Lib_CAN_1.c,853 :: 		
0x1F44	0x200FFD  	MOV	#255, W13
0x1F46	0xEF2016  	CLR	W11
0x1F48	0xEF2018  	CLR	W12
0x1F4A	0xEF2014  	CLR	W10
0x1F4C	0x07F69C  	RCALL	_CAN1SetMask
;__Lib_CAN_1.c,854 :: 		
0x1F4E	0x200FFD  	MOV	#255, W13
0x1F50	0xEF2016  	CLR	W11
0x1F52	0xEF2018  	CLR	W12
0x1F54	0x20001A  	MOV	#1, W10
0x1F56	0x07F697  	RCALL	_CAN1SetMask
;__Lib_CAN_1.c,855 :: 		
; FilterConfig1 start address is: 0 (W0)
0x1F58	0x200FF0  	MOV	#255, W0
;__Lib_CAN_1.c,856 :: 		
; FilterConfig2 start address is: 2 (W1)
0x1F5A	0x200FF1  	MOV	#255, W1
;__Lib_CAN_1.c,857 :: 		
0x1F5C	0x781F81  	PUSH	W1
; FilterConfig1 end address is: 0 (W0)
; FilterConfig2 end address is: 2 (W1)
0x1F5E	0x780080  	MOV	W0, W1
0x1F60	0x78004F  	POP	W0
0x1F62	0x37000C  	BRA	L_CAN1Initialize62
L_CAN1Initialize61:
;__Lib_CAN_1.c,859 :: 		
0x1F64	0x200F7D  	MOV	#247, W13
0x1F66	0xEF2016  	CLR	W11
0x1F68	0xEF2018  	CLR	W12
0x1F6A	0xEF2014  	CLR	W10
0x1F6C	0x07F68C  	RCALL	_CAN1SetMask
;__Lib_CAN_1.c,860 :: 		
0x1F6E	0x200F7D  	MOV	#247, W13
0x1F70	0xEF2016  	CLR	W11
0x1F72	0xEF2018  	CLR	W12
0x1F74	0x20001A  	MOV	#1, W10
0x1F76	0x07F687  	RCALL	_CAN1SetMask
;__Lib_CAN_1.c,861 :: 		
; FilterConfig1 start address is: 2 (W1)
0x1F78	0x200F71  	MOV	#247, W1
;__Lib_CAN_1.c,862 :: 		
; FilterConfig2 start address is: 0 (W0)
0x1F7A	0x200F70  	MOV	#247, W0
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
;__Lib_CAN_1.c,863 :: 		
L_CAN1Initialize62:
;__Lib_CAN_1.c,864 :: 		
; FilterConfig2 start address is: 0 (W0)
; FilterConfig1 start address is: 2 (W1)
0x1F7C	0x780281  	MOV	W1, W5
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
0x1F7E	0x780200  	MOV	W0, W4
0x1F80	0x37000E  	BRA	L_CAN1Initialize63
L_CAN1Initialize60:
;__Lib_CAN_1.c,866 :: 		
0x1F82	0x200DFD  	MOV	#223, W13
0x1F84	0xEF2016  	CLR	W11
0x1F86	0xEF2018  	CLR	W12
0x1F88	0xEF2014  	CLR	W10
0x1F8A	0x07F67D  	RCALL	_CAN1SetMask
;__Lib_CAN_1.c,867 :: 		
0x1F8C	0x200DFD  	MOV	#223, W13
0x1F8E	0xEF2016  	CLR	W11
0x1F90	0xEF2018  	CLR	W12
0x1F92	0x20001A  	MOV	#1, W10
0x1F94	0x07F678  	RCALL	_CAN1SetMask
;__Lib_CAN_1.c,868 :: 		
; FilterConfig1 start address is: 2 (W1)
0x1F96	0x200FF1  	MOV	#255, W1
;__Lib_CAN_1.c,869 :: 		
; FilterConfig2 start address is: 0 (W0)
0x1F98	0x200F70  	MOV	#247, W0
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
0x1F9A	0x780281  	MOV	W1, W5
0x1F9C	0x780200  	MOV	W0, W4
;__Lib_CAN_1.c,870 :: 		
L_CAN1Initialize63:
;__Lib_CAN_1.c,875 :: 		
; FilterConfig2 start address is: 8 (W4)
; FilterConfig1 start address is: 10 (W5)
0x1F9E	0x780685  	MOV	W5, W13
0x1FA0	0xEF2016  	CLR	W11
0x1FA2	0xEF2018  	CLR	W12
0x1FA4	0xEF2014  	CLR	W10
0x1FA6	0x07F638  	RCALL	_CAN1SetFilter
;__Lib_CAN_1.c,876 :: 		
0x1FA8	0x780685  	MOV	W5, W13
; FilterConfig1 end address is: 10 (W5)
0x1FAA	0xEF2016  	CLR	W11
0x1FAC	0xEF2018  	CLR	W12
0x1FAE	0x20001A  	MOV	#1, W10
0x1FB0	0x07F633  	RCALL	_CAN1SetFilter
;__Lib_CAN_1.c,877 :: 		
0x1FB2	0x780684  	MOV	W4, W13
0x1FB4	0xEF2016  	CLR	W11
0x1FB6	0xEF2018  	CLR	W12
0x1FB8	0x20002A  	MOV	#2, W10
0x1FBA	0x07F62E  	RCALL	_CAN1SetFilter
;__Lib_CAN_1.c,878 :: 		
0x1FBC	0x780684  	MOV	W4, W13
0x1FBE	0xEF2016  	CLR	W11
0x1FC0	0xEF2018  	CLR	W12
0x1FC2	0x20003A  	MOV	#3, W10
0x1FC4	0x07F629  	RCALL	_CAN1SetFilter
;__Lib_CAN_1.c,879 :: 		
0x1FC6	0x780684  	MOV	W4, W13
0x1FC8	0xEF2016  	CLR	W11
0x1FCA	0xEF2018  	CLR	W12
0x1FCC	0x20004A  	MOV	#4, W10
0x1FCE	0x07F624  	RCALL	_CAN1SetFilter
;__Lib_CAN_1.c,880 :: 		
0x1FD0	0x780684  	MOV	W4, W13
; FilterConfig2 end address is: 8 (W4)
0x1FD2	0xEF2016  	CLR	W11
0x1FD4	0xEF2018  	CLR	W12
0x1FD6	0x20005A  	MOV	#5, W10
0x1FD8	0x07F61F  	RCALL	_CAN1SetFilter
;__Lib_CAN_1.c,883 :: 		
0x1FDA	0x200FFB  	MOV	#255, W11
0x1FDC	0xEF2014  	CLR	W10
0x1FDE	0x07F5F5  	RCALL	_CAN1SetOperationMode
;__Lib_CAN_1.c,884 :: 		
L_end_CAN1Initialize:
0x1FE0	0x7806CF  	POP	W13
0x1FE2	0x78064F  	POP	W12
0x1FE4	0x7805CF  	POP	W11
0x1FE6	0x78054F  	POP	W10
0x1FE8	0xFA8000  	ULNK
0x1FEA	0x060000  	RETURN
; end of _CAN1Initialize
_CAN1SetOperationMode:
0x0BCA	0xFA0000  	LNK	#0
;__Lib_CAN_1.c,333 :: 		
;__Lib_CAN_1.c,334 :: 		
0x0BCC	0xE20016  	CP0	W11
0x0BCE	0x320017  	BRA Z	L_CAN1SetOperationMode13
L__CAN1SetOperationMode69:
;__Lib_CAN_1.c,336 :: 		
0x0BD0	0x78008A  	MOV	W10, W1
0x0BD2	0xB3C080  	MOV.B	#8, W0
0x0BD4	0xFB0000  	SE	W0, W0
0x0BD6	0xDD0880  	SL	W1, W0, W1
0x0BD8	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x0BDA	0x688090  	XOR	W1, [W0], W1
0x0BDC	0x207000  	MOV	#1792, W0
0x0BDE	0x608080  	AND	W1, W0, W1
0x0BE0	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x0BE2	0x688090  	XOR	W1, [W0], W1
0x0BE4	0x881C81  	MOV	W1, C1CTRLbits
;__Lib_CAN_1.c,338 :: 		
L_CAN1SetOperationMode14:
0x0BE6	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x0BE8	0x784010  	MOV.B	[W0], W0
0x0BEA	0x784080  	MOV.B	W0, W1
0x0BEC	0xB3CE00  	MOV.B	#224, W0
0x0BEE	0x60C080  	AND.B	W1, W0, W1
0x0BF0	0xFB8001  	ZE	W1, W0
0x0BF2	0xDE00C5  	LSR	W0, #5, W1
0x0BF4	0xFB8001  	ZE	W1, W0
0x0BF6	0xE1000A  	CP	W0, W10
0x0BF8	0x320001  	BRA Z	L_CAN1SetOperationMode15
L__CAN1SetOperationMode70:
0x0BFA	0x37FFF5  	BRA	L_CAN1SetOperationMode14
L_CAN1SetOperationMode15:
;__Lib_CAN_1.c,339 :: 		
0x0BFC	0x37000B  	BRA	L_CAN1SetOperationMode16
L_CAN1SetOperationMode13:
;__Lib_CAN_1.c,342 :: 		
0x0BFE	0x78008A  	MOV	W10, W1
0x0C00	0xB3C080  	MOV.B	#8, W0
0x0C02	0xFB0000  	SE	W0, W0
0x0C04	0xDD0880  	SL	W1, W0, W1
0x0C06	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x0C08	0x688090  	XOR	W1, [W0], W1
0x0C0A	0x207000  	MOV	#1792, W0
0x0C0C	0x608080  	AND	W1, W0, W1
0x0C0E	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x0C10	0x688090  	XOR	W1, [W0], W1
0x0C12	0x881C81  	MOV	W1, C1CTRLbits
;__Lib_CAN_1.c,344 :: 		
L_CAN1SetOperationMode16:
;__Lib_CAN_1.c,345 :: 		
L_end_CAN1SetOperationMode:
0x0C14	0xFA8000  	ULNK
0x0C16	0x060000  	RETURN
; end of _CAN1SetOperationMode
_CAN1SetBaudRate:
0x0CAE	0xFA0000  	LNK	#0
;__Lib_CAN_1.c,425 :: 		
; PROPSEG start address is: 2 (W1)
0x0CB0	0x97B8CE  	MOV	[W14-8], W1
; CAN_CONFIG_FLAGS start address is: 8 (W4)
0x0CB2	0x97BA3E  	MOV	[W14-10], W4
;__Lib_CAN_1.c,428 :: 		
0x0CB4	0x550061  	SUB	W10, #1, W0
0x0CB6	0x780500  	MOV	W0, W10
;__Lib_CAN_1.c,429 :: 		
0x0CB8	0x558061  	SUB	W11, #1, W0
0x0CBA	0x780580  	MOV	W0, W11
;__Lib_CAN_1.c,430 :: 		
0x0CBC	0x560061  	SUB	W12, #1, W0
0x0CBE	0x780600  	MOV	W0, W12
;__Lib_CAN_1.c,431 :: 		
0x0CC0	0x568061  	SUB	W13, #1, W0
0x0CC2	0x780680  	MOV	W0, W13
;__Lib_CAN_1.c,432 :: 		
; PROPSEG start address is: 10 (W5)
0x0CC4	0x5082E1  	SUB	W1, #1, W5
; PROPSEG end address is: 2 (W1)
;__Lib_CAN_1.c,434 :: 		
0x0CC6	0x78418A  	MOV.B	W10, W3
0x0CC8	0xB3C060  	MOV.B	#6, W0
0x0CCA	0xFB8083  	ZE	W3, W1
0x0CCC	0xFB0100  	SE	W0, W2
0x0CCE	0xDD0982  	SL	W1, W2, W3
0x0CD0	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0CD2	0x69C190  	XOR.B	W3, [W0], W3
0x0CD4	0xB3CC00  	MOV.B	#192, W0
0x0CD6	0x61C180  	AND.B	W3, W0, W3
0x0CD8	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0CDA	0x69C190  	XOR.B	W3, [W0], W3
0x0CDC	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0CDE	0x784803  	MOV.B	W3, [W0]
;__Lib_CAN_1.c,435 :: 		
0x0CE0	0x78408B  	MOV.B	W11, W1
0x0CE2	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0CE4	0x68C090  	XOR.B	W1, [W0], W1
0x0CE6	0xB3C3F0  	MOV.B	#63, W0
0x0CE8	0x60C080  	AND.B	W1, W0, W1
0x0CEA	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0CEC	0x68C090  	XOR.B	W1, [W0], W1
0x0CEE	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0CF0	0x784801  	MOV.B	W1, [W0]
;__Lib_CAN_1.c,436 :: 		
0x0CF2	0x784085  	MOV.B	W5, W1
; PROPSEG end address is: 10 (W5)
0x0CF4	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0CF6	0x68C090  	XOR.B	W1, [W0], W1
0x0CF8	0x60C0E7  	AND.B	W1, #7, W1
0x0CFA	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0CFC	0x68C090  	XOR.B	W1, [W0], W1
0x0CFE	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0D00	0x784801  	MOV.B	W1, [W0]
;__Lib_CAN_1.c,437 :: 		
0x0D02	0x78418C  	MOV.B	W12, W3
0x0D04	0xB3C030  	MOV.B	#3, W0
0x0D06	0xFB8083  	ZE	W3, W1
0x0D08	0xFB0100  	SE	W0, W2
0x0D0A	0xDD0982  	SL	W1, W2, W3
0x0D0C	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0D0E	0x69C190  	XOR.B	W3, [W0], W3
0x0D10	0xB3C380  	MOV.B	#56, W0
0x0D12	0x61C180  	AND.B	W3, W0, W3
0x0D14	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0D16	0x69C190  	XOR.B	W3, [W0], W3
0x0D18	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0D1A	0x784803  	MOV.B	W3, [W0]
;__Lib_CAN_1.c,438 :: 		
0x0D1C	0x78008D  	MOV	W13, W1
0x0D1E	0xB3C080  	MOV.B	#8, W0
0x0D20	0xFB0000  	SE	W0, W0
0x0D22	0xDD0880  	SL	W1, W0, W1
0x0D24	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0D26	0x688090  	XOR	W1, [W0], W1
0x0D28	0x207000  	MOV	#1792, W0
0x0D2A	0x608080  	AND	W1, W0, W1
0x0D2C	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0D2E	0x688090  	XOR	W1, [W0], W1
0x0D30	0x881CA1  	MOV	W1, C1CFG2bits
;__Lib_CAN_1.c,440 :: 		
0x0D32	0xAF4008  	BTSC	W4, #2
0x0D34	0x370001  	BRA	L_CAN1SetBaudRate17
;__Lib_CAN_1.c,441 :: 		
0x0D36	0xA8C394  	BSET	C1CFG2bits, #6
L_CAN1SetBaudRate17:
;__Lib_CAN_1.c,443 :: 		
0x0D38	0xAE0008  	BTSS	W4, #0
0x0D3A	0x370001  	BRA	L_CAN1SetBaudRate18
;__Lib_CAN_1.c,444 :: 		
0x0D3C	0xA8E394  	BSET	C1CFG2bits, #7
L_CAN1SetBaudRate18:
;__Lib_CAN_1.c,446 :: 		
0x0D3E	0xAE2008  	BTSS	W4, #1
0x0D40	0x370001  	BRA	L_CAN1SetBaudRate19
; CAN_CONFIG_FLAGS end address is: 8 (W4)
;__Lib_CAN_1.c,447 :: 		
0x0D42	0xA8C395  	BSET	C1CFG2bits, #14
L_CAN1SetBaudRate19:
;__Lib_CAN_1.c,448 :: 		
L_end_CAN1SetBaudRate:
0x0D44	0xFA8000  	ULNK
0x0D46	0x060000  	RETURN
; end of _CAN1SetBaudRate
_CAN1SetMask:
0x0C86	0xFA0000  	LNK	#0
;__Lib_CAN_1.c,469 :: 		
;__Lib_CAN_1.c,471 :: 		
0x0C88	0x781F8A  	PUSH	W10
0x0C8A	0x781F8D  	PUSH	W13
0x0C8C	0xE15060  	CP	W10, #0
0x0C8E	0x3A0006  	BRA NZ	L_CAN1SetMask20
L__CAN1SetMask74:
;__Lib_CAN_1.c,472 :: 		
0x0C90	0x781F8D  	PUSH	W13
0x0C92	0x20330A  	MOV	#lo_addr(C1RXM0SID), W10
0x0C94	0xEF201A  	CLR	W13
0x0C96	0x07FA78  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x0C98	0xB1002F  	SUB	#2, W15
0x0C9A	0x370005  	BRA	L_CAN1SetMask21
L_CAN1SetMask20:
;__Lib_CAN_1.c,475 :: 		
0x0C9C	0x781F8D  	PUSH	W13
0x0C9E	0x20338A  	MOV	#lo_addr(C1RXM1SID), W10
0x0CA0	0xEF201A  	CLR	W13
0x0CA2	0x07FA72  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x0CA4	0xB1002F  	SUB	#2, W15
L_CAN1SetMask21:
;__Lib_CAN_1.c,476 :: 		
L_end_CAN1SetMask:
0x0CA6	0x7806CF  	POP	W13
0x0CA8	0x78054F  	POP	W10
0x0CAA	0xFA8000  	ULNK
0x0CAC	0x060000  	RETURN
; end of _CAN1SetMask
__Lib_CAN_1_CAN1IDToRegs:
0x0188	0xFA0000  	LNK	#0
;__Lib_CAN_1.c,246 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x018A	0x97B8CE  	MOV	[W14-8], W1
;__Lib_CAN_1.c,247 :: 		
0x018C	0x37008B  	BRA	L___Lib_CAN_1_CAN1IDToRegs0
;__Lib_CAN_1.c,248 :: 		
L___Lib_CAN_1_CAN1IDToRegs2:
;__Lib_CAN_1.c,249 :: 		
0x018E	0xAE6002  	BTSS	W1, #3
0x0190	0x370003  	BRA	L___Lib_CAN_1_CAN1IDToRegs3
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_1.c,251 :: 		
0x0192	0xDD5842  	SL	W11, #2, W0
0x0194	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,253 :: 		
0x0196	0x370019  	BRA	L___Lib_CAN_1_CAN1IDToRegs4
L___Lib_CAN_1_CAN1IDToRegs3:
;__Lib_CAN_1.c,255 :: 		
0x0198	0x200163  	MOV	#lo_addr(W11), W3
0x019A	0x418062  	ADD	W3, #2, W0
0x019C	0x780090  	MOV	[W0], W1
0x019E	0x21FFC0  	MOV	#8188, W0
0x01A0	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_1.c,256 :: 		
0x01A2	0x78001A  	MOV	[W10], W0
0x01A4	0x700061  	IOR	W0, #1, W0
0x01A6	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,257 :: 		
0x01A8	0x450162  	ADD	W10, #2, W2
0x01AA	0x780502  	MOV	W2, W10
;__Lib_CAN_1.c,258 :: 		
0x01AC	0x418062  	ADD	W3, #2, W0
0x01AE	0x780010  	MOV	[W0], W0
0x01B0	0x600063  	AND	W0, #3, W0
0x01B2	0xDD00CA  	SL	W0, #10, W1
0x01B4	0xDE5846  	LSR	W11, #6, W0
0x01B6	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_1.c,259 :: 		
0x01B8	0x450162  	ADD	W10, #2, W2
0x01BA	0x780502  	MOV	W2, W10
;__Lib_CAN_1.c,260 :: 		
0x01BC	0x780092  	MOV	[W2], W1
0x01BE	0x203FF0  	MOV	#1023, W0
0x01C0	0x608900  	AND	W1, W0, [W2]
;__Lib_CAN_1.c,261 :: 		
0x01C2	0x2003F0  	MOV	#63, W0
0x01C4	0x658000  	AND	W11, W0, W0
0x01C6	0xDD004A  	SL	W0, #10, W0
0x01C8	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,262 :: 		
L___Lib_CAN_1_CAN1IDToRegs4:
;__Lib_CAN_1.c,263 :: 		
0x01CA	0x370072  	BRA	L___Lib_CAN_1_CAN1IDToRegs1
;__Lib_CAN_1.c,265 :: 		
L___Lib_CAN_1_CAN1IDToRegs5:
;__Lib_CAN_1.c,266 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x01CC	0xAEA002  	BTSS	W1, #5
0x01CE	0x37001F  	BRA	L___Lib_CAN_1_CAN1IDToRegs6
;__Lib_CAN_1.c,267 :: 		
0x01D0	0xAE6002  	BTSS	W1, #3
0x01D2	0x370006  	BRA	L___Lib_CAN_1_CAN1IDToRegs7
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_1.c,269 :: 		
0x01D4	0xDD5842  	SL	W11, #2, W0
0x01D6	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,270 :: 		
0x01D8	0x78001A  	MOV	[W10], W0
0x01DA	0x700061  	IOR	W0, #1, W0
0x01DC	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,271 :: 		
0x01DE	0x370016  	BRA	L___Lib_CAN_1_CAN1IDToRegs8
L___Lib_CAN_1_CAN1IDToRegs7:
;__Lib_CAN_1.c,273 :: 		
0x01E0	0x200163  	MOV	#lo_addr(W11), W3
0x01E2	0x418062  	ADD	W3, #2, W0
0x01E4	0x780090  	MOV	[W0], W1
0x01E6	0x21FFC0  	MOV	#8188, W0
0x01E8	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_1.c,274 :: 		
0x01EA	0x78001A  	MOV	[W10], W0
0x01EC	0x700061  	IOR	W0, #1, W0
0x01EE	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,275 :: 		
0x01F0	0x450162  	ADD	W10, #2, W2
0x01F2	0x780502  	MOV	W2, W10
;__Lib_CAN_1.c,276 :: 		
0x01F4	0x418062  	ADD	W3, #2, W0
0x01F6	0x780010  	MOV	[W0], W0
0x01F8	0x600063  	AND	W0, #3, W0
0x01FA	0xDD00CA  	SL	W0, #10, W1
0x01FC	0xDE5846  	LSR	W11, #6, W0
0x01FE	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_1.c,277 :: 		
0x0200	0x4500E2  	ADD	W10, #2, W1
0x0202	0x780501  	MOV	W1, W10
;__Lib_CAN_1.c,278 :: 		
0x0204	0x2003F0  	MOV	#63, W0
0x0206	0x658000  	AND	W11, W0, W0
0x0208	0xDD004A  	SL	W0, #10, W0
0x020A	0x780880  	MOV	W0, [W1]
;__Lib_CAN_1.c,279 :: 		
L___Lib_CAN_1_CAN1IDToRegs8:
;__Lib_CAN_1.c,280 :: 		
0x020C	0x370016  	BRA	L___Lib_CAN_1_CAN1IDToRegs9
L___Lib_CAN_1_CAN1IDToRegs6:
;__Lib_CAN_1.c,282 :: 		
0x020E	0x200163  	MOV	#lo_addr(W11), W3
0x0210	0x418062  	ADD	W3, #2, W0
0x0212	0x780090  	MOV	[W0], W1
0x0214	0x21FFC0  	MOV	#8188, W0
0x0216	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_1.c,283 :: 		
0x0218	0x78009A  	MOV	[W10], W1
0x021A	0x2FFFE0  	MOV	#65534, W0
0x021C	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_1.c,284 :: 		
0x021E	0x450162  	ADD	W10, #2, W2
0x0220	0x780502  	MOV	W2, W10
;__Lib_CAN_1.c,285 :: 		
0x0222	0x418062  	ADD	W3, #2, W0
0x0224	0x780010  	MOV	[W0], W0
0x0226	0x600063  	AND	W0, #3, W0
0x0228	0xDD00CA  	SL	W0, #10, W1
0x022A	0xDE5846  	LSR	W11, #6, W0
0x022C	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_1.c,286 :: 		
0x022E	0x4500E2  	ADD	W10, #2, W1
0x0230	0x780501  	MOV	W1, W10
;__Lib_CAN_1.c,287 :: 		
0x0232	0x2003F0  	MOV	#63, W0
0x0234	0x658000  	AND	W11, W0, W0
0x0236	0xDD004A  	SL	W0, #10, W0
0x0238	0x780880  	MOV	W0, [W1]
;__Lib_CAN_1.c,288 :: 		
L___Lib_CAN_1_CAN1IDToRegs9:
;__Lib_CAN_1.c,289 :: 		
0x023A	0x37003A  	BRA	L___Lib_CAN_1_CAN1IDToRegs1
;__Lib_CAN_1.c,291 :: 		
L___Lib_CAN_1_CAN1IDToRegs10:
;__Lib_CAN_1.c,292 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x023C	0xAE6002  	BTSS	W1, #3
0x023E	0x37000C  	BRA	L___Lib_CAN_1_CAN1IDToRegs11
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_1.c,294 :: 		
0x0240	0x2003F0  	MOV	#63, W0
0x0242	0x658000  	AND	W11, W0, W0
0x0244	0xDD0042  	SL	W0, #2, W0
0x0246	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,295 :: 		
0x0248	0x2FFC00  	MOV	#65472, W0
0x024A	0x658000  	AND	W11, W0, W0
0x024C	0xDD0045  	SL	W0, #5, W0
0x024E	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_1.c,296 :: 		
0x0250	0x78009A  	MOV	[W10], W1
0x0252	0x2FFFE0  	MOV	#65534, W0
0x0254	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_1.c,297 :: 		
0x0256	0x370025  	BRA	L___Lib_CAN_1_CAN1IDToRegs12
L___Lib_CAN_1_CAN1IDToRegs11:
;__Lib_CAN_1.c,299 :: 		
0x0258	0x200163  	MOV	#lo_addr(W11), W3
0x025A	0x418062  	ADD	W3, #2, W0
0x025C	0x780090  	MOV	[W0], W1
0x025E	0x21F000  	MOV	#7936, W0
0x0260	0x608000  	AND	W1, W0, W0
0x0262	0xDD0043  	SL	W0, #3, W0
0x0264	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,300 :: 		
0x0266	0x4180E2  	ADD	W3, #2, W1
0x0268	0x200FC0  	MOV	#252, W0
0x026A	0x600011  	AND	W0, [W1], W0
0x026C	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_1.c,301 :: 		
0x026E	0x78001A  	MOV	[W10], W0
0x0270	0x700061  	IOR	W0, #1, W0
0x0272	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_1.c,302 :: 		
0x0274	0x450162  	ADD	W10, #2, W2
0x0276	0x780502  	MOV	W2, W10
;__Lib_CAN_1.c,303 :: 		
0x0278	0x418062  	ADD	W3, #2, W0
0x027A	0x780010  	MOV	[W0], W0
0x027C	0x600063  	AND	W0, #3, W0
0x027E	0xDD00CE  	SL	W0, #14, W1
0x0280	0x2C0000  	MOV	#49152, W0
0x0282	0x658000  	AND	W11, W0, W0
0x0284	0xDE0042  	LSR	W0, #2, W0
0x0286	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_1.c,304 :: 		
0x0288	0x23FC00  	MOV	#16320, W0
0x028A	0x658000  	AND	W11, W0, W0
0x028C	0xDE0046  	LSR	W0, #6, W0
0x028E	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_1.c,305 :: 		
0x0290	0x4500E2  	ADD	W10, #2, W1
0x0292	0x780501  	MOV	W1, W10
;__Lib_CAN_1.c,306 :: 		
0x0294	0x2003F0  	MOV	#63, W0
0x0296	0x658000  	AND	W11, W0, W0
0x0298	0xDD004A  	SL	W0, #10, W0
0x029A	0x780880  	MOV	W0, [W1]
;__Lib_CAN_1.c,307 :: 		
0x029C	0x78009A  	MOV	[W10], W1
0x029E	0x201800  	MOV	#384, W0
0x02A0	0x708D00  	IOR	W1, W0, [W10]
;__Lib_CAN_1.c,308 :: 		
L___Lib_CAN_1_CAN1IDToRegs12:
;__Lib_CAN_1.c,309 :: 		
0x02A2	0x370006  	BRA	L___Lib_CAN_1_CAN1IDToRegs1
;__Lib_CAN_1.c,311 :: 		
L___Lib_CAN_1_CAN1IDToRegs0:
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x02A4	0xE16861  	CP	W13, #1
0x02A6	0x32FF73  	BRA Z	L___Lib_CAN_1_CAN1IDToRegs2
L___Lib_CAN_1_CAN1IDToRegs65:
0x02A8	0xE16860  	CP	W13, #0
0x02AA	0x32FF90  	BRA Z	L___Lib_CAN_1_CAN1IDToRegs5
L___Lib_CAN_1_CAN1IDToRegs66:
0x02AC	0xE16862  	CP	W13, #2
0x02AE	0x32FFC6  	BRA Z	L___Lib_CAN_1_CAN1IDToRegs10
L___Lib_CAN_1_CAN1IDToRegs67:
; CAN_CONFIG_FLAGS end address is: 2 (W1)
L___Lib_CAN_1_CAN1IDToRegs1:
;__Lib_CAN_1.c,312 :: 		
L_end_CAN1IDToRegs:
0x02B0	0xFA8000  	ULNK
0x02B2	0x060000  	RETURN
; end of __Lib_CAN_1_CAN1IDToRegs
_CAN1SetFilter:
0x0C18	0xFA0000  	LNK	#0
;__Lib_CAN_1.c,498 :: 		
;__Lib_CAN_1.c,501 :: 		
0x0C1A	0x781F8A  	PUSH	W10
0x0C1C	0x781F8D  	PUSH	W13
0x0C1E	0x370024  	BRA	L_CAN1SetFilter22
;__Lib_CAN_1.c,502 :: 		
L_CAN1SetFilter24:
;__Lib_CAN_1.c,503 :: 		
0x0C20	0x781F8D  	PUSH	W13
0x0C22	0x20300A  	MOV	#lo_addr(C1RXF0SID), W10
0x0C24	0x20001D  	MOV	#1, W13
0x0C26	0x07FAB0  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x0C28	0xB1002F  	SUB	#2, W15
;__Lib_CAN_1.c,504 :: 		
0x0C2A	0x370029  	BRA	L_CAN1SetFilter23
;__Lib_CAN_1.c,505 :: 		
L_CAN1SetFilter25:
;__Lib_CAN_1.c,506 :: 		
0x0C2C	0x781F8D  	PUSH	W13
0x0C2E	0x20308A  	MOV	#lo_addr(C1RXF1SID), W10
0x0C30	0x20001D  	MOV	#1, W13
0x0C32	0x07FAAA  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x0C34	0xB1002F  	SUB	#2, W15
;__Lib_CAN_1.c,507 :: 		
0x0C36	0x370023  	BRA	L_CAN1SetFilter23
;__Lib_CAN_1.c,508 :: 		
L_CAN1SetFilter26:
;__Lib_CAN_1.c,509 :: 		
0x0C38	0x781F8D  	PUSH	W13
0x0C3A	0x20310A  	MOV	#lo_addr(C1RXF2SID), W10
0x0C3C	0x20001D  	MOV	#1, W13
0x0C3E	0x07FAA4  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x0C40	0xB1002F  	SUB	#2, W15
;__Lib_CAN_1.c,510 :: 		
0x0C42	0x37001D  	BRA	L_CAN1SetFilter23
;__Lib_CAN_1.c,511 :: 		
L_CAN1SetFilter27:
;__Lib_CAN_1.c,512 :: 		
0x0C44	0x781F8D  	PUSH	W13
0x0C46	0x20318A  	MOV	#lo_addr(C1RXF3SID), W10
0x0C48	0x20001D  	MOV	#1, W13
0x0C4A	0x07FA9E  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x0C4C	0xB1002F  	SUB	#2, W15
;__Lib_CAN_1.c,513 :: 		
0x0C4E	0x370017  	BRA	L_CAN1SetFilter23
;__Lib_CAN_1.c,514 :: 		
L_CAN1SetFilter28:
;__Lib_CAN_1.c,515 :: 		
0x0C50	0x781F8D  	PUSH	W13
0x0C52	0x20320A  	MOV	#lo_addr(C1RXF4SID), W10
0x0C54	0x20001D  	MOV	#1, W13
0x0C56	0x07FA98  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x0C58	0xB1002F  	SUB	#2, W15
;__Lib_CAN_1.c,516 :: 		
0x0C5A	0x370011  	BRA	L_CAN1SetFilter23
;__Lib_CAN_1.c,517 :: 		
L_CAN1SetFilter29:
;__Lib_CAN_1.c,518 :: 		
0x0C5C	0x781F8D  	PUSH	W13
0x0C5E	0x20328A  	MOV	#lo_addr(C1RXF5SID), W10
0x0C60	0x20001D  	MOV	#1, W13
0x0C62	0x07FA92  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x0C64	0xB1002F  	SUB	#2, W15
;__Lib_CAN_1.c,519 :: 		
0x0C66	0x37000B  	BRA	L_CAN1SetFilter23
L_CAN1SetFilter22:
0x0C68	0xE15060  	CP	W10, #0
0x0C6A	0x32FFDA  	BRA Z	L_CAN1SetFilter24
L__CAN1SetFilter76:
0x0C6C	0xE15061  	CP	W10, #1
0x0C6E	0x32FFDE  	BRA Z	L_CAN1SetFilter25
L__CAN1SetFilter77:
0x0C70	0xE15062  	CP	W10, #2
0x0C72	0x32FFE2  	BRA Z	L_CAN1SetFilter26
L__CAN1SetFilter78:
0x0C74	0xE15063  	CP	W10, #3
0x0C76	0x32FFE6  	BRA Z	L_CAN1SetFilter27
L__CAN1SetFilter79:
0x0C78	0xE15064  	CP	W10, #4
0x0C7A	0x32FFEA  	BRA Z	L_CAN1SetFilter28
L__CAN1SetFilter80:
0x0C7C	0x37FFEF  	BRA	L_CAN1SetFilter29
L_CAN1SetFilter23:
;__Lib_CAN_1.c,520 :: 		
L_end_CAN1SetFilter:
0x0C7E	0x7806CF  	POP	W13
0x0C80	0x78054F  	POP	W10
0x0C82	0xFA8000  	ULNK
0x0C84	0x060000  	RETURN
; end of _CAN1SetFilter
_Can_initInterrupt:
;can.c,128 :: 		void Can_initInterrupt(void) {
;can.c,130 :: 		INTERRUPT_PROTECT(IEC1BITS.C1IE = 1);
0x1DE4	0x200420  	MOV	#lo_addr(SRbits), W0
0x1DE6	0x784010  	MOV.B	[W0], W0
0x1DE8	0x784080  	MOV.B	W0, W1
0x1DEA	0xB3CE00  	MOV.B	#224, W0
0x1DEC	0x60C080  	AND.B	W1, W0, W1
0x1DEE	0xFB8001  	ZE	W1, W0
0x1DF0	0xDE00C5  	LSR	W0, #5, W1
; save_sr start address is: 4 (W2)
0x1DF2	0xFB8101  	ZE	W1, W2
; DISI_save start address is: 6 (W3)
0x1DF4	0x800293  	MOV	DISICNT, W3
0x1DF6	0xFC03FF  	DISI	#1023
0x1DF8	0x200420  	MOV	#lo_addr(SRbits), W0
0x1DFA	0x784090  	MOV.B	[W0], W1
0x1DFC	0xB3CE00  	MOV.B	#224, W0
0x1DFE	0x70C080  	IOR.B	W1, W0, W1
0x1E00	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E02	0x784801  	MOV.B	W1, [W0]
0x1E04	0x000000  	NOP
0x1E06	0x000000  	NOP
0x1E08	0x880293  	MOV	W3, DISICNT
; DISI_save end address is: 6 (W3)
0x1E0A	0xA8608F  	BSET	IEC1bits, #11
; DISI_save start address is: 8 (W4)
0x1E0C	0x800294  	MOV	DISICNT, W4
0x1E0E	0xFC03FF  	DISI	#1023
0x1E10	0x784182  	MOV.B	W2, W3
; save_sr end address is: 4 (W2)
0x1E12	0xB3C050  	MOV.B	#5, W0
0x1E14	0xFB8083  	ZE	W3, W1
0x1E16	0xFB0100  	SE	W0, W2
0x1E18	0xDD0982  	SL	W1, W2, W3
0x1E1A	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E1C	0x69C190  	XOR.B	W3, [W0], W3
0x1E1E	0xB3CE00  	MOV.B	#224, W0
0x1E20	0x61C180  	AND.B	W3, W0, W3
0x1E22	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E24	0x69C190  	XOR.B	W3, [W0], W3
0x1E26	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E28	0x784803  	MOV.B	W3, [W0]
0x1E2A	0x000000  	NOP
0x1E2C	0x000000  	NOP
0x1E2E	0x880294  	MOV	W4, DISICNT
; DISI_save end address is: 8 (W4)
;can.c,131 :: 		INTERRUPT_PROTECT(C1INTEBITS.RXB0IE = 1); //An interrupt is generated everytime that a message passes through the mask in buffer 0
0x1E30	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E32	0x784010  	MOV.B	[W0], W0
0x1E34	0x784080  	MOV.B	W0, W1
0x1E36	0xB3CE00  	MOV.B	#224, W0
0x1E38	0x60C080  	AND.B	W1, W0, W1
0x1E3A	0xFB8001  	ZE	W1, W0
0x1E3C	0xDE00C5  	LSR	W0, #5, W1
; save_sr start address is: 4 (W2)
0x1E3E	0xFB8101  	ZE	W1, W2
; DISI_save start address is: 6 (W3)
0x1E40	0x800293  	MOV	DISICNT, W3
0x1E42	0xFC03FF  	DISI	#1023
0x1E44	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E46	0x784090  	MOV.B	[W0], W1
0x1E48	0xB3CE00  	MOV.B	#224, W0
0x1E4A	0x70C080  	IOR.B	W1, W0, W1
0x1E4C	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E4E	0x784801  	MOV.B	W1, [W0]
0x1E50	0x000000  	NOP
0x1E52	0x000000  	NOP
0x1E54	0x880293  	MOV	W3, DISICNT
; DISI_save end address is: 6 (W3)
0x1E56	0xA80398  	BSET.B	C1INTEbits, #0
; DISI_save start address is: 8 (W4)
0x1E58	0x800294  	MOV	DISICNT, W4
0x1E5A	0xFC03FF  	DISI	#1023
0x1E5C	0x784182  	MOV.B	W2, W3
; save_sr end address is: 4 (W2)
0x1E5E	0xB3C050  	MOV.B	#5, W0
0x1E60	0xFB8083  	ZE	W3, W1
0x1E62	0xFB0100  	SE	W0, W2
0x1E64	0xDD0982  	SL	W1, W2, W3
0x1E66	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E68	0x69C190  	XOR.B	W3, [W0], W3
0x1E6A	0xB3CE00  	MOV.B	#224, W0
0x1E6C	0x61C180  	AND.B	W3, W0, W3
0x1E6E	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E70	0x69C190  	XOR.B	W3, [W0], W3
0x1E72	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E74	0x784803  	MOV.B	W3, [W0]
0x1E76	0x000000  	NOP
0x1E78	0x000000  	NOP
0x1E7A	0x880294  	MOV	W4, DISICNT
; DISI_save end address is: 8 (W4)
;can.c,132 :: 		INTERRUPT_PROTECT(C1INTEBITS.RXB1IE = 1); //Suddividere gli ID da ricevere nei due buffer
0x1E7C	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E7E	0x784010  	MOV.B	[W0], W0
0x1E80	0x784080  	MOV.B	W0, W1
0x1E82	0xB3CE00  	MOV.B	#224, W0
0x1E84	0x60C080  	AND.B	W1, W0, W1
0x1E86	0xFB8001  	ZE	W1, W0
0x1E88	0xDE00C5  	LSR	W0, #5, W1
; save_sr start address is: 4 (W2)
0x1E8A	0xFB8101  	ZE	W1, W2
; DISI_save start address is: 6 (W3)
0x1E8C	0x800293  	MOV	DISICNT, W3
0x1E8E	0xFC03FF  	DISI	#1023
0x1E90	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E92	0x784090  	MOV.B	[W0], W1
0x1E94	0xB3CE00  	MOV.B	#224, W0
0x1E96	0x70C080  	IOR.B	W1, W0, W1
0x1E98	0x200420  	MOV	#lo_addr(SRbits), W0
0x1E9A	0x784801  	MOV.B	W1, [W0]
0x1E9C	0x000000  	NOP
0x1E9E	0x000000  	NOP
0x1EA0	0x880293  	MOV	W3, DISICNT
; DISI_save end address is: 6 (W3)
0x1EA2	0xA82398  	BSET.B	C1INTEbits, #1
; DISI_save start address is: 8 (W4)
0x1EA4	0x800294  	MOV	DISICNT, W4
0x1EA6	0xFC03FF  	DISI	#1023
0x1EA8	0x784182  	MOV.B	W2, W3
; save_sr end address is: 4 (W2)
0x1EAA	0xB3C050  	MOV.B	#5, W0
0x1EAC	0xFB8083  	ZE	W3, W1
0x1EAE	0xFB0100  	SE	W0, W2
0x1EB0	0xDD0982  	SL	W1, W2, W3
0x1EB2	0x200420  	MOV	#lo_addr(SRbits), W0
0x1EB4	0x69C190  	XOR.B	W3, [W0], W3
0x1EB6	0xB3CE00  	MOV.B	#224, W0
0x1EB8	0x61C180  	AND.B	W3, W0, W3
0x1EBA	0x200420  	MOV	#lo_addr(SRbits), W0
0x1EBC	0x69C190  	XOR.B	W3, [W0], W3
0x1EBE	0x200420  	MOV	#lo_addr(SRbits), W0
0x1EC0	0x784803  	MOV.B	W3, [W0]
0x1EC2	0x000000  	NOP
0x1EC4	0x000000  	NOP
0x1EC6	0x880294  	MOV	W4, DISICNT
; DISI_save end address is: 8 (W4)
;can.c,134 :: 		}
L_end_Can_initInterrupt:
0x1EC8	0x060000  	RETURN
; end of _Can_initInterrupt
_Can_setWritePriority:
;can.c,93 :: 		void Can_setWritePriority(unsigned int txPriority) {
;can.c,94 :: 		can_txPriority = txPriority;
0x1ECA	0x88403A  	MOV	W10, _can_txPriority
;can.c,95 :: 		}
L_end_Can_setWritePriority:
0x1ECC	0x060000  	RETURN
; end of _Can_setWritePriority
_CAN_routine:
;ebb_can_functions.c,4 :: 		void CAN_routine()  //CAN update routine
;ebb_can_functions.c,6 :: 		Can_resetWritePacket();  //Build the can packet -->
0x24E6	0x781F8A  	PUSH	W10
0x24E8	0x781F8B  	PUSH	W11
0x24EA	0x07FE74  	RCALL	_Can_resetWritePacket
;ebb_can_functions.c,7 :: 		Can_addIntToWritePacket(ebb_current_pos);
0x24EC	0x80449A  	MOV	_ebb_current_pos, W10
0x24EE	0x07FDF3  	RCALL	_Can_addIntToWritePacket
;ebb_can_functions.c,8 :: 		Can_addIntToWritePacket(calibration_on_off);
0x24F0	0x80405A  	MOV	_calibration_on_off, W10
0x24F2	0x07FDF1  	RCALL	_Can_addIntToWritePacket
;ebb_can_functions.c,9 :: 		Can_addIntToWritePacket(error_flag);
0x24F4	0x80404A  	MOV	_error_flag, W10
0x24F6	0x07FDEF  	RCALL	_Can_addIntToWritePacket
;ebb_can_functions.c,10 :: 		Can_write(EBB_BIAS_ID);  //Send the can packet
0x24F8	0x2070DA  	MOV	#1805, W10
0x24FA	0x20000B  	MOV	#0, W11
0x24FC	0x07FDB8  	RCALL	_Can_write
;ebb_can_functions.c,11 :: 		}
L_end_CAN_routine:
0x24FE	0x7805CF  	POP	W11
0x2500	0x78054F  	POP	W10
0x2502	0x060000  	RETURN
; end of _CAN_routine
_Can_resetWritePacket:
;can.c,97 :: 		void Can_resetWritePacket(void) {
;can.c,98 :: 		for (can_dataOutLength = 0; can_dataOutLength < CAN_PACKET_SIZE; can_dataOutLength += 1) {
0x21D4	0xEF2000  	CLR	W0
0x21D6	0x884000  	MOV	W0, _can_dataOutLength
L_Can_resetWritePacket9:
0x21D8	0x804000  	MOV	_can_dataOutLength, W0
0x21DA	0xE10068  	CP	W0, #8
0x21DC	0x310009  	BRA GEU	L_Can_resetWritePacket10
L__Can_resetWritePacket195:
;can.c,99 :: 		can_dataOutBuffer[can_dataOutLength] = 0;
0x21DE	0x2088A1  	MOV	#lo_addr(_can_dataOutBuffer), W1
0x21E0	0x208000  	MOV	#lo_addr(_can_dataOutLength), W0
0x21E2	0x408090  	ADD	W1, [W0], W1
0x21E4	0xEF2000  	CLR	W0
0x21E6	0x784880  	MOV.B	W0, [W1]
;can.c,98 :: 		for (can_dataOutLength = 0; can_dataOutLength < CAN_PACKET_SIZE; can_dataOutLength += 1) {
0x21E8	0x200011  	MOV	#1, W1
0x21EA	0x208000  	MOV	#lo_addr(_can_dataOutLength), W0
0x21EC	0x408810  	ADD	W1, [W0], [W0]
;can.c,100 :: 		}
0x21EE	0x37FFF4  	BRA	L_Can_resetWritePacket9
L_Can_resetWritePacket10:
;can.c,101 :: 		can_dataOutLength = 0;
0x21F0	0xEF2000  	CLR	W0
0x21F2	0x884000  	MOV	W0, _can_dataOutLength
;can.c,102 :: 		}
L_end_Can_resetWritePacket:
0x21F4	0x060000  	RETURN
; end of _Can_resetWritePacket
_Can_addIntToWritePacket:
;can.c,72 :: 		void Can_addIntToWritePacket(int dataOut) {
;can.c,73 :: 		Can_addByteToWritePacket((unsigned char) (dataOut >> 8));
0x20D6	0x781F8A  	PUSH	W10
0x20D8	0xDED048  	ASR	W10, #8, W0
0x20DA	0x781F8A  	PUSH	W10
0x20DC	0x784500  	MOV.B	W0, W10
0x20DE	0x07F634  	RCALL	_Can_addByteToWritePacket
0x20E0	0x78054F  	POP	W10
;can.c,74 :: 		Can_addByteToWritePacket((unsigned char) (dataOut & 0xFF));
0x20E2	0x200FF0  	MOV	#255, W0
0x20E4	0x650000  	AND	W10, W0, W0
0x20E6	0x784500  	MOV.B	W0, W10
0x20E8	0x07F62F  	RCALL	_Can_addByteToWritePacket
;can.c,75 :: 		}
L_end_Can_addIntToWritePacket:
0x20EA	0x78054F  	POP	W10
0x20EC	0x060000  	RETURN
; end of _Can_addIntToWritePacket
_Can_addByteToWritePacket:
;can.c,77 :: 		void Can_addByteToWritePacket(unsigned char dataOut) {
;can.c,78 :: 		can_dataOutBuffer[can_dataOutLength] = dataOut;
0x0D48	0x2088A1  	MOV	#lo_addr(_can_dataOutBuffer), W1
0x0D4A	0x208000  	MOV	#lo_addr(_can_dataOutLength), W0
0x0D4C	0x408010  	ADD	W1, [W0], W0
0x0D4E	0x78480A  	MOV.B	W10, [W0]
;can.c,79 :: 		can_dataOutLength += 1;
0x0D50	0x200011  	MOV	#1, W1
0x0D52	0x208000  	MOV	#lo_addr(_can_dataOutLength), W0
0x0D54	0x408810  	ADD	W1, [W0], [W0]
;can.c,80 :: 		}
L_end_Can_addByteToWritePacket:
0x0D56	0x060000  	RETURN
; end of _Can_addByteToWritePacket
_Can_write:
0x206E	0xFA0002  	LNK	#2
;can.c,82 :: 		void Can_write(unsigned long int id) {
;can.c,84 :: 		do {
0x2070	0x781F8C  	PUSH	W12
0x2072	0x781F8D  	PUSH	W13
L_Can_write3:
;can.c,85 :: 		sent = CAN1Write(id, can_dataOutBuffer, can_dataOutLength, Can_getWriteFlags());
0x2074	0x07F3E5  	RCALL	_Can_getWriteFlags
0x2076	0xBE9F8A  	PUSH.D	W10
0x2078	0x80400D  	MOV	_can_dataOutLength, W13
0x207A	0x2088AC  	MOV	#lo_addr(_can_dataOutBuffer), W12
0x207C	0x781F80  	PUSH	W0
0x207E	0x07F2F8  	RCALL	_CAN1Write
0x2080	0xB1002F  	SUB	#2, W15
0x2082	0xBE054F  	POP.D	W10
;can.c,86 :: 		i += 1;
0x2084	0x200012  	MOV	#1, W2
0x2086	0x4700E0  	ADD	W14, #0, W1
0x2088	0x410891  	ADD	W2, [W1], [W1]
;can.c,87 :: 		} while ((sent == 0) && (i < CAN_RETRY_LIMIT));
0x208A	0xE10060  	CP	W0, #0
0x208C	0x3A0005  	BRA NZ	L__Can_write176
L__Can_write190:
0x208E	0x200321  	MOV	#50, W1
0x2090	0x470060  	ADD	W14, #0, W0
0x2092	0xE10810  	CP	W1, [W0]
0x2094	0x360001  	BRA LEU	L__Can_write175
L__Can_write191:
0x2096	0x37FFEE  	BRA	L_Can_write3
L__Can_write176:
L__Can_write175:
;can.c,88 :: 		if (i == CAN_RETRY_LIMIT) {
0x2098	0x200321  	MOV	#50, W1
0x209A	0x470060  	ADD	W14, #0, W0
0x209C	0xE10810  	CP	W1, [W0]
0x209E	0x3A0003  	BRA NZ	L_Can_write8
L__Can_write192:
;can.c,89 :: 		can_err++;
0x20A0	0x200011  	MOV	#1, W1
0x20A2	0x2080C0  	MOV	#lo_addr(_can_err), W0
0x20A4	0x408810  	ADD	W1, [W0], [W0]
;can.c,90 :: 		}
L_Can_write8:
;can.c,91 :: 		}
L_end_Can_write:
0x20A6	0x7806CF  	POP	W13
0x20A8	0x78064F  	POP	W12
0x20AA	0xFA8000  	ULNK
0x20AC	0x060000  	RETURN
; end of _Can_write
_CAN1Write:
0x0670	0xFA0000  	LNK	#0
;__Lib_CAN_1.c,589 :: 		
0x0672	0x781F8A  	PUSH	W10
0x0674	0x781F8B  	PUSH	W11
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
0x0676	0x97BA4E  	MOV	[W14-8], W4
;__Lib_CAN_1.c,595 :: 		
0x0678	0xAF636E  	BTSC.B	C1TX0CONbits, #3
0x067A	0x370003  	BRA	L_CAN1Write32
;__Lib_CAN_1.c,596 :: 		
; ptr start address is: 12 (W6)
0x067C	0x203606  	MOV	#lo_addr(C1TX0SID), W6
;__Lib_CAN_1.c,597 :: 		
; TxCtrlReg start address is: 10 (W5)
0x067E	0x2036E5  	MOV	#lo_addr(C1TX0CON), W5
;__Lib_CAN_1.c,598 :: 		
; ptr end address is: 12 (W6)
; TxCtrlReg end address is: 10 (W5)
0x0680	0x37000E  	BRA	L_CAN1Write33
L_CAN1Write32:
;__Lib_CAN_1.c,600 :: 		
0x0682	0xAF635E  	BTSC.B	C1TX1CONbits, #3
0x0684	0x370004  	BRA	L_CAN1Write34
;__Lib_CAN_1.c,601 :: 		
; ptr start address is: 12 (W6)
0x0686	0x203506  	MOV	#lo_addr(C1TX1SID), W6
;__Lib_CAN_1.c,602 :: 		
; TxCtrlReg start address is: 0 (W0)
0x0688	0x2035E0  	MOV	#lo_addr(C1TX1CON), W0
;__Lib_CAN_1.c,603 :: 		
; TxCtrlReg end address is: 0 (W0)
; ptr end address is: 12 (W6)
0x068A	0x780280  	MOV	W0, W5
0x068C	0x370008  	BRA	L_CAN1Write35
L_CAN1Write34:
;__Lib_CAN_1.c,605 :: 		
0x068E	0xAF634E  	BTSC.B	C1TX2CONbits, #3
0x0690	0x370003  	BRA	L_CAN1Write36
;__Lib_CAN_1.c,606 :: 		
; ptr start address is: 12 (W6)
0x0692	0x203406  	MOV	#lo_addr(C1TX2SID), W6
;__Lib_CAN_1.c,607 :: 		
; TxCtrlReg start address is: 0 (W0)
0x0694	0x2034E0  	MOV	#lo_addr(C1TX2CON), W0
;__Lib_CAN_1.c,608 :: 		
0x0696	0x370002  	BRA	L_CAN1Write37
; TxCtrlReg end address is: 0 (W0)
; ptr end address is: 12 (W6)
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
L_CAN1Write36:
;__Lib_CAN_1.c,610 :: 		
0x0698	0xEF2000  	CLR	W0
0x069A	0x370035  	BRA	L_end_CAN1Write
;__Lib_CAN_1.c,611 :: 		
L_CAN1Write37:
;__Lib_CAN_1.c,612 :: 		
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
; ptr start address is: 12 (W6)
; TxCtrlReg start address is: 0 (W0)
; ptr end address is: 12 (W6)
0x069C	0x780280  	MOV	W0, W5
L_CAN1Write35:
; TxCtrlReg end address is: 0 (W0)
;__Lib_CAN_1.c,613 :: 		
; TxCtrlReg start address is: 10 (W5)
; ptr start address is: 12 (W6)
; ptr end address is: 12 (W6)
; TxCtrlReg end address is: 10 (W5)
L_CAN1Write33:
;__Lib_CAN_1.c,621 :: 		
; ptr start address is: 12 (W6)
; TxCtrlReg start address is: 10 (W5)
0x069E	0xAF6008  	BTSC	W4, #3
0x06A0	0x37000B  	BRA	L_CAN1Write38
;__Lib_CAN_1.c,622 :: 		
0x06A2	0xBE9F8C  	PUSH.D	W12
0x06A4	0x20002D  	MOV	#2, W13
0x06A6	0x78060B  	MOV	W11, W12
0x06A8	0x78058A  	MOV	W10, W11
0x06AA	0x780506  	MOV	W6, W10
0x06AC	0x200F70  	MOV	#247, W0
0x06AE	0x781F80  	PUSH	W0
0x06B0	0x07FD6B  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x06B2	0xB1002F  	SUB	#2, W15
0x06B4	0xBE064F  	POP.D	W12
0x06B6	0x37000A  	BRA	L_CAN1Write39
L_CAN1Write38:
;__Lib_CAN_1.c,624 :: 		
0x06B8	0xBE9F8C  	PUSH.D	W12
0x06BA	0x20002D  	MOV	#2, W13
0x06BC	0x78060B  	MOV	W11, W12
0x06BE	0x78058A  	MOV	W10, W11
0x06C0	0x780506  	MOV	W6, W10
0x06C2	0x200FF0  	MOV	#255, W0
0x06C4	0x781F80  	PUSH	W0
0x06C6	0x07FD60  	RCALL	__Lib_CAN_1_CAN1IDToRegs
0x06C8	0xB1002F  	SUB	#2, W15
0x06CA	0xBE064F  	POP.D	W12
L_CAN1Write39:
;__Lib_CAN_1.c,626 :: 		
0x06CC	0x430164  	ADD	W6, #4, W2
; ptr end address is: 12 (W6)
; ptr start address is: 6 (W3)
0x06CE	0x780182  	MOV	W2, W3
;__Lib_CAN_1.c,628 :: 		
0x06D0	0x780092  	MOV	[W2], W1
0x06D2	0x2FD800  	MOV	#64896, W0
0x06D4	0x608900  	AND	W1, W0, [W2]
;__Lib_CAN_1.c,629 :: 		
0x06D6	0x66806F  	AND	W13, #15, W0
0x06D8	0xDD0043  	SL	W0, #3, W0
0x06DA	0x700993  	IOR	W0, [W3], [W3]
;__Lib_CAN_1.c,631 :: 		
0x06DC	0xAFC008  	BTSC	W4, #6
0x06DE	0x370003  	BRA	L_CAN1Write40
;__Lib_CAN_1.c,632 :: 		
0x06E0	0x780093  	MOV	[W3], W1
0x06E2	0x202000  	MOV	#512, W0
0x06E4	0x708980  	IOR	W1, W0, [W3]
L_CAN1Write40:
;__Lib_CAN_1.c,635 :: 		
; chptr start address is: 4 (W2)
0x06E6	0x418162  	ADD	W3, #2, W2
; ptr end address is: 6 (W3)
;__Lib_CAN_1.c,636 :: 		
; i start address is: 0 (W0)
0x06E8	0xEF2000  	CLR	W0
;__Lib_CAN_1.c,637 :: 		
; TxCtrlReg end address is: 10 (W5)
; i end address is: 0 (W0)
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
0x06EA	0x780185  	MOV	W5, W3
0x06EC	0x780280  	MOV	W0, W5
;__Lib_CAN_1.c,638 :: 		
L_CAN1Write41:
; chptr start address is: 4 (W2)
; chptr end address is: 4 (W2)
; i start address is: 10 (W5)
; TxCtrlReg start address is: 6 (W3)
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
0x06EE	0xE1280D  	CP	W5, W13
0x06F0	0x310005  	BRA GEU	L_CAN1Write42
L__CAN1Write83:
; chptr end address is: 4 (W2)
;__Lib_CAN_1.c,639 :: 		
; chptr start address is: 4 (W2)
0x06F2	0x410085  	ADD	W2, W5, W1
0x06F4	0x460005  	ADD	W12, W5, W0
0x06F6	0x784890  	MOV.B	[W0], [W1]
;__Lib_CAN_1.c,640 :: 		
0x06F8	0xEC200A  	INC	W5
;__Lib_CAN_1.c,641 :: 		
; chptr end address is: 4 (W2)
; i end address is: 10 (W5)
0x06FA	0x37FFF9  	BRA	L_CAN1Write41
L_CAN1Write42:
;__Lib_CAN_1.c,643 :: 		
0x06FC	0x6209E3  	AND	W4, #3, [W3]
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
;__Lib_CAN_1.c,654 :: 		
0x06FE	0x780013  	MOV	[W3], W0
0x0700	0x700068  	IOR	W0, #8, W0
0x0702	0x780980  	MOV	W0, [W3]
; TxCtrlReg end address is: 6 (W3)
;__Lib_CAN_1.c,661 :: 		
0x0704	0x2FFFF0  	MOV	#65535, W0
;__Lib_CAN_1.c,662 :: 		
;__Lib_CAN_1.c,661 :: 		
;__Lib_CAN_1.c,662 :: 		
L_end_CAN1Write:
0x0706	0x7805CF  	POP	W11
0x0708	0x78054F  	POP	W10
0x070A	0xFA8000  	ULNK
0x070C	0x060000  	RETURN
; end of _CAN1Write
_Can_getWriteFlags:
;can.c,104 :: 		unsigned int Can_getWriteFlags(void) {
;can.c,105 :: 		return CAN_DEFAULT_FLAGS & can_txPriority;
0x0840	0x200FF1  	MOV	#255, W1
0x0842	0x208060  	MOV	#lo_addr(_can_txPriority), W0
0x0844	0x608010  	AND	W1, [W0], W0
;can.c,106 :: 		}
L_end_Can_getWriteFlags:
0x0846	0x060000  	RETURN
; end of _Can_getWriteFlags
_UART1_Init:
0x23A8	0xFA0008  	LNK	#8
;__Lib_UART_12_p30.c,121 :: 		
;__Lib_UART_12_p30.c,124 :: 		
0x23AA	0x208BE0  	MOV	#lo_addr(_UART1_Write), W0
0x23AC	0x884440  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p30.c,125 :: 		
0x23AE	0x2FFFF0  	MOV	#lo_addr(_UART1_Read), W0
0x23B0	0x884410  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p30.c,126 :: 		
0x23B2	0x2FFFF0  	MOV	#lo_addr(_UART1_Data_Ready), W0
0x23B4	0x884420  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p30.c,127 :: 		
0x23B6	0x2FFFF0  	MOV	#lo_addr(_UART1_Tx_Idle), W0
0x23B8	0x884430  	MOV	W0, _UART_Tx_Idle_Ptr
;__Lib_UART_12_p30.c,132 :: 		
0x23BA	0xEF220C  	CLR	U1MODE
;__Lib_UART_12_p30.c,133 :: 		
0x23BC	0x280000  	MOV	#32768, W0
0x23BE	0xB7A20E  	MOV	WREG, U1STA
;__Lib_UART_12_p30.c,134 :: 		
0x23C0	0x07FE87  	RCALL	_Get_Fosc_kHz
;__Lib_UART_12_p30.c,137 :: 		
0x23C2	0x203E82  	MOV	#1000, W2
0x23C4	0x200003  	MOV	#0, W3
0x23C6	0x07FE4A  	RCALL	__Multiply_32x32
; tmp start address is: 8 (W4)
0x23C8	0xBE0200  	MOV.D	W0, W4
;__Lib_UART_12_p30.c,140 :: 		
0x23CA	0x07FE3F  	RCALL	_Get_Fosc_Per_Cyc
0x23CC	0xDE0041  	LSR	W0, #1, W0
0x23CE	0x400064  	ADD	W0, #4, W0
0x23D0	0x780080  	MOV	W0, W1
0x23D2	0xBE010A  	MOV.D	W10, W2
L__UART1_Init61:
0x23D4	0xE90081  	DEC	W1, W1
0x23D6	0x350003  	BRA LT	L__UART1_Init62
0x23D8	0xD00102  	SL	W2, W2
0x23DA	0xD28183  	RLC	W3, W3
0x23DC	0x37FFFB  	BRA	L__UART1_Init61
L__UART1_Init62:
0x23DE	0x980702  	MOV	W2, [W14+0]
0x23E0	0x980713  	MOV	W3, [W14+2]
;__Lib_UART_12_p30.c,142 :: 		
0x23E2	0xBE9F84  	PUSH.D	W4
0x23E4	0xBE0004  	MOV.D	W4, W0
0x23E6	0xEB0200  	CLR	W4
0x23E8	0x07F1CE  	RCALL	__Modulus_32x32
0x23EA	0xBE024F  	POP.D	W4
0x23EC	0x980720  	MOV	W0, [W14+4]
0x23EE	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p30.c,143 :: 		
0x23F0	0xBE0004  	MOV.D	W4, W0
0x23F2	0x90010E  	MOV	[W14+0], W2
0x23F4	0x90019E  	MOV	[W14+2], W3
0x23F6	0xEB0200  	CLR	W4
0x23F8	0x07F1F2  	RCALL	__Divide_32x32
; tmp end address is: 8 (W4)
; tmp start address is: 6 (W3)
0x23FA	0x780180  	MOV	W0, W3
0x23FC	0x780201  	MOV	W1, W4
;__Lib_UART_12_p30.c,145 :: 		
0x23FE	0x470060  	ADD	W14, #0, W0
0x2400	0xD10150  	LSR	[++W0], W2
0x2402	0xD380C0  	RRC	[--W0], W1
0x2404	0x470064  	ADD	W14, #4, W0
0x2406	0xE10830  	CP	W1, [W0++]
0x2408	0xE19020  	CPB	W2, [W0--]
0x240A	0x310004  	BRA GEU	L__UART1_Init42
L__UART1_Init63:
;__Lib_UART_12_p30.c,146 :: 		
; tmp start address is: 0 (W0)
0x240C	0x418061  	ADD	W3, #1, W0
0x240E	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
0x2410	0xBE0100  	MOV.D	W0, W2
; tmp end address is: 0 (W0)
0x2412	0x370002  	BRA	L_UART1_Init13
L__UART1_Init42:
;__Lib_UART_12_p30.c,145 :: 		
0x2414	0x780103  	MOV	W3, W2
0x2416	0x780184  	MOV	W4, W3
;__Lib_UART_12_p30.c,146 :: 		
L_UART1_Init13:
;__Lib_UART_12_p30.c,150 :: 		
; tmp start address is: 4 (W2)
0x2418	0x510061  	SUB	W2, #1, W0
0x241A	0x5980E0  	SUBB	W3, #0, W1
; tmp end address is: 4 (W2)
0x241C	0x8810A0  	MOV	W0, U1BRG
;__Lib_UART_12_p30.c,151 :: 		
0x241E	0xA9220E  	BCLR	U1STA, #1
;__Lib_UART_12_p30.c,153 :: 		
0x2420	0xA8E20D  	BSET	U1MODE, #15
;__Lib_UART_12_p30.c,154 :: 		
0x2422	0xA8420F  	BSET	U1STA, #10
;__Lib_UART_12_p30.c,155 :: 		
0x2424	0x07FE14  	RCALL	_Delay_100ms
0x2426	0x07FE13  	RCALL	_Delay_100ms
;__Lib_UART_12_p30.c,157 :: 		
L_end_UART1_Init:
0x2428	0xFA8000  	ULNK
0x242A	0x060000  	RETURN
; end of _UART1_Init
_Get_Fosc_kHz:
;__Lib_Delays.c,38 :: 		unsigned long Get_Fosc_kHz() {
;__Lib_Delays.c,39 :: 		return Clock_kHz();
0x20D0	0x238800  	MOV	#14464, W0
0x20D2	0x200011  	MOV	#1, W1
;__Lib_Delays.c,40 :: 		}
L_end_Get_Fosc_kHz:
0x20D4	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Get_Fosc_Per_Cyc:
;__Lib_Delays.c,63 :: 		unsigned int Get_Fosc_Per_Cyc() {
;__Lib_Delays.c,64 :: 		return __FOSC_PER_CYC;
0x204A	0x200040  	MOV	#4, W0
;__Lib_Delays.c,65 :: 		}
L_end_Get_Fosc_Per_Cyc:
0x204C	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_100ms:
;__Lib_Delays.c,666 :: 		void Delay_100ms()
;__Lib_Delays.c,668 :: 		Delay_ms(100);
0x204E	0x2000B8  	MOV	#11, W8
0x2050	0x22C2D7  	MOV	#11309, W7
L_Delay_100ms33:
0x2052	0xED200E  	DEC	W7
0x2054	0x3AFFFE  	BRA NZ	L_Delay_100ms33
0x2056	0xED2010  	DEC	W8
0x2058	0x3AFFFC  	BRA NZ	L_Delay_100ms33
;__Lib_Delays.c,669 :: 		}
L_end_Delay_100ms:
0x205A	0x060000  	RETURN
; end of _Delay_100ms
__Multiply_32x32:
0x205C	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x205E	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x2060	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x2062	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x2064	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x2066	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x2068	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x206A	0xFA8000  	ULNK
0x206C	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x0786	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x0788	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x078A	0x0000000407DA  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x078E	0xE20008  	CP0	W4
;__Lib_Math.c,173 :: 		
0x0790	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x0792	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x0794	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x0796	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.c,180 :: 		
0x0798	0xE20002  	CP0	W1
;__Lib_Math.c,181 :: 		
0x079A	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x079C	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,183 :: 		
0x079E	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x07A0	0xE20006  	CP0	W3
;__Lib_Math.c,186 :: 		
0x07A2	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x07A4	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,188 :: 		
0x07A6	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x07A8	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x07AA	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,192 :: 		
0x07AC	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x07AE	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,194 :: 		
0x07B0	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x07B2	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x07B4	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x07B6	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.c,200 :: 		
0x07B8	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x07BA	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,203 :: 		
0x07BC	0x200206  	MOV	#32, W6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x07BE	0xD00000  	SL	W0, W0
;__Lib_Math.c,206 :: 		
0x07C0	0xD28081  	RLC	W1, W1
;__Lib_Math.c,207 :: 		
0x07C2	0xD28204  	RLC	W4, W4
;__Lib_Math.c,208 :: 		
0x07C4	0xD28285  	RLC	W5, W5
;__Lib_Math.c,209 :: 		
0x07C6	0xA80000  	BSET	W0, #0
;__Lib_Math.c,210 :: 		
0x07C8	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,211 :: 		
0x07CA	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,212 :: 		
0x07CC	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x07CE	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,214 :: 		
0x07D0	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,215 :: 		
0x07D2	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x07D4	0xE90306  	DEC	W6, W6
;__Lib_Math.c,218 :: 		
0x07D6	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x07D8	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x07DA	0xFA8000  	ULNK
0x07DC	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x07DE	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x07E0	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x07E2	0x00000004082C  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x07E6	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x07E8	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x07EA	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x07EC	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x07EE	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x07F0	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x07F2	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x07F4	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x07F6	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x07F8	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x07FA	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x07FC	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x07FE	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x0800	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x0802	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x0804	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x0806	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x0808	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x080A	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x080C	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x080E	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x0810	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x0812	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x0814	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x0816	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x0818	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x081A	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x081C	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x081E	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x0820	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x0822	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x0824	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x0826	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x0828	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x082A	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x082C	0xFA8000  	ULNK
0x082E	0x060000  	RETURN
; end of __Divide_32x32
_setTimer:
;dspic.c,137 :: 		void setTimer(unsigned char device, double timePeriod) {
;dspic.c,139 :: 		setInterruptPriority(device, MEDIUM_PRIORITY);
0x242C	0x781F8A  	PUSH	W10
0x242E	0x781F8B  	PUSH	W11
0x2430	0x781F8C  	PUSH	W12
0x2432	0x781F8B  	PUSH	W11
0x2434	0x781F8C  	PUSH	W12
0x2436	0xB3C04B  	MOV.B	#4, W11
0x2438	0x07FE76  	RCALL	_setInterruptPriority
0x243A	0x78064F  	POP	W12
0x243C	0x7805CF  	POP	W11
;dspic.c,141 :: 		prescalerIndex = getTimerPrescaler(timePeriod);
0x243E	0x781F8B  	PUSH	W11
0x2440	0x781F8C  	PUSH	W12
0x2442	0x781F8A  	PUSH	W10
0x2444	0x78050B  	MOV	W11, W10
0x2446	0x78058C  	MOV	W12, W11
0x2448	0x07FE52  	RCALL	_getTimerPrescaler
0x244A	0x78054F  	POP	W10
0x244C	0x78064F  	POP	W12
0x244E	0x7805CF  	POP	W11
; prescalerIndex start address is: 8 (W4)
0x2450	0x784200  	MOV.B	W0, W4
;dspic.c,142 :: 		switch (device) {
0x2452	0x37003F  	BRA	L_setTimer51
;dspic.c,143 :: 		case TIMER1_DEVICE:
L_setTimer53:
;dspic.c,144 :: 		TIMER1_PRESCALER = prescalerIndex;
0x2454	0x784184  	MOV.B	W4, W3
0x2456	0xB3C040  	MOV.B	#4, W0
0x2458	0xFB8083  	ZE	W3, W1
0x245A	0xFB0100  	SE	W0, W2
0x245C	0xDD0982  	SL	W1, W2, W3
0x245E	0x201040  	MOV	#lo_addr(T1CONbits), W0
0x2460	0x69C190  	XOR.B	W3, [W0], W3
0x2462	0xB3C300  	MOV.B	#48, W0
0x2464	0x61C180  	AND.B	W3, W0, W3
0x2466	0x201040  	MOV	#lo_addr(T1CONbits), W0
0x2468	0x69C190  	XOR.B	W3, [W0], W3
0x246A	0x201040  	MOV	#lo_addr(T1CONbits), W0
0x246C	0x784803  	MOV.B	W3, [W0]
;dspic.c,145 :: 		TIMER1_PERIOD = getTimerPeriod(timePeriod, prescalerIndex);
0x246E	0x78050B  	MOV	W11, W10
0x2470	0x78058C  	MOV	W12, W11
; prescalerIndex end address is: 8 (W4)
0x2472	0x784604  	MOV.B	W4, W12
0x2474	0x07FD2C  	RCALL	_getTimerPeriod
0x2476	0xB7A102  	MOV	WREG, PR1
;dspic.c,146 :: 		TIMER1_ENABLE_INTERRUPT = TRUE;
0x2478	0xA8608C  	BSET	IEC0bits, #3
;dspic.c,147 :: 		TIMER1_ENABLE = TRUE;
0x247A	0xA8E105  	BSET	T1CONbits, #15
;dspic.c,148 :: 		break;
0x247C	0x370030  	BRA	L_setTimer52
;dspic.c,149 :: 		case TIMER2_DEVICE:
L_setTimer54:
;dspic.c,150 :: 		TIMER2_PRESCALER = prescalerIndex;
; prescalerIndex start address is: 8 (W4)
0x247E	0x784184  	MOV.B	W4, W3
0x2480	0xB3C040  	MOV.B	#4, W0
0x2482	0xFB8083  	ZE	W3, W1
0x2484	0xFB0100  	SE	W0, W2
0x2486	0xDD0982  	SL	W1, W2, W3
0x2488	0x201100  	MOV	#lo_addr(T2CONbits), W0
0x248A	0x69C190  	XOR.B	W3, [W0], W3
0x248C	0xB3C300  	MOV.B	#48, W0
0x248E	0x61C180  	AND.B	W3, W0, W3
0x2490	0x201100  	MOV	#lo_addr(T2CONbits), W0
0x2492	0x69C190  	XOR.B	W3, [W0], W3
0x2494	0x201100  	MOV	#lo_addr(T2CONbits), W0
0x2496	0x784803  	MOV.B	W3, [W0]
;dspic.c,151 :: 		TIMER2_PERIOD = getTimerPeriod(timePeriod, prescalerIndex);
0x2498	0x78050B  	MOV	W11, W10
0x249A	0x78058C  	MOV	W12, W11
; prescalerIndex end address is: 8 (W4)
0x249C	0x784604  	MOV.B	W4, W12
0x249E	0x07FD17  	RCALL	_getTimerPeriod
0x24A0	0xB7A10C  	MOV	WREG, PR2
;dspic.c,152 :: 		TIMER2_ENABLE_INTERRUPT = TRUE;
0x24A2	0xA8C08C  	BSET	IEC0bits, #6
;dspic.c,153 :: 		TIMER2_ENABLE = TRUE;
0x24A4	0xA8E111  	BSET	T2CONbits, #15
;dspic.c,154 :: 		break;
0x24A6	0x37001B  	BRA	L_setTimer52
;dspic.c,155 :: 		case TIMER4_DEVICE:
L_setTimer55:
;dspic.c,156 :: 		TIMER4_PRESCALER = prescalerIndex;
; prescalerIndex start address is: 8 (W4)
0x24A8	0x784184  	MOV.B	W4, W3
0x24AA	0xB3C040  	MOV.B	#4, W0
0x24AC	0xFB8083  	ZE	W3, W1
0x24AE	0xFB0100  	SE	W0, W2
0x24B0	0xDD0982  	SL	W1, W2, W3
0x24B2	0x2011E0  	MOV	#lo_addr(T4CONbits), W0
0x24B4	0x69C190  	XOR.B	W3, [W0], W3
0x24B6	0xB3C300  	MOV.B	#48, W0
0x24B8	0x61C180  	AND.B	W3, W0, W3
0x24BA	0x2011E0  	MOV	#lo_addr(T4CONbits), W0
0x24BC	0x69C190  	XOR.B	W3, [W0], W3
0x24BE	0x2011E0  	MOV	#lo_addr(T4CONbits), W0
0x24C0	0x784803  	MOV.B	W3, [W0]
;dspic.c,157 :: 		TIMER4_PERIOD = getTimerPeriod(timePeriod, prescalerIndex);
0x24C2	0x78050B  	MOV	W11, W10
0x24C4	0x78058C  	MOV	W12, W11
; prescalerIndex end address is: 8 (W4)
0x24C6	0x784604  	MOV.B	W4, W12
0x24C8	0x07FD02  	RCALL	_getTimerPeriod
0x24CA	0xB7A11A  	MOV	WREG, PR4
;dspic.c,158 :: 		TIMER4_ENABLE_INTERRUPT = TRUE;
0x24CC	0xA8A08E  	BSET	IEC1bits, #5
;dspic.c,159 :: 		TIMER4_ENABLE = TRUE;
0x24CE	0xA8E11F  	BSET	T4CONbits, #15
;dspic.c,160 :: 		break;
0x24D0	0x370006  	BRA	L_setTimer52
;dspic.c,161 :: 		}
L_setTimer51:
; prescalerIndex start address is: 8 (W4)
0x24D2	0xE15461  	CP.B	W10, #1
0x24D4	0x32FFBF  	BRA Z	L_setTimer53
L__setTimer233:
0x24D6	0xE15462  	CP.B	W10, #2
0x24D8	0x32FFD2  	BRA Z	L_setTimer54
L__setTimer234:
0x24DA	0xE15463  	CP.B	W10, #3
0x24DC	0x32FFE5  	BRA Z	L_setTimer55
L__setTimer235:
; prescalerIndex end address is: 8 (W4)
L_setTimer52:
;dspic.c,162 :: 		}
L_end_setTimer:
0x24DE	0x78064F  	POP	W12
0x24E0	0x7805CF  	POP	W11
0x24E2	0x78054F  	POP	W10
0x24E4	0x060000  	RETURN
; end of _setTimer
_setInterruptPriority:
;dspic.c,15 :: 		void setInterruptPriority(unsigned char device, unsigned char priority) {
;dspic.c,16 :: 		switch (device) {
0x2126	0x370048  	BRA	L_setInterruptPriority12
;dspic.c,17 :: 		case INT0_DEVICE:
L_setInterruptPriority14:
;dspic.c,18 :: 		INT0_PRIORITY = priority;
0x2128	0x78408B  	MOV.B	W11, W1
0x212A	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x212C	0x68C090  	XOR.B	W1, [W0], W1
0x212E	0x60C0E7  	AND.B	W1, #7, W1
0x2130	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x2132	0x68C090  	XOR.B	W1, [W0], W1
0x2134	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x2136	0x784801  	MOV.B	W1, [W0]
;dspic.c,19 :: 		break;
0x2138	0x37004C  	BRA	L_setInterruptPriority13
;dspic.c,20 :: 		case INT1_DEVICE:
L_setInterruptPriority15:
;dspic.c,21 :: 		INT1_PRIORITY = priority;
0x213A	0x78408B  	MOV.B	W11, W1
0x213C	0x2009C0  	MOV	#lo_addr(IPC4bits), W0
0x213E	0x68C090  	XOR.B	W1, [W0], W1
0x2140	0x60C0E7  	AND.B	W1, #7, W1
0x2142	0x2009C0  	MOV	#lo_addr(IPC4bits), W0
0x2144	0x68C090  	XOR.B	W1, [W0], W1
0x2146	0x2009C0  	MOV	#lo_addr(IPC4bits), W0
0x2148	0x784801  	MOV.B	W1, [W0]
;dspic.c,22 :: 		break;
0x214A	0x370043  	BRA	L_setInterruptPriority13
;dspic.c,23 :: 		case INT2_DEVICE:
L_setInterruptPriority16:
;dspic.c,24 :: 		INT2_PRIORITY = priority;
0x214C	0xFB800B  	ZE	W11, W0
0x214E	0x780080  	MOV	W0, W1
0x2150	0xB3C0C0  	MOV.B	#12, W0
0x2152	0xFB0000  	SE	W0, W0
0x2154	0xDD0880  	SL	W1, W0, W1
0x2156	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x2158	0x688090  	XOR	W1, [W0], W1
0x215A	0x270000  	MOV	#28672, W0
0x215C	0x608080  	AND	W1, W0, W1
0x215E	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x2160	0x688090  	XOR	W1, [W0], W1
0x2162	0x8804F1  	MOV	W1, IPC5bits
;dspic.c,25 :: 		break;
0x2164	0x370036  	BRA	L_setInterruptPriority13
;dspic.c,29 :: 		case TIMER1_DEVICE:
L_setInterruptPriority17:
;dspic.c,30 :: 		TIMER1_PRIORITY = priority;
0x2166	0xFB800B  	ZE	W11, W0
0x2168	0x780080  	MOV	W0, W1
0x216A	0xB3C0C0  	MOV.B	#12, W0
0x216C	0xFB0000  	SE	W0, W0
0x216E	0xDD0880  	SL	W1, W0, W1
0x2170	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x2172	0x688090  	XOR	W1, [W0], W1
0x2174	0x270000  	MOV	#28672, W0
0x2176	0x608080  	AND	W1, W0, W1
0x2178	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x217A	0x688090  	XOR	W1, [W0], W1
0x217C	0x8804A1  	MOV	W1, IPC0bits
;dspic.c,31 :: 		break;
0x217E	0x370029  	BRA	L_setInterruptPriority13
;dspic.c,32 :: 		case TIMER2_DEVICE:
L_setInterruptPriority18:
;dspic.c,33 :: 		TIMER2_PRIORITY = priority;
0x2180	0xFB800B  	ZE	W11, W0
0x2182	0x780080  	MOV	W0, W1
0x2184	0xB3C080  	MOV.B	#8, W0
0x2186	0xFB0000  	SE	W0, W0
0x2188	0xDD0880  	SL	W1, W0, W1
0x218A	0x200960  	MOV	#lo_addr(IPC1bits), W0
0x218C	0x688090  	XOR	W1, [W0], W1
0x218E	0x207000  	MOV	#1792, W0
0x2190	0x608080  	AND	W1, W0, W1
0x2192	0x200960  	MOV	#lo_addr(IPC1bits), W0
0x2194	0x688090  	XOR	W1, [W0], W1
0x2196	0x8804B1  	MOV	W1, IPC1bits
;dspic.c,34 :: 		break;
0x2198	0x37001C  	BRA	L_setInterruptPriority13
;dspic.c,35 :: 		case TIMER4_DEVICE:
L_setInterruptPriority19:
;dspic.c,36 :: 		TIMER4_PRIORITY = priority;
0x219A	0x78418B  	MOV.B	W11, W3
0x219C	0xB3C040  	MOV.B	#4, W0
0x219E	0xFB8083  	ZE	W3, W1
0x21A0	0xFB0100  	SE	W0, W2
0x21A2	0xDD0982  	SL	W1, W2, W3
0x21A4	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x21A6	0x69C190  	XOR.B	W3, [W0], W3
0x21A8	0xB3C700  	MOV.B	#112, W0
0x21AA	0x61C180  	AND.B	W3, W0, W3
0x21AC	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x21AE	0x69C190  	XOR.B	W3, [W0], W3
0x21B0	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x21B2	0x784803  	MOV.B	W3, [W0]
;dspic.c,37 :: 		break;
0x21B4	0x37000E  	BRA	L_setInterruptPriority13
;dspic.c,38 :: 		default:
L_setInterruptPriority20:
;dspic.c,39 :: 		break;
0x21B6	0x37000D  	BRA	L_setInterruptPriority13
;dspic.c,40 :: 		}
L_setInterruptPriority12:
0x21B8	0xE15464  	CP.B	W10, #4
0x21BA	0x32FFB6  	BRA Z	L_setInterruptPriority14
L__setInterruptPriority207:
0x21BC	0xE15465  	CP.B	W10, #5
0x21BE	0x32FFBD  	BRA Z	L_setInterruptPriority15
L__setInterruptPriority208:
0x21C0	0xE15466  	CP.B	W10, #6
0x21C2	0x32FFC4  	BRA Z	L_setInterruptPriority16
L__setInterruptPriority209:
0x21C4	0xE15461  	CP.B	W10, #1
0x21C6	0x32FFCF  	BRA Z	L_setInterruptPriority17
L__setInterruptPriority210:
0x21C8	0xE15462  	CP.B	W10, #2
0x21CA	0x32FFDA  	BRA Z	L_setInterruptPriority18
L__setInterruptPriority211:
0x21CC	0xE15463  	CP.B	W10, #3
0x21CE	0x32FFE5  	BRA Z	L_setInterruptPriority19
L__setInterruptPriority212:
0x21D0	0x37FFF2  	BRA	L_setInterruptPriority20
L_setInterruptPriority13:
;dspic.c,41 :: 		}
L_end_setInterruptPriority:
0x21D2	0x060000  	RETURN
; end of _setInterruptPriority
_getTimerPrescaler:
;dspic.c,210 :: 		unsigned char getTimerPrescaler(double timePeriod) {
;dspic.c,213 :: 		exactTimerPrescaler = getExactTimerPrescaler(timePeriod);
0x20EE	0x07F3A0  	RCALL	_getExactTimerPrescaler
; exactTimerPrescaler start address is: 8 (W4)
0x20F0	0xBE0200  	MOV.D	W0, W4
;dspic.c,214 :: 		for (i = 0; i < sizeof(PRESCALER_VALUES); i += 1) {
; i start address is: 6 (W3)
0x20F2	0xEF2006  	CLR	W3
; i end address is: 6 (W3)
L_getTimerPrescaler71:
; i start address is: 6 (W3)
; exactTimerPrescaler start address is: 8 (W4)
; exactTimerPrescaler end address is: 8 (W4)
0x20F4	0xE11C68  	CP.B	W3, #8
0x20F6	0x310014  	BRA GEU	L_getTimerPrescaler72
L__getTimerPrescaler250:
; exactTimerPrescaler end address is: 8 (W4)
;dspic.c,215 :: 		if ((int) exactTimerPrescaler < PRESCALER_VALUES[i]) {
; exactTimerPrescaler start address is: 8 (W4)
0x20F8	0xBE9F84  	PUSH.D	W4
0x20FA	0x781F83  	PUSH	W3
0x20FC	0xBE9F8A  	PUSH.D	W10
0x20FE	0xBE0004  	MOV.D	W4, W0
0x2100	0x07F306  	RCALL	__Float2Longint
0x2102	0xBE054F  	POP.D	W10
0x2104	0x7801CF  	POP	W3
0x2106	0xBE024F  	POP.D	W4
0x2108	0xFB8083  	ZE	W3, W1
0x210A	0xDD0941  	SL	W1, #1, W2
0x210C	0x2ACCE1  	MOV	#lo_addr(_PRESCALER_VALUES), W1
0x210E	0x408102  	ADD	W1, W2, W2
0x2110	0x780092  	MOV	[W2], W1
0x2112	0xE10001  	CP	W0, W1
0x2114	0x310002  	BRA GEU	L_getTimerPrescaler74
L__getTimerPrescaler251:
; exactTimerPrescaler end address is: 8 (W4)
;dspic.c,216 :: 		return i;
0x2116	0x784003  	MOV.B	W3, W0
; i end address is: 6 (W3)
0x2118	0x370005  	BRA	L_end_getTimerPrescaler
;dspic.c,217 :: 		}
L_getTimerPrescaler74:
;dspic.c,214 :: 		for (i = 0; i < sizeof(PRESCALER_VALUES); i += 1) {
; i start address is: 0 (W0)
; exactTimerPrescaler start address is: 8 (W4)
; i start address is: 6 (W3)
0x211A	0x41C061  	ADD.B	W3, #1, W0
; i end address is: 6 (W3)
;dspic.c,218 :: 		}
; exactTimerPrescaler end address is: 8 (W4)
; i end address is: 0 (W0)
0x211C	0x784180  	MOV.B	W0, W3
0x211E	0x37FFEA  	BRA	L_getTimerPrescaler71
L_getTimerPrescaler72:
;dspic.c,219 :: 		i -= 1;
; i start address is: 6 (W3)
0x2120	0xFB8003  	ZE	W3, W0
; i end address is: 6 (W3)
0x2122	0xED2000  	DEC	W0
;dspic.c,221 :: 		return i;
;dspic.c,222 :: 		}
L_end_getTimerPrescaler:
0x2124	0x060000  	RETURN
; end of _getTimerPrescaler
_getExactTimerPrescaler:
;dspic.c,224 :: 		double getExactTimerPrescaler(double timePeriod) {
;dspic.c,225 :: 		return (timePeriod * 1000000) / (INSTRUCTION_PERIOD * MAX_TIMER_PERIOD_VALUE);
0x0830	0xBE000A  	MOV.D	W10, W0
0x0832	0x224002  	MOV	#9216, W2
0x0834	0x249743  	MOV	#18804, W3
0x0836	0x07FD3E  	RCALL	__Mul_FP
0x0838	0x2FF002  	MOV	#65280, W2
0x083A	0x245FF3  	MOV	#17919, W3
0x083C	0x07FE7E  	RCALL	__Div_FP
;dspic.c,226 :: 		}
L_end_getExactTimerPrescaler:
0x083E	0x060000  	RETURN
; end of _getExactTimerPrescaler
__Mul_FP:
0x02B4	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x02B6	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x02B8	0x0000000403CA  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x02BC	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,863 :: 		
0x02BE	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,864 :: 		
0x02C0	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,865 :: 		
0x02C2	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x02C4	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x02C6	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,868 :: 		
0x02C8	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,869 :: 		
0x02CA	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x02CC	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,871 :: 		
0x02CE	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x02D0	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,873 :: 		
0x02D2	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x02D4	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,875 :: 		
0x02D6	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x02D8	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,877 :: 		
0x02DA	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.c,878 :: 		
0x02DC	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.c,879 :: 		
0x02DE	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.c,880 :: 		
0x02E0	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.c,881 :: 		
0x02E2	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.c,882 :: 		
0x02E4	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.c,883 :: 		
0x02E6	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.c,884 :: 		
0x02E8	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.c,885 :: 		
0x02EA	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.c,886 :: 		
0x02EC	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x02EE	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,888 :: 		
0x02F0	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,889 :: 		
0x02F2	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.c,890 :: 		
0x02F4	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x02F6	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.c,893 :: 		
0x02F8	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.c,894 :: 		
0x02FA	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x02FC	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x02FE	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.c,898 :: 		
0x0300	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.c,899 :: 		
0x0302	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.c,900 :: 		
0x0304	0xB20012  	AND	#1, W2
;__Lib_MathDouble.c,901 :: 		
0x0306	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.c,902 :: 		
0x0308	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.c,903 :: 		
0x030A	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x030C	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,906 :: 		
0x030E	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,907 :: 		
0x0310	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,908 :: 		
0x0312	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x0314	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,911 :: 		
0x0316	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x0318	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x031A	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,916 :: 		
0x031C	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x031E	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,919 :: 		
0x0320	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x0322	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x0324	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,923 :: 		
0x0326	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x0328	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,925 :: 		
0x032A	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,926 :: 		
0x032C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,927 :: 		
0x032E	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x0330	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,929 :: 		
0x0332	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x0334	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,932 :: 		
0x0336	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,933 :: 		
0x0338	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x033A	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,935 :: 		
0x033C	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x033E	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,937 :: 		
0x0340	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x0342	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x0344	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x0346	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,944 :: 		
0x0348	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,945 :: 		
0x034A	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,946 :: 		
0x034C	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x034E	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,949 :: 		
0x0350	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,950 :: 		
0x0352	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x0354	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,953 :: 		
0x0356	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,954 :: 		
0x0358	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x035A	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,956 :: 		
0x035C	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,957 :: 		
0x035E	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,958 :: 		
0x0360	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x0362	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,961 :: 		
0x0364	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,962 :: 		
0x0366	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,963 :: 		
0x0368	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,964 :: 		
0x036A	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,965 :: 		
0x036C	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x036E	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x0370	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,969 :: 		
0x0372	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,970 :: 		
0x0374	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,971 :: 		
0x0376	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x0378	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,973 :: 		
0x037A	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,974 :: 		
0x037C	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,975 :: 		
0x037E	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x0380	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,977 :: 		
0x0382	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,978 :: 		
0x0384	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x0386	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,980 :: 		
0x0388	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x038A	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,983 :: 		
0x038C	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,984 :: 		
0x038E	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x0390	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,986 :: 		
0x0392	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,987 :: 		
0x0394	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,988 :: 		
0x0396	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,989 :: 		
0x0398	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x039A	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x039C	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,994 :: 		
0x039E	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x03A0	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,997 :: 		
0x03A2	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,998 :: 		
0x03A4	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,999 :: 		
0x03A6	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x03A8	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1001 :: 		
0x03AA	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x03AC	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1004 :: 		
0x03AE	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x03B0	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1007 :: 		
0x03B2	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x03B4	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x03B6	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x03B8	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1013 :: 		
0x03BA	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x03BC	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x03BE	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x03C0	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1019 :: 		
0x03C2	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1020 :: 		
0x03C4	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x03C6	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1022 :: 		
0x03C8	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x03CA	0xFA8000  	ULNK
0x03CC	0x060000  	RETURN
; end of __Mul_FP
__Div_FP:
0x053A	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1050 :: 		
;__Lib_MathDouble.c,1052 :: 		
0x053C	0x070002  	RCALL	DivFP___divsf3
;__Lib_MathDouble.c,1053 :: 		
0x053E	0x00000004066C  	GOTO	the_end__Div_FP
;__Lib_MathDouble.c,1056 :: 		
DivFP___divsf3:
;__Lib_MathDouble.c,1057 :: 		
0x0542	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,1058 :: 		
0x0544	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,1059 :: 		
0x0546	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,1060 :: 		
0x0548	0x07003E  	RCALL	DivFP__funpack2
;__Lib_MathDouble.c,1061 :: 		
0x054A	0x330045  	BRA N	DivFP__fPropagateNaN
;__Lib_MathDouble.c,1062 :: 		
0x054C	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,1063 :: 		
0x054E	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1064 :: 		
0x0550	0x32002E  	BRA Z	DivFP_aisinfinite
;__Lib_MathDouble.c,1065 :: 		
0x0552	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1066 :: 		
0x0554	0x320033  	BRA Z	DivFP_returnZero
;__Lib_MathDouble.c,1067 :: 		
0x0556	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,1068 :: 		
0x0558	0x32002F  	BRA Z	DivFP_aiszero
;__Lib_MathDouble.c,1069 :: 		
0x055A	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1070 :: 		
0x055C	0x320031  	BRA Z	DivFP_returnInf
;__Lib_MathDouble.c,1071 :: 		
DivFP_finitenonzero:
;__Lib_MathDouble.c,1072 :: 		
0x055E	0x558585  	SUB	W11, W5, W11
;__Lib_MathDouble.c,1073 :: 		
0x0560	0xB007EB  	ADD	#126, W11
;__Lib_MathDouble.c,1074 :: 		
0x0562	0x200009  	MOV	#0, W9
;__Lib_MathDouble.c,1075 :: 		
0x0564	0x200408  	MOV	#64, W8
;__Lib_MathDouble.c,1076 :: 		
0x0566	0x370005  	BRA	DivFP_diventry
;__Lib_MathDouble.c,1077 :: 		
DivFP_divnext:
;__Lib_MathDouble.c,1078 :: 		
0x0568	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1079 :: 		
0x056A	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1080 :: 		
0x056C	0x31000A  	BRA C	DivFP_divdone
;__Lib_MathDouble.c,1081 :: 		
DivFP_divloop:
;__Lib_MathDouble.c,1082 :: 		
0x056E	0x430306  	ADD	W6, W6, W6
;__Lib_MathDouble.c,1083 :: 		
0x0570	0x4B8387  	ADDC	W7, W7, W7
;__Lib_MathDouble.c,1084 :: 		
DivFP_diventry:
;__Lib_MathDouble.c,1085 :: 		
0x0572	0x530100  	SUB	W6, W0, W2
;__Lib_MathDouble.c,1086 :: 		
0x0574	0x5B8181  	SUBB	W7, W1, W3
;__Lib_MathDouble.c,1087 :: 		
0x0576	0x33FFF8  	BRA N	DivFP_divnext
;__Lib_MathDouble.c,1088 :: 		
0x0578	0xBE8302  	MOV.D	W2, W6
;__Lib_MathDouble.c,1089 :: 		
0x057A	0xA80010  	BSET	W8, #0
;__Lib_MathDouble.c,1090 :: 		
0x057C	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1091 :: 		
0x057E	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1092 :: 		
0x0580	0x39FFF6  	BRA NC	DivFP_divloop
;__Lib_MathDouble.c,1093 :: 		
DivFP_divdone:
;__Lib_MathDouble.c,1094 :: 		
0x0582	0xDD39C6  	SL	W7, #6, W3
;__Lib_MathDouble.c,1095 :: 		
0x0584	0x730183  	IOR	W6, W3, W3
;__Lib_MathDouble.c,1096 :: 		
0x0586	0x320001  	BRA Z	DivFP_stickyok
;__Lib_MathDouble.c,1097 :: 		
0x0588	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,1098 :: 		
DivFP_stickyok:
;__Lib_MathDouble.c,1099 :: 		
0x058A	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1100 :: 		
0x058C	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1101 :: 		
0x058E	0xA39809  	BTST.Z	W9, #9
;__Lib_MathDouble.c,1102 :: 		
0x0590	0x320005  	BRA Z	DivFP_guardused
;__Lib_MathDouble.c,1103 :: 		
0x0592	0xA70008  	BTSC	W8, #0
;__Lib_MathDouble.c,1104 :: 		
0x0594	0xA80006  	BSET	W3, #0
;__Lib_MathDouble.c,1105 :: 		
0x0596	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1106 :: 		
0x0598	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1107 :: 		
0x059A	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1108 :: 		
DivFP_guardused:
;__Lib_MathDouble.c,1109 :: 		
0x059C	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1110 :: 		
0x059E	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1111 :: 		
0x05A0	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,1112 :: 		
0x05A2	0xD28102  	RLC	W2, W2
;__Lib_MathDouble.c,1113 :: 		
0x05A4	0x070028  	RCALL	DivFP__fpack
;__Lib_MathDouble.c,1114 :: 		
DivFP_return0_1:
;__Lib_MathDouble.c,1115 :: 		
0x05A6	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,1116 :: 		
0x05A8	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,1117 :: 		
0x05AA	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,1118 :: 		
0x05AC	0x37001D  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1119 :: 		
DivFP_aisinfinite:
;__Lib_MathDouble.c,1120 :: 		
0x05AE	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1121 :: 		
0x05B0	0x32001F  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1122 :: 		
DivFP_return8_1:
;__Lib_MathDouble.c,1123 :: 		
0x05B2	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,1124 :: 		
DivFP_return2_1:
;__Lib_MathDouble.c,1125 :: 		
0x05B4	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1126 :: 		
0x05B6	0x37FFF7  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1127 :: 		
DivFP_aiszero:
;__Lib_MathDouble.c,1128 :: 		
0x05B8	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1129 :: 		
0x05BA	0x32001A  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1130 :: 		
DivFP_returnZero:
;__Lib_MathDouble.c,1131 :: 		
0x05BC	0xB80060  	MUL.UU	W0, #0, W0
;__Lib_MathDouble.c,1132 :: 		
0x05BE	0x37FFF3  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1133 :: 		
DivFP_returnInf:
;__Lib_MathDouble.c,1134 :: 		
0x05C0	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1135 :: 		
0x05C2	0x27F801  	MOV	#32640, W1
;__Lib_MathDouble.c,1136 :: 		
0x05C4	0x37FFF0  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1137 :: 		
DivFP__funpack2:
;__Lib_MathDouble.c,1138 :: 		
0x05C6	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1139 :: 		
0x05C8	0x07003C  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1140 :: 		
0x05CA	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1141 :: 		
0x05CC	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1142 :: 		
0x05CE	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1143 :: 		
0x05D0	0x070038  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1144 :: 		
0x05D2	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1145 :: 		
0x05D4	0x060000  	RETURN
;__Lib_MathDouble.c,1146 :: 		
DivFP__fPropagateNaN:
;__Lib_MathDouble.c,1147 :: 		
0x05D6	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1148 :: 		
0x05D8	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1149 :: 		
0x05DA	0x360005  	BRA LEU	DivFP_return0
;__Lib_MathDouble.c,1150 :: 		
0x05DC	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1151 :: 		
0x05DE	0x360002  	BRA LEU	DivFP_return8
;__Lib_MathDouble.c,1152 :: 		
0x05E0	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,1153 :: 		
0x05E2	0x3A0001  	BRA NZ	DivFP_return0
;__Lib_MathDouble.c,1154 :: 		
DivFP_return8:
;__Lib_MathDouble.c,1155 :: 		
0x05E4	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,1156 :: 		
DivFP_return0:
;__Lib_MathDouble.c,1157 :: 		
0x05E6	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,1158 :: 		
DivFP__fbopExit:
;__Lib_MathDouble.c,1159 :: 		
0x05E8	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,1160 :: 		
0x05EA	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,1161 :: 		
0x05EC	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,1162 :: 		
0x05EE	0x060000  	RETURN
;__Lib_MathDouble.c,1163 :: 		
DivFP__fbopReturnNaN:
;__Lib_MathDouble.c,1164 :: 		
0x05F0	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1165 :: 		
0x05F2	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,1166 :: 		
0x05F4	0x37FFF9  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1167 :: 		
DivFP__fpack:
;__Lib_MathDouble.c,1168 :: 		
0x05F6	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,1169 :: 		
0x05F8	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,1170 :: 		
0x05FA	0x3D000B  	BRA GE	DivFP_notsubnormal
;__Lib_MathDouble.c,1171 :: 		
0x05FC	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,1172 :: 		
0x05FE	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,1173 :: 		
0x0600	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,1174 :: 		
0x0602	0x34001D  	BRA LE	DivFP_zerosig
;__Lib_MathDouble.c,1175 :: 		
DivFP_subnormal:
;__Lib_MathDouble.c,1176 :: 		
0x0604	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,1177 :: 		
0x0606	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,1178 :: 		
0x0608	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1179 :: 		
0x060A	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1180 :: 		
0x060C	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,1181 :: 		
0x060E	0x3AFFFA  	BRA NZ	DivFP_subnormal
;__Lib_MathDouble.c,1182 :: 		
0x0610	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,1183 :: 		
DivFP_notsubnormal:
;__Lib_MathDouble.c,1184 :: 		
0x0612	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,1185 :: 		
0x0614	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,1186 :: 		
0x0616	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,1187 :: 		
0x0618	0x320009  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1188 :: 		
0x061A	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,1189 :: 		
0x061C	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,1190 :: 		
0x061E	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,1191 :: 		
0x0620	0x320005  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1192 :: 		
0x0622	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1193 :: 		
0x0624	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,1194 :: 		
0x0626	0x3A0002  	BRA NZ	DivFP_packupandgo
;__Lib_MathDouble.c,1195 :: 		
0x0628	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1196 :: 		
0x062A	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1197 :: 		
DivFP_packupandgo:
;__Lib_MathDouble.c,1198 :: 		
0x062C	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,1199 :: 		
0x062E	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,1200 :: 		
0x0630	0x3D0005  	BRA GE	DivFP_overfloW
;__Lib_MathDouble.c,1201 :: 		
0x0632	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,1202 :: 		
0x0634	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,1203 :: 		
0x0636	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,1204 :: 		
0x0638	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,1205 :: 		
0x063A	0x060000  	RETURN
;__Lib_MathDouble.c,1206 :: 		
DivFP_overfloW:
;__Lib_MathDouble.c,1207 :: 		
0x063C	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,1208 :: 		
DivFP_zerosig:
;__Lib_MathDouble.c,1209 :: 		
0x063E	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,1210 :: 		
0x0640	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,1211 :: 		
DivFP__funpack:
;__Lib_MathDouble.c,1212 :: 		
0x0642	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1213 :: 		
0x0644	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1214 :: 		
0x0646	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1215 :: 		
0x0648	0x320008  	BRA Z	DivFP_zeroorsub
;__Lib_MathDouble.c,1216 :: 		
0x064A	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1217 :: 		
0x064C	0x320002  	BRA Z	DivFP_nanorinf
;__Lib_MathDouble.c,1218 :: 		
DivFP_finitereturn:
;__Lib_MathDouble.c,1219 :: 		
0x064E	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1220 :: 		
0x0650	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1221 :: 		
DivFP_nanorinf:
;__Lib_MathDouble.c,1222 :: 		
0x0652	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1223 :: 		
0x0654	0x320001  	BRA Z	DivFP_infinite
;__Lib_MathDouble.c,1224 :: 		
0x0656	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1225 :: 		
DivFP_infinite:
;__Lib_MathDouble.c,1226 :: 		
0x0658	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1227 :: 		
DivFP_zeroorsub:
;__Lib_MathDouble.c,1228 :: 		
0x065A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1229 :: 		
0x065C	0x3A0002  	BRA NZ	DivFP_subnormal2
;__Lib_MathDouble.c,1230 :: 		
0x065E	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1231 :: 		
DivFP_normalize:
;__Lib_MathDouble.c,1232 :: 		
0x0660	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1233 :: 		
DivFP_subnormal2:
;__Lib_MathDouble.c,1234 :: 		
0x0662	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1235 :: 		
0x0664	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1236 :: 		
0x0666	0x3BFFFC  	BRA NN	DivFP_normalize
;__Lib_MathDouble.c,1237 :: 		
0x0668	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1238 :: 		
0x066A	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1241 :: 		
the_end__Div_FP:
;__Lib_MathDouble.c,1243 :: 		
L_end__Div_FP:
0x066C	0xFA8000  	ULNK
0x066E	0x060000  	RETURN
; end of __Div_FP
__Float2Longint:
0x070E	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x0710	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x0712	0x000000040782  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x0716	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x0718	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x071A	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x071C	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x071E	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x0720	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x0722	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x0724	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x0726	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x0728	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x072A	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x072C	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x072E	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x0730	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x0732	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x0734	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x0736	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x0738	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x073A	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x073C	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x073E	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x0740	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x0742	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x0744	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x0746	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x0748	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x074A	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x074C	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x074E	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x0750	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x0752	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x0754	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x0756	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x0758	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x075A	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x075C	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x075E	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x0760	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x0762	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x0764	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x0766	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x0768	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x076A	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x076C	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x076E	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x0770	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x0772	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x0774	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x0776	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x0778	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x077A	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x077C	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x077E	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x0780	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x0782	0xFA8000  	ULNK
0x0784	0x060000  	RETURN
; end of __Float2Longint
_getTimerPeriod:
0x1ECE	0xFA0008  	LNK	#8
;dspic.c,206 :: 		unsigned int getTimerPeriod(double timePeriod, unsigned char prescalerIndex) {
;dspic.c,207 :: 		return (unsigned int) ((timePeriod * 1000000) / (INSTRUCTION_PERIOD * PRESCALER_VALUES[prescalerIndex]));
0x1ED0	0x781F8C  	PUSH	W12
0x1ED2	0xBE000A  	MOV.D	W10, W0
0x1ED4	0x224002  	MOV	#9216, W2
0x1ED6	0x249743  	MOV	#18804, W3
0x1ED8	0x07F1ED  	RCALL	__Mul_FP
0x1EDA	0x78064F  	POP	W12
0x1EDC	0x980720  	MOV	W0, [W14+4]
0x1EDE	0x980731  	MOV	W1, [W14+6]
0x1EE0	0xFB800C  	ZE	W12, W0
0x1EE2	0xDD00C1  	SL	W0, #1, W1
0x1EE4	0x2ACCE0  	MOV	#lo_addr(_PRESCALER_VALUES), W0
0x1EE6	0x400101  	ADD	W0, W1, W2
0x1EE8	0x780012  	MOV	[W2], W0
0x1EEA	0xEB0080  	CLR	W1
0x1EEC	0x07F506  	RCALL	__Long2Float
0x1EEE	0x200002  	MOV	#0, W2
0x1EF0	0x23E003  	MOV	#15872, W3
0x1EF2	0x07F1E0  	RCALL	__Mul_FP
0x1EF4	0x980700  	MOV	W0, [W14+0]
0x1EF6	0x980711  	MOV	W1, [W14+2]
0x1EF8	0x90002E  	MOV	[W14+4], W0
0x1EFA	0x9000BE  	MOV	[W14+6], W1
0x1EFC	0xBE9F82  	PUSH.D	W2
0x1EFE	0x90010E  	MOV	[W14+0], W2
0x1F00	0x90019E  	MOV	[W14+2], W3
0x1F02	0x07F31B  	RCALL	__Div_FP
0x1F04	0xBE014F  	POP.D	W2
0x1F06	0x07F403  	RCALL	__Float2Longint
;dspic.c,208 :: 		}
L_end_getTimerPeriod:
0x1F08	0xFA8000  	ULNK
0x1F0A	0x060000  	RETURN
; end of _getTimerPeriod
__Long2Float:
0x08FA	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x08FC	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x08FE	0x0000000409AC  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0902	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0904	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x0906	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x0908	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x090A	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x090C	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x090E	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x0910	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x0912	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x0914	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x0916	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x0918	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x091A	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x091C	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x091E	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x0920	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x0922	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x0924	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x0926	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x0928	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x092A	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x092C	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x092E	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x0930	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x0932	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x0934	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x0936	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x0938	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x093A	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x093C	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x093E	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x0940	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x0942	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x0944	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x0946	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x0948	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x094A	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x094C	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x094E	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x0950	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x0952	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x0954	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x0956	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x0958	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x095A	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x095C	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x095E	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x0960	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x0962	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x0964	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x0966	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x0968	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x096A	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x096C	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x096E	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x0970	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x0972	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x0974	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x0976	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x0978	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x097A	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x097C	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x097E	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x0980	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x0982	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x0984	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x0986	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x0988	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x098A	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x098C	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x098E	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x0990	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x0992	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x0994	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x0996	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x0998	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x099A	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x099C	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x099E	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x09A0	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x09A2	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x09A4	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x09A6	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x09A8	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x09AA	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x09AC	0xFA8000  	ULNK
0x09AE	0x060000  	RETURN
; end of __Long2Float
0x2CDE	0x208001  	MOV	#lo_addr(_can_dataOutLength), W1
0x2CE0	0x2ACD60  	MOV	#44246, W0
0x2CE2	0x090000  	REPEAT	#0
0x2CE4	0x7818B0  	MOV	[W0++], [W1++]
0x2CE6	0x7858B0  	MOV.B	[W0++], [W1++]
0x2CE8	0x208041  	MOV	#lo_addr(_timer2_counter), W1
0x2CEA	0x2ACC20  	MOV	#44226, W0
0x2CEC	0x090005  	REPEAT	#5
0x2CEE	0x7818B0  	MOV	[W0++], [W1++]
0x2CF0	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x2CF2	0x2ACDC0  	MOV	#44252, W0
0x2CF4	0x7858B0  	MOV.B	[W0++], [W1++]
0x2CF6	0x208101  	MOV	#lo_addr(_is_requested_calibration), W1
0x2CF8	0x2ACDD0  	MOV	#44253, W0
0x2CFA	0x7858B0  	MOV.B	[W0++], [W1++]
0x2CFC	0x208121  	MOV	#lo_addr(_buzzer_state), W1
0x2CFE	0x2ACDA0  	MOV	#44250, W0
0x2D00	0x090000  	REPEAT	#0
0x2D02	0x7818B0  	MOV	[W0++], [W1++]
0x2D04	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2D06	0x2ACD90  	MOV	#44249, W0
0x2D08	0x7858B0  	MOV.B	[W0++], [W1++]
0x2D0A	0x208141  	MOV	#lo_addr(?lstr1___Lib_Sprintf), W1
0x2D0C	0x2AB3A0  	MOV	#43834, W0
0x2D0E	0x090035  	REPEAT	#53
0x2D10	0x7818B0  	MOV	[W0++], [W1++]
0x2D12	0x060000  	RETURN
_counter_quarter_turn_match:
0x2A90	0xF80034  	PUSH	PSVPAG
0x2A92	0xF80036  	PUSH	RCOUNT
0x2A94	0x781F80  	PUSH	W0
0x2A96	0x200020  	MOV	#2, W0
0x2A98	0x09000C  	REPEAT	#12
0x2A9A	0x781FB0  	PUSH	[W0++]
;motor.c,14 :: 		void counter_quarter_turn_match() iv IVT_ADDR_QEIINTERRUPT ics ICS_AUTO {       //interrupt on match of MAXCNT or on match on 0
;motor.c,15 :: 		switch(DIRECTION_REGISTER){
0x2A9C	0x370009  	BRA	L_counter_quarter_turn_match83
;motor.c,16 :: 		case 0:  //negative direction
L_counter_quarter_turn_match85:
;motor.c,17 :: 		motor_current_position--;
0x2A9E	0x200011  	MOV	#1, W1
0x2AA0	0x2089C0  	MOV	#lo_addr(_motor_current_position), W0
0x2AA2	0x108810  	SUBR	W1, [W0], [W0]
;motor.c,18 :: 		break;
0x2AA4	0x370010  	BRA	L_counter_quarter_turn_match84
;motor.c,19 :: 		case 1:  //positive direction
L_counter_quarter_turn_match86:
;motor.c,20 :: 		motor_current_position++;
0x2AA6	0x200011  	MOV	#1, W1
0x2AA8	0x2089C0  	MOV	#lo_addr(_motor_current_position), W0
0x2AAA	0x408810  	ADD	W1, [W0], [W0]
;motor.c,21 :: 		break;
0x2AAC	0x37000C  	BRA	L_counter_quarter_turn_match84
;motor.c,22 :: 		default:
L_counter_quarter_turn_match87:
;motor.c,23 :: 		break;
0x2AAE	0x37000B  	BRA	L_counter_quarter_turn_match84
;motor.c,24 :: 		}
L_counter_quarter_turn_match83:
0x2AB0	0xEF6000  	CLR.B	W0
0x2AB2	0xAF6123  	BTSC	UPDN_bit, BitPos(UPDN_bit+0)
0x2AB4	0xEC6000  	INC.B	W0
0x2AB6	0xE10460  	CP.B	W0, #0
0x2AB8	0x32FFF2  	BRA Z	L_counter_quarter_turn_match85
L__counter_quarter_turn_match277:
0x2ABA	0xEF6000  	CLR.B	W0
0x2ABC	0xAF6123  	BTSC	UPDN_bit, BitPos(UPDN_bit+0)
0x2ABE	0xEC6000  	INC.B	W0
0x2AC0	0xE10461  	CP.B	W0, #1
0x2AC2	0x32FFF1  	BRA Z	L_counter_quarter_turn_match86
L__counter_quarter_turn_match278:
0x2AC4	0x37FFF4  	BRA	L_counter_quarter_turn_match87
L_counter_quarter_turn_match84:
;motor.c,25 :: 		if (motor_current_position == motor_target_position)                        //Check for target reached
0x2AC6	0x8044E1  	MOV	_motor_current_position, W1
0x2AC8	0x208940  	MOV	#lo_addr(_motor_target_position), W0
0x2ACA	0xE10810  	CP	W1, [W0]
0x2ACC	0x3A0008  	BRA NZ	L_counter_quarter_turn_match88
L__counter_quarter_turn_match279:
;motor.c,27 :: 		brake_counter = 0;                                                      //Reset the counter for braking period lenght
0x2ACE	0x208021  	MOV	#lo_addr(_brake_counter), W1
0x2AD0	0xEF2000  	CLR	W0
0x2AD2	0x784880  	MOV.B	W0, [W1]
;motor.c,28 :: 		REVERSE = OFF;                          //Shorts the motor terminals
0x2AD4	0xA962DC  	BCLR	LATE3_bit, BitPos(LATE3_bit+0)
;motor.c,29 :: 		FORWARD = OFF;
0x2AD6	0xA982DC  	BCLR	LATE4_bit, BitPos(LATE4_bit+0)
;motor.c,30 :: 		ebb_current_state = EBB_BRAKING;                                        //Set the current state
0x2AD8	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2ADA	0xB3C030  	MOV.B	#3, W0
0x2ADC	0x784880  	MOV.B	W0, [W1]
;motor.c,31 :: 		}
L_counter_quarter_turn_match88:
;motor.c,32 :: 		IFS2bits.QEIIF = 0;                                                         //Reset Interrupt Flag
0x2ADE	0xA90089  	BCLR	IFS2bits, #8
;motor.c,33 :: 		}
L_end_counter_quarter_turn_match:
0x2AE0	0x2001A0  	MOV	#26, W0
0x2AE2	0x09000C  	REPEAT	#12
0x2AE4	0x78104F  	POP	[W0--]
0x2AE6	0x78004F  	POP	W0
0x2AE8	0xF90036  	POP	RCOUNT
0x2AEA	0xF90034  	POP	PSVPAG
0x2AEC	0x064000  	RETFIE
; end of _counter_quarter_turn_match
_CAN_Interrupt:
0x29A2	0xFA0016  	LNK	#22
0x29A4	0xF80034  	PUSH	PSVPAG
0x29A6	0xF80036  	PUSH	RCOUNT
0x29A8	0x781F80  	PUSH	W0
0x29AA	0x200020  	MOV	#2, W0
0x29AC	0x09000C  	REPEAT	#12
0x29AE	0x781FB0  	PUSH	[W0++]
;EBB_DPX.c,176 :: 		onCanInterrupt {
;EBB_DPX.c,182 :: 		Can_read(&CAN_id, CAN_datain, &CAN_dataLen, &CAN_flags);
0x29B0	0x781F8A  	PUSH	W10
0x29B2	0x781F8B  	PUSH	W11
0x29B4	0x781F8C  	PUSH	W12
0x29B6	0x781F8D  	PUSH	W13
0x29B8	0x4701EE  	ADD	W14, #14, W3
0x29BA	0x47016C  	ADD	W14, #12, W2
0x29BC	0x4700E4  	ADD	W14, #4, W1
0x29BE	0x470060  	ADD	W14, #0, W0
0x29C0	0x780683  	MOV	W3, W13
0x29C2	0x780602  	MOV	W2, W12
0x29C4	0x780581  	MOV	W1, W11
0x29C6	0x780500  	MOV	W0, W10
0x29C8	0x07FF5E  	RCALL	_Can_read
;EBB_DPX.c,184 :: 		if (CAN_dataLen >= 2) {
0x29CA	0x90006E  	MOV	[W14+12], W0
0x29CC	0xE10062  	CP	W0, #2
0x29CE	0x39000A  	BRA LTU	L_CAN_Interrupt161
L__CAN_Interrupt329:
;EBB_DPX.c,185 :: 		firstInt = (unsigned int) ((CAN_datain[0] << 8) | (CAN_datain[1] & 0xFF));
0x29D0	0x4700E4  	ADD	W14, #4, W1
0x29D2	0x784011  	MOV.B	[W1], W0
0x29D4	0xFB8000  	ZE	W0, W0
0x29D6	0xDD0148  	SL	W0, #8, W2
0x29D8	0x408061  	ADD	W1, #1, W0
0x29DA	0xFB8090  	ZE	[W0], W1
0x29DC	0x200FF0  	MOV	#255, W0
0x29DE	0x608080  	AND	W1, W0, W1
0x29E0	0x470070  	ADD	W14, #16, W0
0x29E2	0x710801  	IOR	W2, W1, [W0]
;EBB_DPX.c,186 :: 		}
L_CAN_Interrupt161:
;EBB_DPX.c,187 :: 		if (CAN_dataLen >= 4) {
0x29E4	0x90006E  	MOV	[W14+12], W0
0x29E6	0xE10064  	CP	W0, #4
0x29E8	0x39000B  	BRA LTU	L_CAN_Interrupt162
L__CAN_Interrupt330:
;EBB_DPX.c,188 :: 		secondInt = (unsigned int) ((CAN_datain[2] << 8) | (CAN_datain[3] & 0xFF));
0x29EA	0x4700E4  	ADD	W14, #4, W1
0x29EC	0x408062  	ADD	W1, #2, W0
0x29EE	0x784010  	MOV.B	[W0], W0
0x29F0	0xFB8000  	ZE	W0, W0
0x29F2	0xDD0148  	SL	W0, #8, W2
0x29F4	0x408063  	ADD	W1, #3, W0
0x29F6	0xFB8090  	ZE	[W0], W1
0x29F8	0x200FF0  	MOV	#255, W0
0x29FA	0x608080  	AND	W1, W0, W1
0x29FC	0x470072  	ADD	W14, #18, W0
0x29FE	0x710801  	IOR	W2, W1, [W0]
;EBB_DPX.c,189 :: 		}
L_CAN_Interrupt162:
;EBB_DPX.c,190 :: 		if (CAN_dataLen >= 6) {
0x2A00	0x90006E  	MOV	[W14+12], W0
0x2A02	0xE10066  	CP	W0, #6
0x2A04	0x39000B  	BRA LTU	L_CAN_Interrupt163
L__CAN_Interrupt331:
;EBB_DPX.c,191 :: 		thirdInt = (unsigned int) ((CAN_datain[4] << 8) | (CAN_datain[5] & 0xFF));
0x2A06	0x4700E4  	ADD	W14, #4, W1
0x2A08	0x408064  	ADD	W1, #4, W0
0x2A0A	0x784010  	MOV.B	[W0], W0
0x2A0C	0xFB8000  	ZE	W0, W0
0x2A0E	0xDD0148  	SL	W0, #8, W2
0x2A10	0x408065  	ADD	W1, #5, W0
0x2A12	0xFB8090  	ZE	[W0], W1
0x2A14	0x200FF0  	MOV	#255, W0
0x2A16	0x608080  	AND	W1, W0, W1
0x2A18	0x470074  	ADD	W14, #20, W0
0x2A1A	0x710801  	IOR	W2, W1, [W0]
;EBB_DPX.c,192 :: 		}
L_CAN_Interrupt163:
;EBB_DPX.c,193 :: 		if (CAN_dataLen >= 8) {
0x2A1C	0x90006E  	MOV	[W14+12], W0
0x2A1E	0xE10068  	CP	W0, #8
0x2A20	0x390000  	BRA LTU	L_CAN_Interrupt164
L__CAN_Interrupt332:
;EBB_DPX.c,195 :: 		}
L_CAN_Interrupt164:
;EBB_DPX.c,196 :: 		Can_clearInterrupt();
0x2A22	0x07FF2F  	RCALL	_Can_clearInterrupt
;EBB_DPX.c,198 :: 		switch(CAN_id){
0x2A24	0x37001D  	BRA	L_CAN_Interrupt165
;EBB_DPX.c,199 :: 		case SW_BRAKE_BIAS_EBB_ID:
L_CAN_Interrupt167:
;EBB_DPX.c,200 :: 		ebb_target_pos = ((unsigned int)firstInt);
0x2A26	0x90080E  	MOV	[W14+16], W0
0x2A28	0x8844D0  	MOV	W0, _ebb_target_pos
;EBB_DPX.c,201 :: 		ebb_settings = ((unsigned int)secondInt);
0x2A2A	0x90081E  	MOV	[W14+18], W0
0x2A2C	0x8844B0  	MOV	W0, _ebb_settings
;EBB_DPX.c,202 :: 		if ((ebb_target_pos != ebb_current_pos) && ebb_target_pos >= MIN_POSITION && ebb_target_pos <= MAX_POSITION)
0x2A2E	0x90088E  	MOV	[W14+16], W1
0x2A30	0x208920  	MOV	#lo_addr(_ebb_current_pos), W0
0x2A32	0xE10810  	CP	W1, [W0]
0x2A34	0x32000A  	BRA Z	L__CAN_Interrupt180
L__CAN_Interrupt333:
0x2A36	0x8044D0  	MOV	_ebb_target_pos, W0
0x2A38	0xE10060  	CP	W0, #0
0x2A3A	0x390007  	BRA LTU	L__CAN_Interrupt179
L__CAN_Interrupt334:
0x2A3C	0x8044D0  	MOV	_ebb_target_pos, W0
0x2A3E	0xE10070  	CP	W0, #16
0x2A40	0x3E0004  	BRA GTU	L__CAN_Interrupt178
L__CAN_Interrupt335:
L__CAN_Interrupt177:
;EBB_DPX.c,204 :: 		is_requested_movement = ON;
0x2A42	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x2A44	0xB3C010  	MOV.B	#1, W0
0x2A46	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,205 :: 		}else if (ebb_target_pos == CALIBRATION_POSITION)
0x2A48	0x370007  	BRA	L_CAN_Interrupt171
;EBB_DPX.c,202 :: 		if ((ebb_target_pos != ebb_current_pos) && ebb_target_pos >= MIN_POSITION && ebb_target_pos <= MAX_POSITION)
L__CAN_Interrupt180:
L__CAN_Interrupt179:
L__CAN_Interrupt178:
;EBB_DPX.c,205 :: 		}else if (ebb_target_pos == CALIBRATION_POSITION)
0x2A4A	0x200641  	MOV	#100, W1
0x2A4C	0x2089A0  	MOV	#lo_addr(_ebb_target_pos), W0
0x2A4E	0xE10810  	CP	W1, [W0]
0x2A50	0x3A0003  	BRA NZ	L_CAN_Interrupt172
L__CAN_Interrupt336:
;EBB_DPX.c,207 :: 		is_requested_calibration = ON;
0x2A52	0x208101  	MOV	#lo_addr(_is_requested_calibration), W1
0x2A54	0xB3C010  	MOV.B	#1, W0
0x2A56	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,208 :: 		}
L_CAN_Interrupt172:
L_CAN_Interrupt171:
;EBB_DPX.c,209 :: 		break;
0x2A58	0x37000F  	BRA	L_CAN_Interrupt166
;EBB_DPX.c,210 :: 		case DAU_FR_ID:
L_CAN_Interrupt173:
;EBB_DPX.c,211 :: 		brake_pressure_front = ((unsigned int)thirdInt);
0x2A5A	0x90082E  	MOV	[W14+20], W0
0x2A5C	0x8844C0  	MOV	W0, _brake_pressure_front
;EBB_DPX.c,212 :: 		break;
0x2A5E	0x37000C  	BRA	L_CAN_Interrupt166
;EBB_DPX.c,214 :: 		}
L_CAN_Interrupt165:
0x2A60	0x204001  	MOV	#1024, W1
0x2A62	0x200002  	MOV	#0, W2
0x2A64	0x470060  	ADD	W14, #0, W0
0x2A66	0xE10830  	CP	W1, [W0++]
0x2A68	0xE19020  	CPB	W2, [W0--]
0x2A6A	0x32FFDD  	BRA Z	L_CAN_Interrupt167
L__CAN_Interrupt337:
0x2A6C	0x206501  	MOV	#1616, W1
0x2A6E	0x200002  	MOV	#0, W2
0x2A70	0x470060  	ADD	W14, #0, W0
0x2A72	0xE10830  	CP	W1, [W0++]
0x2A74	0xE19020  	CPB	W2, [W0--]
0x2A76	0x32FFF1  	BRA Z	L_CAN_Interrupt173
L__CAN_Interrupt338:
L_CAN_Interrupt166:
;EBB_DPX.c,215 :: 		}
L_end_CAN_Interrupt:
0x2A78	0x7806CF  	POP	W13
0x2A7A	0x78064F  	POP	W12
0x2A7C	0x7805CF  	POP	W11
0x2A7E	0x78054F  	POP	W10
0x2A80	0x2001A0  	MOV	#26, W0
0x2A82	0x09000C  	REPEAT	#12
0x2A84	0x78104F  	POP	[W0--]
0x2A86	0x78004F  	POP	W0
0x2A88	0xF90036  	POP	RCOUNT
0x2A8A	0xF90034  	POP	PSVPAG
0x2A8C	0xFA8000  	ULNK
0x2A8E	0x064000  	RETFIE
; end of _CAN_Interrupt
_Can_read:
0x2886	0xFA0002  	LNK	#2
;can.c,49 :: 		void Can_read(unsigned long int *id, char dataBuffer[], unsigned int *dataLength, unsigned int *inFlags) {
0x2888	0x781F8D  	PUSH	W13
0x288A	0x98070D  	MOV	W13, [W14+0]
;can.c,50 :: 		if (Can_B0hasBeenReceived()) {
0x288C	0x07FD1E  	RCALL	_Can_B0hasBeenReceived
0x288E	0xE24000  	CP0.B	W0
0x2890	0x320005  	BRA Z	L_Can_read0
L__Can_read183:
;can.c,51 :: 		Can_clearB0Flag();
0x2892	0x07FD23  	RCALL	_Can_clearB0Flag
;can.c,52 :: 		Can1Read(id, dataBuffer, dataLength, &inFlags);
0x2894	0x470060  	ADD	W14, #0, W0
0x2896	0x780680  	MOV	W0, W13
0x2898	0x07FD22  	RCALL	_CAN1Read
;can.c,53 :: 		}
0x289A	0x370007  	BRA	L_Can_read1
L_Can_read0:
;can.c,54 :: 		else if (Can_B1hasBeenReceived()) {
0x289C	0x07FE35  	RCALL	_Can_B1hasBeenReceived
0x289E	0xE24000  	CP0.B	W0
0x28A0	0x320004  	BRA Z	L_Can_read2
L__Can_read184:
;can.c,55 :: 		Can_clearB1Flag();
0x28A2	0x07FE30  	RCALL	_Can_clearB1Flag
;can.c,56 :: 		Can1Read(id, dataBuffer, dataLength, &inFlags);
0x28A4	0x470060  	ADD	W14, #0, W0
0x28A6	0x780680  	MOV	W0, W13
0x28A8	0x07FD1A  	RCALL	_CAN1Read
;can.c,57 :: 		}
L_Can_read2:
L_Can_read1:
;can.c,58 :: 		}
L_end_Can_read:
0x28AA	0x7806CF  	POP	W13
0x28AC	0xFA8000  	ULNK
0x28AE	0x060000  	RETURN
; end of _Can_read
_Can_B0hasBeenReceived:
;can.c,108 :: 		unsigned char Can_B0hasBeenReceived(void) {
;can.c,109 :: 		return CAN_INTERRUPT_ONB0_OCCURRED == 1;
0x22CA	0xEF6000  	CLR.B	W0
0x22CC	0xAF0396  	BTSC	C1INTFbits, #0
0x22CE	0xEC6000  	INC.B	W0
0x22D0	0xE10461  	CP.B	W0, #1
0x22D2	0xEF6000  	CLR.B	W0
0x22D4	0x3A0001  	BRA NZ	L__Can_B0hasBeenReceived198
0x22D6	0xEC6000  	INC.B	W0
L__Can_B0hasBeenReceived198:
;can.c,110 :: 		}
L_end_Can_B0hasBeenReceived:
0x22D8	0x060000  	RETURN
; end of _Can_B0hasBeenReceived
_Can_clearB0Flag:
;can.c,116 :: 		void Can_clearB0Flag(void) {
;can.c,117 :: 		CAN_INTERRUPT_ONB0_OCCURRED = 0;
0x22DA	0xA90396  	BCLR	C1INTFbits, #0
;can.c,118 :: 		}
L_end_Can_clearB0Flag:
0x22DC	0x060000  	RETURN
; end of _Can_clearB0Flag
_CAN1Read:
0x22DE	0xFA0000  	LNK	#0
;__Lib_CAN_1.c,691 :: 		
;__Lib_CAN_1.c,697 :: 		
0x22E0	0xEF2000  	CLR	W0
0x22E2	0x780E80  	MOV	W0, [W13]
;__Lib_CAN_1.c,699 :: 		
0x22E4	0xAEE38E  	BTSS.B	C1RX0CONbits, #7
0x22E6	0x370011  	BRA	L_CAN1Read43
;__Lib_CAN_1.c,701 :: 		
; ptr start address is: 10 (W5)
0x22E8	0x203805  	MOV	#lo_addr(C1RX0SID), W5
;__Lib_CAN_1.c,702 :: 		
; lbIsItBuffer0 start address is: 8 (W4)
0x22EA	0x2FFFF4  	MOV	#65535, W4
;__Lib_CAN_1.c,704 :: 		
0x22EC	0xA90396  	BCLR	C1INTFbits, #0
;__Lib_CAN_1.c,706 :: 		
0x22EE	0xAEE397  	BTSS	C1INTFbits, #15
0x22F0	0x370003  	BRA	L_CAN1Read44
;__Lib_CAN_1.c,707 :: 		
0x22F2	0x78001D  	MOV	[W13], W0
0x22F4	0x700EE8  	IOR	W0, #8, [W13]
;__Lib_CAN_1.c,708 :: 		
0x22F6	0xA9E397  	BCLR	C1INTFbits, #15
;__Lib_CAN_1.c,709 :: 		
L_CAN1Read44:
;__Lib_CAN_1.c,710 :: 		
0x22F8	0xAE438E  	BTSS.B	C1RX0CONbits, #2
0x22FA	0x370006  	BRA	L_CAN1Read45
;__Lib_CAN_1.c,711 :: 		
0x22FC	0xBF838E  	MOV	C1RX0CON, WREG
0x22FE	0x600067  	AND	W0, #7, W0
0x2300	0x700E9D  	IOR	W0, [W13], [W13]
;__Lib_CAN_1.c,712 :: 		
0x2302	0x78001D  	MOV	[W13], W0
0x2304	0x600061  	AND	W0, #1, W0
0x2306	0x780E80  	MOV	W0, [W13]
;__Lib_CAN_1.c,713 :: 		
L_CAN1Read45:
;__Lib_CAN_1.c,714 :: 		
; ptr end address is: 10 (W5)
; lbIsItBuffer0 end address is: 8 (W4)
0x2308	0x370017  	BRA	L_CAN1Read46
L_CAN1Read43:
;__Lib_CAN_1.c,716 :: 		
0x230A	0xAEE37E  	BTSS.B	C1RX1CONbits, #7
0x230C	0x370012  	BRA	L_CAN1Read47
;__Lib_CAN_1.c,718 :: 		
; ptr start address is: 4 (W2)
0x230E	0x203702  	MOV	#lo_addr(C1RX1SID), W2
;__Lib_CAN_1.c,719 :: 		
; lbIsItBuffer0 start address is: 8 (W4)
0x2310	0xEF2008  	CLR	W4
;__Lib_CAN_1.c,721 :: 		
0x2312	0xA92396  	BCLR	C1INTFbits, #1
;__Lib_CAN_1.c,723 :: 		
0x2314	0xAEC397  	BTSS	C1INTFbits, #14
0x2316	0x370003  	BRA	L_CAN1Read48
;__Lib_CAN_1.c,724 :: 		
0x2318	0x78001D  	MOV	[W13], W0
0x231A	0x700EE8  	IOR	W0, #8, [W13]
;__Lib_CAN_1.c,725 :: 		
0x231C	0xA9C397  	BCLR	C1INTFbits, #14
;__Lib_CAN_1.c,726 :: 		
L_CAN1Read48:
;__Lib_CAN_1.c,727 :: 		
0x231E	0xBF837E  	MOV	C1RX1CON, WREG
0x2320	0x600067  	AND	W0, #7, W0
0x2322	0x700E9D  	IOR	W0, [W13], [W13]
;__Lib_CAN_1.c,728 :: 		
0x2324	0x78001D  	MOV	[W13], W0
0x2326	0xE10062  	CP	W0, #2
0x2328	0x310003  	BRA GEU	L_CAN1Read49
L__CAN1Read85:
;__Lib_CAN_1.c,729 :: 		
0x232A	0x78009D  	MOV	[W13], W1
0x232C	0x200800  	MOV	#128, W0
0x232E	0x708E80  	IOR	W1, W0, [W13]
L_CAN1Read49:
;__Lib_CAN_1.c,730 :: 		
0x2330	0x370002  	BRA	L_CAN1Read50
; ptr end address is: 4 (W2)
; lbIsItBuffer0 end address is: 8 (W4)
L_CAN1Read47:
;__Lib_CAN_1.c,732 :: 		
0x2332	0xEF2000  	CLR	W0
0x2334	0x370037  	BRA	L_end_CAN1Read
;__Lib_CAN_1.c,733 :: 		
L_CAN1Read50:
; lbIsItBuffer0 start address is: 8 (W4)
; ptr start address is: 4 (W2)
0x2336	0x780282  	MOV	W2, W5
; lbIsItBuffer0 end address is: 8 (W4)
L_CAN1Read46:
; ptr end address is: 4 (W2)
;__Lib_CAN_1.c,736 :: 		
; lbIsItBuffer0 start address is: 8 (W4)
; ptr start address is: 10 (W5)
0x2338	0xA60015  	BTSS	[W5], #0
0x233A	0x37000A  	BRA	L_CAN1Read51
;__Lib_CAN_1.c,737 :: 		
0x233C	0x78009D  	MOV	[W13], W1
0x233E	0x200200  	MOV	#32, W0
0x2340	0x708E80  	IOR	W1, W0, [W13]
;__Lib_CAN_1.c,738 :: 		
0x2342	0xBE9F8A  	PUSH.D	W10
0x2344	0x200F7B  	MOV	#247, W11
0x2346	0x780505  	MOV	W5, W10
0x2348	0x07FE58  	RCALL	__Lib_CAN_1_RegsToCAN1ID
0x234A	0xBE054F  	POP.D	W10
0x234C	0xBE8D00  	MOV.D	W0, [W10]
;__Lib_CAN_1.c,739 :: 		
0x234E	0x370006  	BRA	L_CAN1Read52
L_CAN1Read51:
;__Lib_CAN_1.c,741 :: 		
0x2350	0xBE9F8A  	PUSH.D	W10
0x2352	0x200FFB  	MOV	#255, W11
0x2354	0x780505  	MOV	W5, W10
0x2356	0x07FE51  	RCALL	__Lib_CAN_1_RegsToCAN1ID
0x2358	0xBE054F  	POP.D	W10
0x235A	0xBE8D00  	MOV.D	W0, [W10]
L_CAN1Read52:
;__Lib_CAN_1.c,743 :: 		
0x235C	0x428064  	ADD	W5, #4, W0
; ptr end address is: 10 (W5)
; ptr start address is: 6 (W3)
0x235E	0x780180  	MOV	W0, W3
;__Lib_CAN_1.c,745 :: 		
0x2360	0x780010  	MOV	[W0], W0
0x2362	0x60006F  	AND	W0, #15, W0
; ddatalen start address is: 4 (W2)
0x2364	0x780100  	MOV	W0, W2
;__Lib_CAN_1.c,746 :: 		
0x2366	0x780E00  	MOV	W0, [W12]
;__Lib_CAN_1.c,748 :: 		
0x2368	0xA69013  	BTSS	[W3], #9
0x236A	0x370003  	BRA	L_CAN1Read53
;__Lib_CAN_1.c,749 :: 		
0x236C	0x78009D  	MOV	[W13], W1
0x236E	0x200400  	MOV	#64, W0
0x2370	0x708E80  	IOR	W1, W0, [W13]
L_CAN1Read53:
;__Lib_CAN_1.c,751 :: 		
; chptr start address is: 0 (W0)
0x2372	0x418062  	ADD	W3, #2, W0
; ptr end address is: 6 (W3)
;__Lib_CAN_1.c,753 :: 		
; i start address is: 10 (W5)
0x2374	0xEF200A  	CLR	W5
;__Lib_CAN_1.c,754 :: 		
; ddatalen end address is: 4 (W2)
; chptr end address is: 0 (W0)
; lbIsItBuffer0 end address is: 8 (W4)
; i end address is: 10 (W5)
0x2376	0x780182  	MOV	W2, W3
0x2378	0x780100  	MOV	W0, W2
;__Lib_CAN_1.c,755 :: 		
L_CAN1Read54:
; chptr start address is: 4 (W2)
; chptr start address is: 4 (W2)
; chptr end address is: 4 (W2)
; i start address is: 10 (W5)
; ddatalen start address is: 6 (W3)
; lbIsItBuffer0 start address is: 8 (W4)
0x237A	0xFB8005  	ZE	W5, W0
0x237C	0xE10003  	CP	W0, W3
0x237E	0x310007  	BRA GEU	L_CAN1Read55
L__CAN1Read86:
; chptr end address is: 4 (W2)
;__Lib_CAN_1.c,756 :: 		
; chptr start address is: 4 (W2)
0x2380	0xFB8005  	ZE	W5, W0
0x2382	0x458080  	ADD	W11, W0, W1
0x2384	0xFB8005  	ZE	W5, W0
0x2386	0x410000  	ADD	W2, W0, W0
0x2388	0x784890  	MOV.B	[W0], [W1]
;__Lib_CAN_1.c,757 :: 		
0x238A	0xEC600A  	INC.B	W5
;__Lib_CAN_1.c,758 :: 		
; chptr end address is: 4 (W2)
; ddatalen end address is: 6 (W3)
; i end address is: 10 (W5)
0x238C	0x37FFF6  	BRA	L_CAN1Read54
L_CAN1Read55:
;__Lib_CAN_1.c,763 :: 		
0x238E	0xAEE396  	BTSS	C1INTFbits, #7
0x2390	0x370003  	BRA	L_CAN1Read56
;__Lib_CAN_1.c,764 :: 		
0x2392	0x78001D  	MOV	[W13], W0
0x2394	0x700EF0  	IOR	W0, #16, [W13]
;__Lib_CAN_1.c,765 :: 		
0x2396	0xA9E396  	BCLR	C1INTFbits, #7
;__Lib_CAN_1.c,766 :: 		
L_CAN1Read56:
;__Lib_CAN_1.c,768 :: 		
0x2398	0xE20008  	CP0	W4
0x239A	0x320002  	BRA Z	L_CAN1Read57
L__CAN1Read87:
; lbIsItBuffer0 end address is: 8 (W4)
;__Lib_CAN_1.c,769 :: 		
0x239C	0xA9E38E  	BCLR.B	C1RX0CONbits, #7
0x239E	0x370001  	BRA	L_CAN1Read58
L_CAN1Read57:
;__Lib_CAN_1.c,771 :: 		
0x23A0	0xA9E37E  	BCLR.B	C1RX1CONbits, #7
L_CAN1Read58:
;__Lib_CAN_1.c,773 :: 		
0x23A2	0x2FFFF0  	MOV	#65535, W0
;__Lib_CAN_1.c,774 :: 		
L_end_CAN1Read:
0x23A4	0xFA8000  	ULNK
0x23A6	0x060000  	RETURN
; end of _CAN1Read
__Lib_CAN_1_RegsToCAN1ID:
0x1FFA	0xFA0004  	LNK	#4
;__Lib_CAN_1.c,547 :: 		
;__Lib_CAN_1.c,548 :: 		
0x1FFC	0x200000  	MOV	#0, W0
0x1FFE	0x980700  	MOV	W0, [W14+0]
0x2000	0x200000  	MOV	#0, W0
0x2002	0x980710  	MOV	W0, [W14+2]
;__Lib_CAN_1.c,550 :: 		
0x2004	0xAE6016  	BTSS	W11, #3
0x2006	0x370006  	BRA	L___Lib_CAN_1_RegsToCAN1ID30
;__Lib_CAN_1.c,551 :: 		
0x2008	0x78001A  	MOV	[W10], W0
0x200A	0xDE0042  	LSR	W0, #2, W0
0x200C	0xEB0080  	CLR	W1
0x200E	0x980700  	MOV	W0, [W14+0]
0x2010	0x980711  	MOV	W1, [W14+2]
;__Lib_CAN_1.c,552 :: 		
0x2012	0x370017  	BRA	L___Lib_CAN_1_RegsToCAN1ID31
L___Lib_CAN_1_RegsToCAN1ID30:
;__Lib_CAN_1.c,554 :: 		
0x2014	0x4701E0  	ADD	W14, #0, W3
0x2016	0x418162  	ADD	W3, #2, W2
0x2018	0x78009A  	MOV	[W10], W1
0x201A	0x21FFC0  	MOV	#8188, W0
0x201C	0x608900  	AND	W1, W0, [W2]
;__Lib_CAN_1.c,555 :: 		
0x201E	0x450062  	ADD	W10, #2, W0
0x2020	0x780500  	MOV	W0, W10
;__Lib_CAN_1.c,556 :: 		
0x2022	0x4180E2  	ADD	W3, #2, W1
0x2024	0x780010  	MOV	[W0], W0
0x2026	0xDE004A  	LSR	W0, #10, W0
0x2028	0x700891  	IOR	W0, [W1], [W1]
;__Lib_CAN_1.c,557 :: 		
0x202A	0x78009A  	MOV	[W10], W1
0x202C	0x203FF0  	MOV	#1023, W0
0x202E	0x608000  	AND	W1, W0, W0
0x2030	0xDD0046  	SL	W0, #6, W0
0x2032	0x780980  	MOV	W0, [W3]
;__Lib_CAN_1.c,558 :: 		
0x2034	0x450062  	ADD	W10, #2, W0
0x2036	0x780500  	MOV	W0, W10
;__Lib_CAN_1.c,559 :: 		
0x2038	0x780010  	MOV	[W0], W0
0x203A	0xDE00CA  	LSR	W0, #10, W1
0x203C	0x470060  	ADD	W14, #0, W0
0x203E	0x708010  	IOR	W1, [W0], W0
0x2040	0x780980  	MOV	W0, [W3]
;__Lib_CAN_1.c,560 :: 		
L___Lib_CAN_1_RegsToCAN1ID31:
;__Lib_CAN_1.c,561 :: 		
0x2042	0x90000E  	MOV	[W14+0], W0
0x2044	0x90009E  	MOV	[W14+2], W1
;__Lib_CAN_1.c,562 :: 		
L_end_RegsToCAN1ID:
0x2046	0xFA8000  	ULNK
0x2048	0x060000  	RETURN
; end of __Lib_CAN_1_RegsToCAN1ID
_Can_B1hasBeenReceived:
;can.c,112 :: 		unsigned char Can_B1hasBeenReceived(void) {
;can.c,113 :: 		return CAN_INTERRUPT_ONB1_OCCURRED == 1;
0x2508	0xEF6000  	CLR.B	W0
0x250A	0xAF2396  	BTSC	C1INTFbits, #1
0x250C	0xEC6000  	INC.B	W0
0x250E	0xE10461  	CP.B	W0, #1
0x2510	0xEF6000  	CLR.B	W0
0x2512	0x3A0001  	BRA NZ	L__Can_B1hasBeenReceived200
0x2514	0xEC6000  	INC.B	W0
L__Can_B1hasBeenReceived200:
;can.c,114 :: 		}
L_end_Can_B1hasBeenReceived:
0x2516	0x060000  	RETURN
; end of _Can_B1hasBeenReceived
_Can_clearB1Flag:
;can.c,120 :: 		void Can_clearB1Flag(void) {
;can.c,121 :: 		CAN_INTERRUPT_ONB1_OCCURRED = 0;
0x2504	0xA92396  	BCLR	C1INTFbits, #1
;can.c,122 :: 		}
L_end_Can_clearB1Flag:
0x2506	0x060000  	RETURN
; end of _Can_clearB1Flag
_Can_clearInterrupt:
;can.c,124 :: 		void Can_clearInterrupt(void) {
;can.c,125 :: 		CAN_INTERRUPT_OCCURRED = 0;
0x2882	0xA96087  	BCLR	IFS1bits, #11
;can.c,126 :: 		}
L_end_Can_clearInterrupt:
0x2884	0x060000  	RETURN
; end of _Can_clearInterrupt
_timer4_interrupt:
0x28B0	0xF80034  	PUSH	PSVPAG
0x28B2	0xF80036  	PUSH	RCOUNT
0x28B4	0x781F80  	PUSH	W0
0x28B6	0x200020  	MOV	#2, W0
0x28B8	0x09000C  	REPEAT	#12
0x28BA	0x781FB0  	PUSH	[W0++]
;EBB_DPX.c,160 :: 		onTimer4Interrupt {
;EBB_DPX.c,161 :: 		if(buzzer_state == ON){  //Sound routine
0x28BC	0x804090  	MOV	_buzzer_state, W0
0x28BE	0xE10061  	CP	W0, #1
0x28C0	0x3A0001  	BRA NZ	L_timer4_interrupt158
L__timer4_interrupt325:
;EBB_DPX.c,162 :: 		BUZZER = !BUZZER;
0x28C2	0xAA42D6  	BTG	LATD2_bit, BitPos(LATD2_bit+0)
;EBB_DPX.c,163 :: 		}
L_timer4_interrupt158:
;EBB_DPX.c,164 :: 		clearTimer4();
0x28C4	0xA9A086  	BCLR	IFS1bits, #5
;EBB_DPX.c,165 :: 		}
L_end_timer4_interrupt:
0x28C6	0x2001A0  	MOV	#26, W0
0x28C8	0x09000C  	REPEAT	#12
0x28CA	0x78104F  	POP	[W0--]
0x28CC	0x78004F  	POP	W0
0x28CE	0xF90036  	POP	RCOUNT
0x28D0	0xF90034  	POP	PSVPAG
0x28D2	0x064000  	RETFIE
; end of _timer4_interrupt
_timer2_interrupt:
0x2AEE	0xF80034  	PUSH	PSVPAG
0x2AF0	0xF80036  	PUSH	RCOUNT
0x2AF2	0x781F80  	PUSH	W0
0x2AF4	0x200020  	MOV	#2, W0
0x2AF6	0x09000C  	REPEAT	#12
0x2AF8	0x781FB0  	PUSH	[W0++]
;EBB_DPX.c,145 :: 		onTimer2Interrupt {
;EBB_DPX.c,146 :: 		timer2_counter++;
0x2AFA	0x781F8A  	PUSH	W10
0x2AFC	0x200011  	MOV	#1, W1
0x2AFE	0x208040  	MOV	#lo_addr(_timer2_counter), W0
0x2B00	0x408810  	ADD	W1, [W0], [W0]
;EBB_DPX.c,147 :: 		brake_counter++;
0x2B02	0xB3C011  	MOV.B	#1, W1
0x2B04	0x208020  	MOV	#lo_addr(_brake_counter), W0
0x2B06	0x40C810  	ADD.B	W1, [W0], [W0]
;EBB_DPX.c,148 :: 		EBB_control();
0x2B08	0x07FD92  	RCALL	_EBB_control
;EBB_DPX.c,149 :: 		if (timer2_counter >= 10)
0x2B0A	0x804020  	MOV	_timer2_counter, W0
0x2B0C	0xE1006A  	CP	W0, #10
0x2B0E	0x350003  	BRA LT	L_timer2_interrupt157
L__timer2_interrupt323:
;EBB_DPX.c,151 :: 		CAN_routine();  //Call the can update routine
0x2B10	0x07FCEA  	RCALL	_CAN_routine
;EBB_DPX.c,152 :: 		timer2_counter = 0;
0x2B12	0xEF2000  	CLR	W0
0x2B14	0x884020  	MOV	W0, _timer2_counter
;EBB_DPX.c,153 :: 		}
L_timer2_interrupt157:
;EBB_DPX.c,155 :: 		sprintf(dstr, "POSCNT: %u\r\n", POSCNT);
0x2B16	0xF80126  	PUSH	POSCNT
0x2B18	0x2ACB50  	MOV	#lo_addr(?lstr_2_EBB_DPX), W0
0x2B1A	0x781F80  	PUSH	W0
0x2B1C	0x2081B0  	MOV	#lo_addr(_dstr), W0
0x2B1E	0x781F80  	PUSH	W0
0x2B20	0x07FB6A  	RCALL	_sprintf
0x2B22	0xB1006F  	SUB	#6, W15
;EBB_DPX.c,156 :: 		Debug_UART_Write(dstr);
0x2B24	0x2081BA  	MOV	#lo_addr(_dstr), W10
0x2B26	0x07FBCF  	RCALL	_Debug_UART_Write
;EBB_DPX.c,157 :: 		clearTimer2();
0x2B28	0xA9C084  	BCLR	IFS0bits, #6
;EBB_DPX.c,158 :: 		}
L_end_timer2_interrupt:
0x2B2A	0x78054F  	POP	W10
0x2B2C	0x2001A0  	MOV	#26, W0
0x2B2E	0x09000C  	REPEAT	#12
0x2B30	0x78104F  	POP	[W0--]
0x2B32	0x78004F  	POP	W0
0x2B34	0xF90036  	POP	RCOUNT
0x2B36	0xF90034  	POP	PSVPAG
0x2B38	0x064000  	RETFIE
; end of _timer2_interrupt
_EBB_control:
;motor.c,37 :: 		void EBB_control()
;motor.c,39 :: 		switch(ebb_current_state)           //State machine
0x262E	0x781F8A  	PUSH	W10
0x2630	0x781F8B  	PUSH	W11
0x2632	0x781F8C  	PUSH	W12
0x2634	0x370106  	BRA	L_EBB_control89
;motor.c,41 :: 		case EBB_OFF:                      //Off state
L_EBB_control91:
;motor.c,42 :: 		if(is_requested_movement)       //Check if the EBB is requested to move in a different position
0x2636	0x208030  	MOV	#lo_addr(_is_requested_movement), W0
0x2638	0xE00410  	CP0.B	[W0]
0x263A	0x32006E  	BRA Z	L_EBB_control92
L__EBB_control281:
;motor.c,44 :: 		switch(ebb_target_pos)  //Obtain the requested position in quarter of turns (maybe to be improved!!)
0x263C	0x370033  	BRA	L_EBB_control93
;motor.c,46 :: 		case 0:
L_EBB_control95:
;motor.c,47 :: 		motor_target_position = POSITION_0;
0x263E	0xEF2000  	CLR	W0
0x2640	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,48 :: 		break;
0x2642	0x370063  	BRA	L_EBB_control94
;motor.c,49 :: 		case 1:
L_EBB_control96:
;motor.c,50 :: 		motor_target_position = POSITION_1;
0x2644	0x200020  	MOV	#2, W0
0x2646	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,51 :: 		break;
0x2648	0x370060  	BRA	L_EBB_control94
;motor.c,52 :: 		case 2:
L_EBB_control97:
;motor.c,53 :: 		motor_target_position = POSITION_2;
0x264A	0x200040  	MOV	#4, W0
0x264C	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,54 :: 		break;
0x264E	0x37005D  	BRA	L_EBB_control94
;motor.c,55 :: 		case 3:
L_EBB_control98:
;motor.c,56 :: 		motor_target_position = POSITION_3;
0x2650	0x200060  	MOV	#6, W0
0x2652	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,57 :: 		break;
0x2654	0x37005A  	BRA	L_EBB_control94
;motor.c,58 :: 		case 4:
L_EBB_control99:
;motor.c,59 :: 		motor_target_position = POSITION_4;
0x2656	0x200080  	MOV	#8, W0
0x2658	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,60 :: 		break;
0x265A	0x370057  	BRA	L_EBB_control94
;motor.c,61 :: 		case 5:
L_EBB_control100:
;motor.c,62 :: 		motor_target_position = POSITION_5;
0x265C	0x2000A0  	MOV	#10, W0
0x265E	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,63 :: 		break;
0x2660	0x370054  	BRA	L_EBB_control94
;motor.c,64 :: 		case 6:
L_EBB_control101:
;motor.c,65 :: 		motor_target_position = POSITION_6;
0x2662	0x2000C0  	MOV	#12, W0
0x2664	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,66 :: 		break;
0x2666	0x370051  	BRA	L_EBB_control94
;motor.c,67 :: 		case 7:
L_EBB_control102:
;motor.c,68 :: 		motor_target_position = POSITION_7;
0x2668	0x2000E0  	MOV	#14, W0
0x266A	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,69 :: 		break;
0x266C	0x37004E  	BRA	L_EBB_control94
;motor.c,70 :: 		case 8:
L_EBB_control103:
;motor.c,71 :: 		motor_target_position = POSITION_8;
0x266E	0x200100  	MOV	#16, W0
0x2670	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,72 :: 		break;
0x2672	0x37004B  	BRA	L_EBB_control94
;motor.c,73 :: 		case 9:
L_EBB_control104:
;motor.c,74 :: 		motor_target_position = POSITION_9;
0x2674	0x200120  	MOV	#18, W0
0x2676	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,75 :: 		break;
0x2678	0x370048  	BRA	L_EBB_control94
;motor.c,76 :: 		case 10:
L_EBB_control105:
;motor.c,77 :: 		motor_target_position = POSITION_10;
0x267A	0x200140  	MOV	#20, W0
0x267C	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,78 :: 		break;
0x267E	0x370045  	BRA	L_EBB_control94
;motor.c,79 :: 		case 11:
L_EBB_control106:
;motor.c,80 :: 		motor_target_position = POSITION_11;
0x2680	0x200160  	MOV	#22, W0
0x2682	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,81 :: 		break;
0x2684	0x370042  	BRA	L_EBB_control94
;motor.c,82 :: 		case 12:
L_EBB_control107:
;motor.c,83 :: 		motor_target_position = POSITION_12;
0x2686	0x200180  	MOV	#24, W0
0x2688	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,84 :: 		break;
0x268A	0x37003F  	BRA	L_EBB_control94
;motor.c,85 :: 		case 13:
L_EBB_control108:
;motor.c,86 :: 		motor_target_position = POSITION_13;
0x268C	0x2001A0  	MOV	#26, W0
0x268E	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,87 :: 		break;
0x2690	0x37003C  	BRA	L_EBB_control94
;motor.c,88 :: 		case 14:
L_EBB_control109:
;motor.c,89 :: 		motor_target_position = POSITION_14;
0x2692	0x2001C0  	MOV	#28, W0
0x2694	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,90 :: 		break;
0x2696	0x370039  	BRA	L_EBB_control94
;motor.c,91 :: 		case 15:
L_EBB_control110:
;motor.c,92 :: 		motor_target_position = POSITION_15;
0x2698	0x2001E0  	MOV	#30, W0
0x269A	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,93 :: 		break;
0x269C	0x370036  	BRA	L_EBB_control94
;motor.c,94 :: 		case 16:
L_EBB_control111:
;motor.c,95 :: 		motor_target_position = POSITION_16;
0x269E	0x200200  	MOV	#32, W0
0x26A0	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,96 :: 		break;
0x26A2	0x370033  	BRA	L_EBB_control94
;motor.c,97 :: 		}
L_EBB_control93:
0x26A4	0x8044D0  	MOV	_ebb_target_pos, W0
0x26A6	0xE10060  	CP	W0, #0
0x26A8	0x32FFCA  	BRA Z	L_EBB_control95
L__EBB_control282:
0x26AA	0x8044D0  	MOV	_ebb_target_pos, W0
0x26AC	0xE10061  	CP	W0, #1
0x26AE	0x32FFCA  	BRA Z	L_EBB_control96
L__EBB_control283:
0x26B0	0x8044D0  	MOV	_ebb_target_pos, W0
0x26B2	0xE10062  	CP	W0, #2
0x26B4	0x32FFCA  	BRA Z	L_EBB_control97
L__EBB_control284:
0x26B6	0x8044D0  	MOV	_ebb_target_pos, W0
0x26B8	0xE10063  	CP	W0, #3
0x26BA	0x32FFCA  	BRA Z	L_EBB_control98
L__EBB_control285:
0x26BC	0x8044D0  	MOV	_ebb_target_pos, W0
0x26BE	0xE10064  	CP	W0, #4
0x26C0	0x32FFCA  	BRA Z	L_EBB_control99
L__EBB_control286:
0x26C2	0x8044D0  	MOV	_ebb_target_pos, W0
0x26C4	0xE10065  	CP	W0, #5
0x26C6	0x32FFCA  	BRA Z	L_EBB_control100
L__EBB_control287:
0x26C8	0x8044D0  	MOV	_ebb_target_pos, W0
0x26CA	0xE10066  	CP	W0, #6
0x26CC	0x32FFCA  	BRA Z	L_EBB_control101
L__EBB_control288:
0x26CE	0x8044D0  	MOV	_ebb_target_pos, W0
0x26D0	0xE10067  	CP	W0, #7
0x26D2	0x32FFCA  	BRA Z	L_EBB_control102
L__EBB_control289:
0x26D4	0x8044D0  	MOV	_ebb_target_pos, W0
0x26D6	0xE10068  	CP	W0, #8
0x26D8	0x32FFCA  	BRA Z	L_EBB_control103
L__EBB_control290:
0x26DA	0x8044D0  	MOV	_ebb_target_pos, W0
0x26DC	0xE10069  	CP	W0, #9
0x26DE	0x32FFCA  	BRA Z	L_EBB_control104
L__EBB_control291:
0x26E0	0x8044D0  	MOV	_ebb_target_pos, W0
0x26E2	0xE1006A  	CP	W0, #10
0x26E4	0x32FFCA  	BRA Z	L_EBB_control105
L__EBB_control292:
0x26E6	0x8044D0  	MOV	_ebb_target_pos, W0
0x26E8	0xE1006B  	CP	W0, #11
0x26EA	0x32FFCA  	BRA Z	L_EBB_control106
L__EBB_control293:
0x26EC	0x8044D0  	MOV	_ebb_target_pos, W0
0x26EE	0xE1006C  	CP	W0, #12
0x26F0	0x32FFCA  	BRA Z	L_EBB_control107
L__EBB_control294:
0x26F2	0x8044D0  	MOV	_ebb_target_pos, W0
0x26F4	0xE1006D  	CP	W0, #13
0x26F6	0x32FFCA  	BRA Z	L_EBB_control108
L__EBB_control295:
0x26F8	0x8044D0  	MOV	_ebb_target_pos, W0
0x26FA	0xE1006E  	CP	W0, #14
0x26FC	0x32FFCA  	BRA Z	L_EBB_control109
L__EBB_control296:
0x26FE	0x8044D0  	MOV	_ebb_target_pos, W0
0x2700	0xE1006F  	CP	W0, #15
0x2702	0x32FFCA  	BRA Z	L_EBB_control110
L__EBB_control297:
0x2704	0x8044D0  	MOV	_ebb_target_pos, W0
0x2706	0xE10070  	CP	W0, #16
0x2708	0x32FFCA  	BRA Z	L_EBB_control111
L__EBB_control298:
L_EBB_control94:
;motor.c,98 :: 		ebb_current_state = EBB_START;          //Set the correct new ebb state (start moving)
0x270A	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x270C	0xB3C010  	MOV.B	#1, W0
0x270E	0x784880  	MOV.B	W0, [W1]
;motor.c,99 :: 		is_requested_movement = OFF;            //Switch off flag
0x2710	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x2712	0xEF2000  	CLR	W0
0x2714	0x784880  	MOV.B	W0, [W1]
;motor.c,100 :: 		}else if(is_requested_calibration)          //Check if ebb is requested to enter calibration mode
0x2716	0x370009  	BRA	L_EBB_control112
L_EBB_control92:
0x2718	0x208100  	MOV	#lo_addr(_is_requested_calibration), W0
0x271A	0xE00410  	CP0.B	[W0]
0x271C	0x320006  	BRA Z	L_EBB_control113
L__EBB_control299:
;motor.c,102 :: 		ebb_current_state = EBB_CENTRAL_CALIBRATION;        //Set the correct new ebb state (calibration)
0x271E	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2720	0xB3C050  	MOV.B	#5, W0
0x2722	0x784880  	MOV.B	W0, [W1]
;motor.c,103 :: 		is_requested_calibration = OFF;                     //Switch off flag
0x2724	0x208101  	MOV	#lo_addr(_is_requested_calibration), W1
0x2726	0xEF2000  	CLR	W0
0x2728	0x784880  	MOV.B	W0, [W1]
;motor.c,104 :: 		}
L_EBB_control113:
L_EBB_control112:
;motor.c,105 :: 		break;
0x272A	0x3700A7  	BRA	L_EBB_control90
;motor.c,106 :: 		case EBB_START:                                             //Start a movement mode
L_EBB_control114:
;motor.c,107 :: 		if(motor_target_position > motor_current_position)      //Check if is necessary to screw or unscrew the balance bar
0x272C	0x8044A1  	MOV	_motor_target_position, W1
0x272E	0x2089C0  	MOV	#lo_addr(_motor_current_position), W0
0x2730	0xE10810  	CP	W1, [W0]
0x2732	0x340003  	BRA LE	L_EBB_control115
L__EBB_control300:
;motor.c,109 :: 		FORWARD = ON;                                         //Unscrew
0x2734	0xA882DC  	BSET	LATE4_bit, BitPos(LATE4_bit+0)
;motor.c,110 :: 		REVERSE = OFF;
0x2736	0xA962DC  	BCLR	LATE3_bit, BitPos(LATE3_bit+0)
;motor.c,111 :: 		}else if (motor_target_position < motor_current_position)
0x2738	0x370009  	BRA	L_EBB_control116
L_EBB_control115:
0x273A	0x8044A1  	MOV	_motor_target_position, W1
0x273C	0x2089C0  	MOV	#lo_addr(_motor_current_position), W0
0x273E	0xE10810  	CP	W1, [W0]
0x2740	0x3D0005  	BRA GE	L_EBB_control117
L__EBB_control301:
;motor.c,113 :: 		motor_target_position--;
0x2742	0x200011  	MOV	#1, W1
0x2744	0x208940  	MOV	#lo_addr(_motor_target_position), W0
0x2746	0x108810  	SUBR	W1, [W0], [W0]
;motor.c,114 :: 		REVERSE = ON;                                       //Screw
0x2748	0xA862DC  	BSET	LATE3_bit, BitPos(LATE3_bit+0)
;motor.c,115 :: 		FORWARD = OFF;
0x274A	0xA982DC  	BCLR	LATE4_bit, BitPos(LATE4_bit+0)
;motor.c,116 :: 		}
L_EBB_control117:
L_EBB_control116:
;motor.c,117 :: 		ENABLE = ON;                                            //Turn on H-bridge
0x274C	0xA842DC  	BSET	LATE2_bit, BitPos(LATE2_bit+0)
;motor.c,118 :: 		PDC1 = PWM_SATURATION;                                  //Put the pwm at maximum (disabled pwm control)
0x274E	0x20FA00  	MOV	#4000, W0
0x2750	0xB7A1D6  	MOV	WREG, PDC1
;motor.c,120 :: 		ebb_current_state = EBB_MOVING;                         //Update State
0x2752	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2754	0xB3C020  	MOV.B	#2, W0
0x2756	0x784880  	MOV.B	W0, [W1]
;motor.c,121 :: 		break;
0x2758	0x370090  	BRA	L_EBB_control90
;motor.c,122 :: 		case EBB_MOVING:                               //EBB is trying to reach the requested position
L_EBB_control118:
;motor.c,123 :: 		blink_counter++;
0x275A	0xB3C011  	MOV.B	#1, W1
0x275C	0x2087F0  	MOV	#lo_addr(_blink_counter), W0
0x275E	0x40C810  	ADD.B	W1, [W0], [W0]
;motor.c,124 :: 		if(blink_counter >= 20)
0x2760	0x2087F0  	MOV	#lo_addr(_blink_counter), W0
0x2762	0x784010  	MOV.B	[W0], W0
0x2764	0xE10474  	CP.B	W0, #20
0x2766	0x390004  	BRA LTU	L_EBB_control119
L__EBB_control302:
;motor.c,126 :: 		LED_G = ~LED_G;                        //Signal that the motor is turning with a blincking green led
0x2768	0xAA62D6  	BTG	LATD3_bit, BitPos(LATD3_bit+0)
;motor.c,127 :: 		blink_counter = 0;
0x276A	0x2087F1  	MOV	#lo_addr(_blink_counter), W1
0x276C	0xEF2000  	CLR	W0
0x276E	0x784880  	MOV.B	W0, [W1]
;motor.c,128 :: 		}
L_EBB_control119:
;motor.c,129 :: 		break;
0x2770	0x370084  	BRA	L_EBB_control90
;motor.c,130 :: 		case EBB_BRAKING:                              //EBB has reached the position and is now bhraking the motor shorting it
L_EBB_control120:
;motor.c,131 :: 		LED_G = OFF;
0x2772	0xA962D6  	BCLR	LATD3_bit, BitPos(LATD3_bit+0)
;motor.c,132 :: 		LED_B = ON;                             //Turn on Blue led to signal motor Braking mode
0x2774	0xA822D6  	BSET	LATD1_bit, BitPos(LATD1_bit+0)
;motor.c,134 :: 		if(brake_counter >= BRAKE_TIME_LENGHT)          //check if the Braking period has passed
0x2776	0x208020  	MOV	#lo_addr(_brake_counter), W0
0x2778	0x784010  	MOV.B	[W0], W0
0x277A	0xE1047E  	CP.B	W0, #30
0x277C	0x390003  	BRA LTU	L_EBB_control121
L__EBB_control303:
;motor.c,136 :: 		ebb_current_state = EBB_POSITION_REACHED;
0x277E	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2780	0xB3C040  	MOV.B	#4, W0
0x2782	0x784880  	MOV.B	W0, [W1]
;motor.c,137 :: 		}
L_EBB_control121:
;motor.c,138 :: 		break;
0x2784	0x37007A  	BRA	L_EBB_control90
;motor.c,139 :: 		case EBB_POSITION_REACHED:                                                  //The ebb has correctly reached th requested position
L_EBB_control122:
;motor.c,140 :: 		LED_B = OFF;
0x2786	0xA922D6  	BCLR	LATD1_bit, BitPos(LATD1_bit+0)
;motor.c,141 :: 		ENABLE = OFF;
0x2788	0xA942DC  	BCLR	LATE2_bit, BitPos(LATE2_bit+0)
;motor.c,142 :: 		REVERSE = OFF;                                                          //Turn off the motor
0x278A	0xA962DC  	BCLR	LATE3_bit, BitPos(LATE3_bit+0)
;motor.c,143 :: 		FORWARD = OFF;
0x278C	0xA982DC  	BCLR	LATE4_bit, BitPos(LATE4_bit+0)
;motor.c,144 :: 		ebb_current_pos = ebb_target_pos;                                       //Update ebb cuurent position with the reached one (for robustness)
0x278E	0x8044D0  	MOV	_ebb_target_pos, W0
0x2790	0x884490  	MOV	W0, _ebb_current_pos
;motor.c,145 :: 		motor_current_position = motor_target_position;                         //Update motor position with the reached one (for robustness)
0x2792	0x8044A0  	MOV	_motor_target_position, W0
0x2794	0x8844E0  	MOV	W0, _motor_current_position
;motor.c,146 :: 		EEPROM_WRITE(ADDR_LAST_POSCNT, POSCNT);
0x2796	0x80093C  	MOV	POSCNT, W12
0x2798	0x2FDA0A  	MOV	#64928, W10
0x279A	0x2007FB  	MOV	#127, W11
0x279C	0x07FD4D  	RCALL	_EEPROM_Write
;motor.c,147 :: 		sprintf(dstr, "EEPROM: %u\r\n", POSCNT);
0x279E	0xF80126  	PUSH	POSCNT
0x27A0	0x2ACA80  	MOV	#lo_addr(?lstr_1_EBB_DPX), W0
0x27A2	0x781F80  	PUSH	W0
0x27A4	0x2081B0  	MOV	#lo_addr(_dstr), W0
0x27A6	0x781F80  	PUSH	W0
0x27A8	0x07FD26  	RCALL	_sprintf
0x27AA	0xB1006F  	SUB	#6, W15
;motor.c,148 :: 		Debug_UART_Write(dstr);
0x27AC	0x2081BA  	MOV	#lo_addr(_dstr), W10
0x27AE	0x07FD8B  	RCALL	_Debug_UART_Write
;motor.c,149 :: 		while(WR_bit);                                                             //Update EEPROM data
L_EBB_control123:
0x27B0	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x27B2	0x370001  	BRA	L_EBB_control124
0x27B4	0x37FFFD  	BRA	L_EBB_control123
L_EBB_control124:
;motor.c,150 :: 		EEPROM_WRITE(ADDR_LAST_NUMBER_QUARTER_TURNS, motor_current_position);
0x27B6	0x8044EC  	MOV	_motor_current_position, W12
0x27B8	0x2FDB0A  	MOV	#64944, W10
0x27BA	0x2007FB  	MOV	#127, W11
0x27BC	0x07FD3D  	RCALL	_EEPROM_Write
;motor.c,151 :: 		while(WR_bit);
L_EBB_control125:
0x27BE	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x27C0	0x370001  	BRA	L_EBB_control126
0x27C2	0x37FFFD  	BRA	L_EBB_control125
L_EBB_control126:
;motor.c,152 :: 		EEPROM_WRITE(ADDR_LAST_MAPPED_POSITION, ebb_current_pos);
0x27C4	0x80449C  	MOV	_ebb_current_pos, W12
0x27C6	0x2FDC0A  	MOV	#64960, W10
0x27C8	0x2007FB  	MOV	#127, W11
0x27CA	0x07FD36  	RCALL	_EEPROM_Write
;motor.c,153 :: 		while(WR_bit);
L_EBB_control127:
0x27CC	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x27CE	0x370001  	BRA	L_EBB_control128
0x27D0	0x37FFFD  	BRA	L_EBB_control127
L_EBB_control128:
;motor.c,154 :: 		ebb_current_state = OFF;                                               //Going back to OFF state
0x27D2	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x27D4	0xEF2000  	CLR	W0
0x27D6	0x784880  	MOV.B	W0, [W1]
;motor.c,155 :: 		break;
0x27D8	0x370050  	BRA	L_EBB_control90
;motor.c,156 :: 		case EBB_CENTRAL_CALIBRATION:
L_EBB_control129:
;motor.c,157 :: 		ebb_current_pos = 8;
0x27DA	0x200080  	MOV	#8, W0
0x27DC	0x884490  	MOV	W0, _ebb_current_pos
;motor.c,158 :: 		ebb_target_pos = ebb_current_pos;
0x27DE	0x200080  	MOV	#8, W0
0x27E0	0x8844D0  	MOV	W0, _ebb_target_pos
;motor.c,159 :: 		motor_current_position = POSITION_8;
0x27E2	0x200100  	MOV	#16, W0
0x27E4	0x8844E0  	MOV	W0, _motor_current_position
;motor.c,160 :: 		motor_target_position = motor_current_position;
0x27E6	0x200100  	MOV	#16, W0
0x27E8	0x8844A0  	MOV	W0, _motor_target_position
;motor.c,161 :: 		EEPROM_WRITE(ADDR_LAST_POSCNT, POSCNT);
0x27EA	0x80093C  	MOV	POSCNT, W12
0x27EC	0x2FDA0A  	MOV	#64928, W10
0x27EE	0x2007FB  	MOV	#127, W11
0x27F0	0x07FD23  	RCALL	_EEPROM_Write
;motor.c,162 :: 		while(WR_bit);                                                           //Update EEPROM data
L_EBB_control130:
0x27F2	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x27F4	0x370001  	BRA	L_EBB_control131
0x27F6	0x37FFFD  	BRA	L_EBB_control130
L_EBB_control131:
;motor.c,163 :: 		EEPROM_WRITE(ADDR_LAST_NUMBER_QUARTER_TURNS, motor_current_position);
0x27F8	0x8044EC  	MOV	_motor_current_position, W12
0x27FA	0x2FDB0A  	MOV	#64944, W10
0x27FC	0x2007FB  	MOV	#127, W11
0x27FE	0x07FD1C  	RCALL	_EEPROM_Write
;motor.c,164 :: 		while(WR_bit);
L_EBB_control132:
0x2800	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x2802	0x370001  	BRA	L_EBB_control133
0x2804	0x37FFFD  	BRA	L_EBB_control132
L_EBB_control133:
;motor.c,165 :: 		EEPROM_WRITE(ADDR_LAST_MAPPED_POSITION, ebb_current_pos);
0x2806	0x80449C  	MOV	_ebb_current_pos, W12
0x2808	0x2FDC0A  	MOV	#64960, W10
0x280A	0x2007FB  	MOV	#127, W11
0x280C	0x07FD15  	RCALL	_EEPROM_Write
;motor.c,166 :: 		while(WR_bit);
L_EBB_control134:
0x280E	0xAEE761  	BTSS	WR_bit, BitPos(WR_bit+0)
0x2810	0x370001  	BRA	L_EBB_control135
0x2812	0x37FFFD  	BRA	L_EBB_control134
L_EBB_control135:
;motor.c,167 :: 		CAN_routine();
0x2814	0x07FE68  	RCALL	_CAN_routine
;motor.c,168 :: 		calibration_on_off = OFF;
0x2816	0xEF2000  	CLR	W0
0x2818	0x884050  	MOV	W0, _calibration_on_off
;motor.c,169 :: 		ebb_current_state = OFF;                                               //Going back to OFF state
0x281A	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x281C	0xEF2000  	CLR	W0
0x281E	0x784880  	MOV.B	W0, [W1]
;motor.c,170 :: 		break;
0x2820	0x37002C  	BRA	L_EBB_control90
;motor.c,171 :: 		case EBB_DRIVER_BRAKING:                            //Driver is braking during a requested movement
L_EBB_control136:
;motor.c,172 :: 		buzzer_state = ON;                                     //Turn on buzzer for debugging
0x2822	0x200010  	MOV	#1, W0
0x2824	0x884090  	MOV	W0, _buzzer_state
;motor.c,173 :: 		if(brake_pressure_front < BRAKE_PRESSURE_TRIGGER && current_reading_motor < LSB_CURRENT_READING * MOTOR_CURRENT_TRIGGER)           //Checking brake pressures for the end of the braking action
0x2826	0x8044C1  	MOV	_brake_pressure_front, W1
0x2828	0x20DAC0  	MOV	#3500, W0
0x282A	0xE10800  	CP	W1, W0
0x282C	0x310004  	BRA GEU	L_EBB_control138
L__EBB_control304:
0x282E	0x804400  	MOV	_current_reading_motor, W0
0x2830	0xE10061  	CP	W0, #1
0x2832	0x310001  	BRA GEU	L_EBB_control138
L__EBB_control305:
0x2834	0x370000  	BRA	L_EBB_control137
L_EBB_control138:
L_EBB_control137:
;motor.c,175 :: 		buzzer_state = OFF;
0x2836	0xEF2000  	CLR	W0
0x2838	0x884090  	MOV	W0, _buzzer_state
;motor.c,176 :: 		ebb_current_state = EBB_START;              //Return to start mode to complete the movement
0x283A	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x283C	0xB3C010  	MOV.B	#1, W0
0x283E	0x784880  	MOV.B	W0, [W1]
;motor.c,178 :: 		break;
0x2840	0x37001C  	BRA	L_EBB_control90
;motor.c,179 :: 		}
L_EBB_control89:
0x2842	0x208110  	MOV	#lo_addr(_ebb_current_state), W0
0x2844	0x784010  	MOV.B	[W0], W0
0x2846	0xE10460  	CP.B	W0, #0
0x2848	0x32FEF6  	BRA Z	L_EBB_control91
L__EBB_control306:
0x284A	0x208110  	MOV	#lo_addr(_ebb_current_state), W0
0x284C	0x784010  	MOV.B	[W0], W0
0x284E	0xE10461  	CP.B	W0, #1
0x2850	0x32FF6D  	BRA Z	L_EBB_control114
L__EBB_control307:
0x2852	0x208110  	MOV	#lo_addr(_ebb_current_state), W0
0x2854	0x784010  	MOV.B	[W0], W0
0x2856	0xE10462  	CP.B	W0, #2
0x2858	0x32FF80  	BRA Z	L_EBB_control118
L__EBB_control308:
0x285A	0x208110  	MOV	#lo_addr(_ebb_current_state), W0
0x285C	0x784010  	MOV.B	[W0], W0
0x285E	0xE10463  	CP.B	W0, #3
0x2860	0x32FF88  	BRA Z	L_EBB_control120
L__EBB_control309:
0x2862	0x208110  	MOV	#lo_addr(_ebb_current_state), W0
0x2864	0x784010  	MOV.B	[W0], W0
0x2866	0xE10464  	CP.B	W0, #4
0x2868	0x32FF8E  	BRA Z	L_EBB_control122
L__EBB_control310:
0x286A	0x208110  	MOV	#lo_addr(_ebb_current_state), W0
0x286C	0x784010  	MOV.B	[W0], W0
0x286E	0xE10465  	CP.B	W0, #5
0x2870	0x32FFB4  	BRA Z	L_EBB_control129
L__EBB_control311:
0x2872	0x208110  	MOV	#lo_addr(_ebb_current_state), W0
0x2874	0x784010  	MOV.B	[W0], W0
0x2876	0xE10467  	CP.B	W0, #7
0x2878	0x32FFD4  	BRA Z	L_EBB_control136
L__EBB_control312:
L_EBB_control90:
;motor.c,180 :: 		}
L_end_EBB_control:
0x287A	0x78064F  	POP	W12
0x287C	0x7805CF  	POP	W11
0x287E	0x78054F  	POP	W10
0x2880	0x060000  	RETURN
; end of _EBB_control
_sprintf:
0x21F6	0xFA0002  	LNK	#2
;__Lib_Sprintf.c,727 :: 		
0x21F8	0x781F8A  	PUSH	W10
0x21FA	0x781F8B  	PUSH	W11
0x21FC	0x781F8C  	PUSH	W12
; wh start address is: 4 (W2)
0x21FE	0x97B94E  	MOV	[W14-8], W2
;__Lib_Sprintf.c,732 :: 		
0x2200	0x4700E0  	ADD	W14, #0, W1
0x2202	0x57006A  	SUB	W14, #10, W0
0x2204	0x780880  	MOV	W0, [W1]
;__Lib_Sprintf.c,733 :: 		
0x2206	0x781F82  	PUSH	W2
0x2208	0x780601  	MOV	W1, W12
0x220A	0x97BDBE  	MOV	[W14-10], W11
0x220C	0x780502  	MOV	W2, W10
0x220E	0x07F5A4  	RCALL	__Lib_Sprintf__doprntf
0x2210	0x78014F  	POP	W2
; cnt start address is: 6 (W3)
0x2212	0x780180  	MOV	W0, W3
;__Lib_Sprintf.c,734 :: 		
0x2214	0x410080  	ADD	W2, W0, W1
; wh end address is: 4 (W2)
0x2216	0xEF2000  	CLR	W0
0x2218	0x784880  	MOV.B	W0, [W1]
;__Lib_Sprintf.c,735 :: 		
0x221A	0x780003  	MOV	W3, W0
; cnt end address is: 6 (W3)
;__Lib_Sprintf.c,736 :: 		
;__Lib_Sprintf.c,735 :: 		
;__Lib_Sprintf.c,736 :: 		
L_end_sprintf:
0x221C	0x78064F  	POP	W12
0x221E	0x7805CF  	POP	W11
0x2220	0x78054F  	POP	W10
0x2222	0xFA8000  	ULNK
0x2224	0x060000  	RETURN
; end of _sprintf
__Lib_Sprintf__doprntf:
0x0D58	0xFA0028  	LNK	#40
;__Lib_Sprintf.c,187 :: 		
;__Lib_Sprintf.c,193 :: 		
0x0D5A	0x200000  	MOV	#0, W0
0x0D5C	0x980F50  	MOV	W0, [W14+26]
;__Lib_Sprintf.c,223 :: 		
L___Lib_Sprintf__doprntf10:
0x0D5E	0x78008B  	MOV	W11, W1
0x0D60	0x458061  	ADD	W11, #1, W0
0x0D62	0x780580  	MOV	W0, W11
0x0D64	0x784011  	MOV.B	[W1], W0
0x0D66	0x984F20  	MOV.B	W0, [W14+10]
0x0D68	0xE24000  	CP0.B	W0
0x0D6A	0x320839  	BRA Z	L___Lib_Sprintf__doprntf11
L___Lib_Sprintf__doprntf364:
;__Lib_Sprintf.c,224 :: 		
0x0D6C	0x9048AE  	MOV.B	[W14+10], W1
0x0D6E	0xB3C250  	MOV.B	#37, W0
0x0D70	0xE10C00  	CP.B	W1, W0
0x0D72	0x320008  	BRA Z	L___Lib_Sprintf__doprntf12
L___Lib_Sprintf__doprntf365:
;__Lib_Sprintf.c,225 :: 		
0x0D74	0x90482E  	MOV.B	[W14+10], W0
0x0D76	0x784D00  	MOV.B	W0, [W10]
0x0D78	0x450061  	ADD	W10, #1, W0
0x0D7A	0x780500  	MOV	W0, W10
0x0D7C	0x9008DE  	MOV	[W14+26], W1
0x0D7E	0x47007A  	ADD	W14, #26, W0
0x0D80	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,226 :: 		
0x0D82	0x37FFED  	BRA	L___Lib_Sprintf__doprntf10
;__Lib_Sprintf.c,227 :: 		
L___Lib_Sprintf__doprntf12:
;__Lib_Sprintf.c,228 :: 		
0x0D84	0xEF2000  	CLR	W0
0x0D86	0x980760  	MOV	W0, [W14+12]
;__Lib_Sprintf.c,229 :: 		
0x0D88	0xEF2000  	CLR	W0
0x0D8A	0x980770  	MOV	W0, [W14+14]
;__Lib_Sprintf.c,230 :: 		
L___Lib_Sprintf__doprntf13:
;__Lib_Sprintf.c,231 :: 		
0x0D8C	0x37001F  	BRA	L___Lib_Sprintf__doprntf16
;__Lib_Sprintf.c,232 :: 		
L___Lib_Sprintf__doprntf18:
;__Lib_Sprintf.c,233 :: 		
0x0D8E	0x9000FE  	MOV	[W14+14], W1
0x0D90	0x47006E  	ADD	W14, #14, W0
0x0D92	0x708868  	IOR	W1, #8, [W0]
;__Lib_Sprintf.c,234 :: 		
0x0D94	0x458061  	ADD	W11, #1, W0
0x0D96	0x780580  	MOV	W0, W11
;__Lib_Sprintf.c,235 :: 		
0x0D98	0x37002E  	BRA	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c,237 :: 		
L___Lib_Sprintf__doprntf19:
;__Lib_Sprintf.c,238 :: 		
0x0D9A	0x9000FE  	MOV	[W14+14], W1
0x0D9C	0x47006E  	ADD	W14, #14, W0
0x0D9E	0x708861  	IOR	W1, #1, [W0]
;__Lib_Sprintf.c,239 :: 		
0x0DA0	0x458061  	ADD	W11, #1, W0
0x0DA2	0x780580  	MOV	W0, W11
;__Lib_Sprintf.c,240 :: 		
0x0DA4	0x370028  	BRA	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c,242 :: 		
L___Lib_Sprintf__doprntf20:
;__Lib_Sprintf.c,243 :: 		
0x0DA6	0x9000FE  	MOV	[W14+14], W1
0x0DA8	0x47006E  	ADD	W14, #14, W0
0x0DAA	0x708862  	IOR	W1, #2, [W0]
;__Lib_Sprintf.c,244 :: 		
0x0DAC	0x458061  	ADD	W11, #1, W0
0x0DAE	0x780580  	MOV	W0, W11
;__Lib_Sprintf.c,245 :: 		
0x0DB0	0x370022  	BRA	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c,247 :: 		
L___Lib_Sprintf__doprntf21:
;__Lib_Sprintf.c,248 :: 		
0x0DB2	0x90017E  	MOV	[W14+14], W2
0x0DB4	0x208001  	MOV	#2048, W1
0x0DB6	0x47006E  	ADD	W14, #14, W0
0x0DB8	0x710801  	IOR	W2, W1, [W0]
;__Lib_Sprintf.c,249 :: 		
0x0DBA	0x458061  	ADD	W11, #1, W0
0x0DBC	0x780580  	MOV	W0, W11
;__Lib_Sprintf.c,250 :: 		
0x0DBE	0x37001B  	BRA	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c,252 :: 		
L___Lib_Sprintf__doprntf22:
;__Lib_Sprintf.c,253 :: 		
0x0DC0	0x9000FE  	MOV	[W14+14], W1
0x0DC2	0x47006E  	ADD	W14, #14, W0
0x0DC4	0x708864  	IOR	W1, #4, [W0]
;__Lib_Sprintf.c,254 :: 		
0x0DC6	0x458061  	ADD	W11, #1, W0
0x0DC8	0x780580  	MOV	W0, W11
;__Lib_Sprintf.c,255 :: 		
0x0DCA	0x370015  	BRA	L___Lib_Sprintf__doprntf15
;__Lib_Sprintf.c,256 :: 		
L___Lib_Sprintf__doprntf16:
0x0DCC	0x78409B  	MOV.B	[W11], W1
0x0DCE	0xB3C2D0  	MOV.B	#45, W0
0x0DD0	0xE10C00  	CP.B	W1, W0
0x0DD2	0x32FFDD  	BRA Z	L___Lib_Sprintf__doprntf18
L___Lib_Sprintf__doprntf366:
0x0DD4	0x78409B  	MOV.B	[W11], W1
0x0DD6	0xB3C200  	MOV.B	#32, W0
0x0DD8	0xE10C00  	CP.B	W1, W0
0x0DDA	0x32FFDF  	BRA Z	L___Lib_Sprintf__doprntf19
L___Lib_Sprintf__doprntf367:
0x0DDC	0x78409B  	MOV.B	[W11], W1
0x0DDE	0xB3C2B0  	MOV.B	#43, W0
0x0DE0	0xE10C00  	CP.B	W1, W0
0x0DE2	0x32FFE1  	BRA Z	L___Lib_Sprintf__doprntf20
L___Lib_Sprintf__doprntf368:
0x0DE4	0x78409B  	MOV.B	[W11], W1
0x0DE6	0xB3C230  	MOV.B	#35, W0
0x0DE8	0xE10C00  	CP.B	W1, W0
0x0DEA	0x32FFE3  	BRA Z	L___Lib_Sprintf__doprntf21
L___Lib_Sprintf__doprntf369:
0x0DEC	0x78409B  	MOV.B	[W11], W1
0x0DEE	0xB3C300  	MOV.B	#48, W0
0x0DF0	0xE10C00  	CP.B	W1, W0
0x0DF2	0x32FFE6  	BRA Z	L___Lib_Sprintf__doprntf22
L___Lib_Sprintf__doprntf370:
;__Lib_Sprintf.c,257 :: 		
0x0DF4	0x370001  	BRA	L___Lib_Sprintf__doprntf14
;__Lib_Sprintf.c,258 :: 		
L___Lib_Sprintf__doprntf15:
0x0DF6	0x37FFCA  	BRA	L___Lib_Sprintf__doprntf13
L___Lib_Sprintf__doprntf14:
;__Lib_Sprintf.c,259 :: 		
0x0DF8	0x47006E  	ADD	W14, #14, W0
0x0DFA	0xA61010  	BTSS	[W0], #1
0x0DFC	0x370004  	BRA	L___Lib_Sprintf__doprntf23
;__Lib_Sprintf.c,260 :: 		
0x0DFE	0x2FFFE2  	MOV	#65534, W2
0x0E00	0x4700EE  	ADD	W14, #14, W1
0x0E02	0x47006E  	ADD	W14, #14, W0
0x0E04	0x610811  	AND	W2, [W1], [W0]
L___Lib_Sprintf__doprntf23:
;__Lib_Sprintf.c,261 :: 		
0x0E06	0x47006E  	ADD	W14, #14, W0
0x0E08	0xA63010  	BTSS	[W0], #3
0x0E0A	0x370004  	BRA	L___Lib_Sprintf__doprntf24
;__Lib_Sprintf.c,262 :: 		
0x0E0C	0x2FFFB2  	MOV	#65531, W2
0x0E0E	0x4700EE  	ADD	W14, #14, W1
0x0E10	0x47006E  	ADD	W14, #14, W0
0x0E12	0x610811  	AND	W2, [W1], [W0]
L___Lib_Sprintf__doprntf24:
;__Lib_Sprintf.c,263 :: 		
0x0E14	0x78401B  	MOV.B	[W11], W0
0x0E16	0xFB8000  	ZE	W0, W0
0x0E18	0x781F8A  	PUSH	W10
0x0E1A	0x784500  	MOV.B	W0, W10
0x0E1C	0x07FD61  	RCALL	_isdigit
0x0E1E	0x78054F  	POP	W10
0x0E20	0xE20000  	CP0	W0
0x0E22	0x320016  	BRA Z	L___Lib_Sprintf__doprntf25
L___Lib_Sprintf__doprntf371:
;__Lib_Sprintf.c,264 :: 		
0x0E24	0xEF2000  	CLR	W0
0x0E26	0x980760  	MOV	W0, [W14+12]
;__Lib_Sprintf.c,265 :: 		
L___Lib_Sprintf__doprntf26:
;__Lib_Sprintf.c,266 :: 		
0x0E28	0x9000EE  	MOV	[W14+12], W1
0x0E2A	0x2000A0  	MOV	#10, W0
0x0E2C	0xB98900  	MUL.SS	W1, W0, W2
0x0E2E	0x78401B  	MOV.B	[W11], W0
0x0E30	0xFB8000  	ZE	W0, W0
0x0E32	0x410200  	ADD	W2, W0, W4
0x0E34	0x200301  	MOV	#48, W1
0x0E36	0x47006C  	ADD	W14, #12, W0
0x0E38	0x520801  	SUB	W4, W1, [W0]
0x0E3A	0x458061  	ADD	W11, #1, W0
0x0E3C	0x780580  	MOV	W0, W11
;__Lib_Sprintf.c,267 :: 		
0x0E3E	0x78401B  	MOV.B	[W11], W0
0x0E40	0xFB8000  	ZE	W0, W0
0x0E42	0x781F8A  	PUSH	W10
0x0E44	0x784500  	MOV.B	W0, W10
0x0E46	0x07FD4C  	RCALL	_isdigit
0x0E48	0x78054F  	POP	W10
0x0E4A	0xE20000  	CP0	W0
0x0E4C	0x3AFFED  	BRA NZ	L___Lib_Sprintf__doprntf26
L___Lib_Sprintf__doprntf372:
;__Lib_Sprintf.c,268 :: 		
0x0E4E	0x37000D  	BRA	L___Lib_Sprintf__doprntf29
L___Lib_Sprintf__doprntf25:
;__Lib_Sprintf.c,270 :: 		
0x0E50	0x78409B  	MOV.B	[W11], W1
0x0E52	0xB3C2A0  	MOV.B	#42, W0
0x0E54	0xE10C00  	CP.B	W1, W0
0x0E56	0x3A0009  	BRA NZ	L___Lib_Sprintf__doprntf30
L___Lib_Sprintf__doprntf373:
;__Lib_Sprintf.c,271 :: 		
0x0E58	0x78008C  	MOV	W12, W1
0x0E5A	0x78001C  	MOV	[W12], W0
0x0E5C	0xEDA000  	DEC2	W0
0x0E5E	0x780E00  	MOV	W0, [W12]
0x0E60	0x780011  	MOV	[W1], W0
0x0E62	0x780010  	MOV	[W0], W0
0x0E64	0x980760  	MOV	W0, [W14+12]
;__Lib_Sprintf.c,272 :: 		
0x0E66	0x458061  	ADD	W11, #1, W0
0x0E68	0x780580  	MOV	W0, W11
;__Lib_Sprintf.c,273 :: 		
L___Lib_Sprintf__doprntf30:
L___Lib_Sprintf__doprntf29:
;__Lib_Sprintf.c,274 :: 		
0x0E6A	0x78409B  	MOV.B	[W11], W1
0x0E6C	0xB3C2E0  	MOV.B	#46, W0
0x0E6E	0xE10C00  	CP.B	W1, W0
0x0E70	0x3A0027  	BRA NZ	L___Lib_Sprintf__doprntf31
L___Lib_Sprintf__doprntf374:
;__Lib_Sprintf.c,275 :: 		
0x0E72	0x458061  	ADD	W11, #1, W0
0x0E74	0x780580  	MOV	W0, W11
0x0E76	0x78409B  	MOV.B	[W11], W1
0x0E78	0xB3C2A0  	MOV.B	#42, W0
0x0E7A	0xE10C00  	CP.B	W1, W0
0x0E7C	0x3A000A  	BRA NZ	L___Lib_Sprintf__doprntf32
L___Lib_Sprintf__doprntf375:
;__Lib_Sprintf.c,276 :: 		
0x0E7E	0x78008C  	MOV	W12, W1
0x0E80	0x78001C  	MOV	[W12], W0
0x0E82	0xEDA000  	DEC2	W0
0x0E84	0x780E00  	MOV	W0, [W12]
0x0E86	0x780011  	MOV	[W1], W0
0x0E88	0x780010  	MOV	[W0], W0
0x0E8A	0x980740  	MOV	W0, [W14+8]
;__Lib_Sprintf.c,277 :: 		
0x0E8C	0x458061  	ADD	W11, #1, W0
0x0E8E	0x780580  	MOV	W0, W11
;__Lib_Sprintf.c,278 :: 		
0x0E90	0x370016  	BRA	L___Lib_Sprintf__doprntf33
L___Lib_Sprintf__doprntf32:
;__Lib_Sprintf.c,279 :: 		
0x0E92	0xEF2000  	CLR	W0
0x0E94	0x980740  	MOV	W0, [W14+8]
;__Lib_Sprintf.c,280 :: 		
L___Lib_Sprintf__doprntf34:
0x0E96	0x78401B  	MOV.B	[W11], W0
0x0E98	0xFB8000  	ZE	W0, W0
0x0E9A	0x781F8A  	PUSH	W10
0x0E9C	0x784500  	MOV.B	W0, W10
0x0E9E	0x07FD20  	RCALL	_isdigit
0x0EA0	0x78054F  	POP	W10
0x0EA2	0xE20000  	CP0	W0
0x0EA4	0x32000C  	BRA Z	L___Lib_Sprintf__doprntf35
L___Lib_Sprintf__doprntf376:
;__Lib_Sprintf.c,281 :: 		
0x0EA6	0x9000CE  	MOV	[W14+8], W1
0x0EA8	0x2000A0  	MOV	#10, W0
0x0EAA	0xB98900  	MUL.SS	W1, W0, W2
0x0EAC	0x78401B  	MOV.B	[W11], W0
0x0EAE	0xFB8000  	ZE	W0, W0
0x0EB0	0x410200  	ADD	W2, W0, W4
0x0EB2	0x200301  	MOV	#48, W1
0x0EB4	0x470068  	ADD	W14, #8, W0
0x0EB6	0x520801  	SUB	W4, W1, [W0]
0x0EB8	0x458061  	ADD	W11, #1, W0
0x0EBA	0x780580  	MOV	W0, W11
0x0EBC	0x37FFEC  	BRA	L___Lib_Sprintf__doprntf34
L___Lib_Sprintf__doprntf35:
;__Lib_Sprintf.c,282 :: 		
L___Lib_Sprintf__doprntf33:
0x0EBE	0x370006  	BRA	L___Lib_Sprintf__doprntf36
L___Lib_Sprintf__doprntf31:
;__Lib_Sprintf.c,284 :: 		
0x0EC0	0xEF2000  	CLR	W0
0x0EC2	0x980740  	MOV	W0, [W14+8]
;__Lib_Sprintf.c,286 :: 		
0x0EC4	0x90017E  	MOV	[W14+14], W2
0x0EC6	0x210001  	MOV	#4096, W1
0x0EC8	0x47006E  	ADD	W14, #14, W0
0x0ECA	0x710801  	IOR	W2, W1, [W0]
;__Lib_Sprintf.c,288 :: 		
L___Lib_Sprintf__doprntf36:
;__Lib_Sprintf.c,290 :: 		
____doprntf_loop:
;__Lib_Sprintf.c,292 :: 		
0x0ECC	0x78008B  	MOV	W11, W1
0x0ECE	0x458061  	ADD	W11, #1, W0
0x0ED0	0x780580  	MOV	W0, W11
0x0ED2	0x784011  	MOV.B	[W1], W0
0x0ED4	0x984F20  	MOV.B	W0, [W14+10]
0x0ED6	0x370097  	BRA	L___Lib_Sprintf__doprntf37
;__Lib_Sprintf.c,293 :: 		
L___Lib_Sprintf__doprntf39:
;__Lib_Sprintf.c,294 :: 		
0x0ED8	0x90085E  	MOV	[W14+26], W0
0x0EDA	0x370782  	BRA	L_end__doprntf
;__Lib_Sprintf.c,295 :: 		
L___Lib_Sprintf__doprntf40:
;__Lib_Sprintf.c,296 :: 		
L___Lib_Sprintf__doprntf41:
;__Lib_Sprintf.c,298 :: 		
0x0EDC	0x9000FE  	MOV	[W14+14], W1
0x0EDE	0x47006E  	ADD	W14, #14, W0
0x0EE0	0x708870  	IOR	W1, #16, [W0]
;__Lib_Sprintf.c,299 :: 		
0x0EE2	0x37FFF4  	BRA	____doprntf_loop
;__Lib_Sprintf.c,313 :: 		
L___Lib_Sprintf__doprntf42:
;__Lib_Sprintf.c,314 :: 		
0x0EE4	0x90017E  	MOV	[W14+14], W2
0x0EE6	0x204001  	MOV	#1024, W1
0x0EE8	0x47006E  	ADD	W14, #14, W0
0x0EEA	0x710801  	IOR	W2, W1, [W0]
;__Lib_Sprintf.c,315 :: 		
0x0EEC	0x3700CC  	BRA	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c,317 :: 		
L___Lib_Sprintf__doprntf43:
;__Lib_Sprintf.c,318 :: 		
0x0EEE	0x200202  	MOV	#32, W2
0x0EF0	0x4700EE  	ADD	W14, #14, W1
0x0EF2	0x47006E  	ADD	W14, #14, W0
0x0EF4	0x710811  	IOR	W2, [W1], [W0]
;__Lib_Sprintf.c,319 :: 		
L___Lib_Sprintf__doprntf44:
;__Lib_Sprintf.c,320 :: 		
0x0EF6	0x90017E  	MOV	[W14+14], W2
0x0EF8	0x201001  	MOV	#256, W1
0x0EFA	0x47006E  	ADD	W14, #14, W0
0x0EFC	0x710801  	IOR	W2, W1, [W0]
;__Lib_Sprintf.c,321 :: 		
0x0EFE	0x3700C3  	BRA	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c,322 :: 		
L___Lib_Sprintf__doprntf45:
;__Lib_Sprintf.c,323 :: 		
0x0F00	0x90017E  	MOV	[W14+14], W2
0x0F02	0x202001  	MOV	#512, W1
0x0F04	0x47006E  	ADD	W14, #14, W0
0x0F06	0x710801  	IOR	W2, W1, [W0]
;__Lib_Sprintf.c,324 :: 		
0x0F08	0x3700BE  	BRA	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c,326 :: 		
L___Lib_Sprintf__doprntf46:
;__Lib_Sprintf.c,327 :: 		
0x0F0A	0x200402  	MOV	#64, W2
0x0F0C	0x4700EE  	ADD	W14, #14, W1
0x0F0E	0x47006E  	ADD	W14, #14, W0
0x0F10	0x710811  	IOR	W2, [W1], [W0]
;__Lib_Sprintf.c,328 :: 		
0x0F12	0x3700B9  	BRA	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c,330 :: 		
L___Lib_Sprintf__doprntf47:
;__Lib_Sprintf.c,331 :: 		
L___Lib_Sprintf__doprntf48:
;__Lib_Sprintf.c,332 :: 		
0x0F14	0x3700B8  	BRA	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c,334 :: 		
L___Lib_Sprintf__doprntf49:
;__Lib_Sprintf.c,336 :: 		
L___Lib_Sprintf__doprntf50:
;__Lib_Sprintf.c,337 :: 		
0x0F16	0x200202  	MOV	#32, W2
0x0F18	0x4700EE  	ADD	W14, #14, W1
0x0F1A	0x47006E  	ADD	W14, #14, W0
0x0F1C	0x710811  	IOR	W2, [W1], [W0]
;__Lib_Sprintf.c,338 :: 		
L___Lib_Sprintf__doprntf51:
;__Lib_Sprintf.c,339 :: 		
0x0F1E	0x200802  	MOV	#128, W2
0x0F20	0x4700EE  	ADD	W14, #14, W1
0x0F22	0x47006E  	ADD	W14, #14, W0
0x0F24	0x710811  	IOR	W2, [W1], [W0]
;__Lib_Sprintf.c,340 :: 		
0x0F26	0x3700AF  	BRA	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c,342 :: 		
L___Lib_Sprintf__doprntf52:
;__Lib_Sprintf.c,343 :: 		
0x0F28	0x78008C  	MOV	W12, W1
0x0F2A	0x78001C  	MOV	[W12], W0
0x0F2C	0xEDA000  	DEC2	W0
0x0F2E	0x780E00  	MOV	W0, [W12]
0x0F30	0x780011  	MOV	[W1], W0
0x0F32	0x780010  	MOV	[W0], W0
0x0F34	0x980F30  	MOV	W0, [W14+22]
;__Lib_Sprintf.c,347 :: 		
0x0F36	0xE10060  	CP	W0, #0
0x0F38	0x3A0002  	BRA NZ	L___Lib_Sprintf__doprntf53
L___Lib_Sprintf__doprntf377:
;__Lib_Sprintf.c,348 :: 		
0x0F3A	0x208140  	MOV	#lo_addr(?lstr1___Lib_Sprintf), W0
0x0F3C	0x980F30  	MOV	W0, [W14+22]
L___Lib_Sprintf__doprntf53:
;__Lib_Sprintf.c,349 :: 		
0x0F3E	0xEF2000  	CLR	W0
0x0F40	0x980F40  	MOV	W0, [W14+24]
;__Lib_Sprintf.c,350 :: 		
L___Lib_Sprintf__doprntf54:
0x0F42	0x9008BE  	MOV	[W14+22], W1
0x0F44	0x470078  	ADD	W14, #24, W0
0x0F46	0x408010  	ADD	W1, [W0], W0
0x0F48	0xE00410  	CP0.B	[W0]
0x0F4A	0x320004  	BRA Z	L___Lib_Sprintf__doprntf55
L___Lib_Sprintf__doprntf378:
;__Lib_Sprintf.c,351 :: 		
0x0F4C	0x90084E  	MOV	[W14+24], W0
0x0F4E	0xEC2000  	INC	W0
0x0F50	0x980F40  	MOV	W0, [W14+24]
0x0F52	0x37FFF7  	BRA	L___Lib_Sprintf__doprntf54
L___Lib_Sprintf__doprntf55:
;__Lib_Sprintf.c,352 :: 		
____doprntf_dostring:
;__Lib_Sprintf.c,353 :: 		
0x0F54	0x470068  	ADD	W14, #8, W0
0x0F56	0xE00010  	CP0	[W0]
0x0F58	0x320006  	BRA Z	L___Lib_Sprintf__doprntf318
L___Lib_Sprintf__doprntf379:
0x0F5A	0x9000CE  	MOV	[W14+8], W1
0x0F5C	0x470078  	ADD	W14, #24, W0
0x0F5E	0xE10810  	CP	W1, [W0]
0x0F60	0x310002  	BRA GEU	L___Lib_Sprintf__doprntf317
L___Lib_Sprintf__doprntf380:
L___Lib_Sprintf__doprntf316:
;__Lib_Sprintf.c,354 :: 		
0x0F62	0x90004E  	MOV	[W14+8], W0
0x0F64	0x980F40  	MOV	W0, [W14+24]
;__Lib_Sprintf.c,353 :: 		
L___Lib_Sprintf__doprntf318:
L___Lib_Sprintf__doprntf317:
;__Lib_Sprintf.c,355 :: 		
0x0F66	0x9000EE  	MOV	[W14+12], W1
0x0F68	0x470078  	ADD	W14, #24, W0
0x0F6A	0xE10810  	CP	W1, [W0]
0x0F6C	0x360005  	BRA LEU	L___Lib_Sprintf__doprntf59
L___Lib_Sprintf__doprntf381:
;__Lib_Sprintf.c,356 :: 		
0x0F6E	0x90016E  	MOV	[W14+12], W2
0x0F70	0x4700F8  	ADD	W14, #24, W1
0x0F72	0x47006C  	ADD	W14, #12, W0
0x0F74	0x510811  	SUB	W2, [W1], [W0]
0x0F76	0x370002  	BRA	L___Lib_Sprintf__doprntf60
L___Lib_Sprintf__doprntf59:
;__Lib_Sprintf.c,358 :: 		
0x0F78	0xEF2000  	CLR	W0
0x0F7A	0x980760  	MOV	W0, [W14+12]
L___Lib_Sprintf__doprntf60:
;__Lib_Sprintf.c,359 :: 		
0x0F7C	0x47006E  	ADD	W14, #14, W0
0x0F7E	0xA73010  	BTSC	[W0], #3
0x0F80	0x37000E  	BRA	L___Lib_Sprintf__doprntf61
;__Lib_Sprintf.c,360 :: 		
L___Lib_Sprintf__doprntf62:
0x0F82	0x90016E  	MOV	[W14+12], W2
0x0F84	0x9000EE  	MOV	[W14+12], W1
0x0F86	0x47006C  	ADD	W14, #12, W0
0x0F88	0x508861  	SUB	W1, #1, [W0]
0x0F8A	0xE20004  	CP0	W2
0x0F8C	0x320008  	BRA Z	L___Lib_Sprintf__doprntf63
L___Lib_Sprintf__doprntf382:
;__Lib_Sprintf.c,361 :: 		
0x0F8E	0xB3C200  	MOV.B	#32, W0
0x0F90	0x784D00  	MOV.B	W0, [W10]
0x0F92	0x450061  	ADD	W10, #1, W0
0x0F94	0x780500  	MOV	W0, W10
0x0F96	0x9008DE  	MOV	[W14+26], W1
0x0F98	0x47007A  	ADD	W14, #26, W0
0x0F9A	0x408861  	ADD	W1, #1, [W0]
0x0F9C	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf62
L___Lib_Sprintf__doprntf63:
L___Lib_Sprintf__doprntf61:
;__Lib_Sprintf.c,362 :: 		
L___Lib_Sprintf__doprntf64:
0x0F9E	0x9008CE  	MOV	[W14+24], W1
0x0FA0	0x90084E  	MOV	[W14+24], W0
0x0FA2	0xED2000  	DEC	W0
0x0FA4	0x980F40  	MOV	W0, [W14+24]
0x0FA6	0xE20002  	CP0	W1
0x0FA8	0x32000B  	BRA Z	L___Lib_Sprintf__doprntf65
L___Lib_Sprintf__doprntf383:
;__Lib_Sprintf.c,363 :: 		
0x0FAA	0x90083E  	MOV	[W14+22], W0
0x0FAC	0x784D10  	MOV.B	[W0], [W10]
0x0FAE	0x450061  	ADD	W10, #1, W0
0x0FB0	0x780500  	MOV	W0, W10
0x0FB2	0x90083E  	MOV	[W14+22], W0
0x0FB4	0xEC2000  	INC	W0
0x0FB6	0x980F30  	MOV	W0, [W14+22]
0x0FB8	0x9008DE  	MOV	[W14+26], W1
0x0FBA	0x47007A  	ADD	W14, #26, W0
0x0FBC	0x408861  	ADD	W1, #1, [W0]
0x0FBE	0x37FFEF  	BRA	L___Lib_Sprintf__doprntf64
L___Lib_Sprintf__doprntf65:
;__Lib_Sprintf.c,365 :: 		
0x0FC0	0x47006E  	ADD	W14, #14, W0
0x0FC2	0xA63010  	BTSS	[W0], #3
0x0FC4	0x37000E  	BRA	L___Lib_Sprintf__doprntf66
;__Lib_Sprintf.c,366 :: 		
L___Lib_Sprintf__doprntf67:
0x0FC6	0x90016E  	MOV	[W14+12], W2
0x0FC8	0x9000EE  	MOV	[W14+12], W1
0x0FCA	0x47006C  	ADD	W14, #12, W0
0x0FCC	0x508861  	SUB	W1, #1, [W0]
0x0FCE	0xE20004  	CP0	W2
0x0FD0	0x320008  	BRA Z	L___Lib_Sprintf__doprntf68
L___Lib_Sprintf__doprntf384:
;__Lib_Sprintf.c,367 :: 		
0x0FD2	0xB3C200  	MOV.B	#32, W0
0x0FD4	0x784D00  	MOV.B	W0, [W10]
0x0FD6	0x450061  	ADD	W10, #1, W0
0x0FD8	0x780500  	MOV	W0, W10
0x0FDA	0x9008DE  	MOV	[W14+26], W1
0x0FDC	0x47007A  	ADD	W14, #26, W0
0x0FDE	0x408861  	ADD	W1, #1, [W0]
0x0FE0	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf67
L___Lib_Sprintf__doprntf68:
L___Lib_Sprintf__doprntf66:
;__Lib_Sprintf.c,368 :: 		
0x0FE2	0x37FEBD  	BRA	L___Lib_Sprintf__doprntf10
;__Lib_Sprintf.c,369 :: 		
L___Lib_Sprintf__doprntf69:
;__Lib_Sprintf.c,370 :: 		
0x0FE4	0x78008C  	MOV	W12, W1
0x0FE6	0x78001C  	MOV	[W12], W0
0x0FE8	0xEDA000  	DEC2	W0
0x0FEA	0x780E00  	MOV	W0, [W12]
0x0FEC	0x780011  	MOV	[W1], W0
0x0FEE	0x780010  	MOV	[W0], W0
0x0FF0	0x984F20  	MOV.B	W0, [W14+10]
;__Lib_Sprintf.c,371 :: 		
L___Lib_Sprintf__doprntf70:
;__Lib_Sprintf.c,372 :: 		
0x0FF2	0x47006A  	ADD	W14, #10, W0
0x0FF4	0x980F30  	MOV	W0, [W14+22]
;__Lib_Sprintf.c,373 :: 		
0x0FF6	0x200010  	MOV	#1, W0
0x0FF8	0x980F40  	MOV	W0, [W14+24]
;__Lib_Sprintf.c,374 :: 		
0x0FFA	0x37FFAC  	BRA	____doprntf_dostring
;__Lib_Sprintf.c,376 :: 		
L___Lib_Sprintf__doprntf71:
;__Lib_Sprintf.c,377 :: 		
0x0FFC	0x200C02  	MOV	#192, W2
0x0FFE	0x4700EE  	ADD	W14, #14, W1
0x1000	0x47006E  	ADD	W14, #14, W0
0x1002	0x710811  	IOR	W2, [W1], [W0]
;__Lib_Sprintf.c,378 :: 		
0x1004	0x370040  	BRA	L___Lib_Sprintf__doprntf38
;__Lib_Sprintf.c,380 :: 		
L___Lib_Sprintf__doprntf37:
0x1006	0x90482E  	MOV.B	[W14+10], W0
0x1008	0xE10460  	CP.B	W0, #0
0x100A	0x32FF66  	BRA Z	L___Lib_Sprintf__doprntf39
L___Lib_Sprintf__doprntf385:
0x100C	0x9048AE  	MOV.B	[W14+10], W1
0x100E	0xB3C6C0  	MOV.B	#108, W0
0x1010	0xE10C00  	CP.B	W1, W0
0x1012	0x32FF64  	BRA Z	L___Lib_Sprintf__doprntf40
L___Lib_Sprintf__doprntf386:
0x1014	0x9048AE  	MOV.B	[W14+10], W1
0x1016	0xB3C4C0  	MOV.B	#76, W0
0x1018	0xE10C00  	CP.B	W1, W0
0x101A	0x32FF60  	BRA Z	L___Lib_Sprintf__doprntf41
L___Lib_Sprintf__doprntf387:
0x101C	0x9048AE  	MOV.B	[W14+10], W1
0x101E	0xB3C660  	MOV.B	#102, W0
0x1020	0xE10C00  	CP.B	W1, W0
0x1022	0x32FF60  	BRA Z	L___Lib_Sprintf__doprntf42
L___Lib_Sprintf__doprntf388:
0x1024	0x9048AE  	MOV.B	[W14+10], W1
0x1026	0xB3C450  	MOV.B	#69, W0
0x1028	0xE10C00  	CP.B	W1, W0
0x102A	0x32FF61  	BRA Z	L___Lib_Sprintf__doprntf43
L___Lib_Sprintf__doprntf389:
0x102C	0x9048AE  	MOV.B	[W14+10], W1
0x102E	0xB3C650  	MOV.B	#101, W0
0x1030	0xE10C00  	CP.B	W1, W0
0x1032	0x32FF61  	BRA Z	L___Lib_Sprintf__doprntf44
L___Lib_Sprintf__doprntf390:
0x1034	0x9048AE  	MOV.B	[W14+10], W1
0x1036	0xB3C670  	MOV.B	#103, W0
0x1038	0xE10C00  	CP.B	W1, W0
0x103A	0x32FF62  	BRA Z	L___Lib_Sprintf__doprntf45
L___Lib_Sprintf__doprntf391:
0x103C	0x9048AE  	MOV.B	[W14+10], W1
0x103E	0xB3C6F0  	MOV.B	#111, W0
0x1040	0xE10C00  	CP.B	W1, W0
0x1042	0x32FF63  	BRA Z	L___Lib_Sprintf__doprntf46
L___Lib_Sprintf__doprntf392:
0x1044	0x9048AE  	MOV.B	[W14+10], W1
0x1046	0xB3C640  	MOV.B	#100, W0
0x1048	0xE10C00  	CP.B	W1, W0
0x104A	0x32FF64  	BRA Z	L___Lib_Sprintf__doprntf47
L___Lib_Sprintf__doprntf393:
0x104C	0x9048AE  	MOV.B	[W14+10], W1
0x104E	0xB3C690  	MOV.B	#105, W0
0x1050	0xE10C00  	CP.B	W1, W0
0x1052	0x32FF60  	BRA Z	L___Lib_Sprintf__doprntf48
L___Lib_Sprintf__doprntf394:
0x1054	0x9048AE  	MOV.B	[W14+10], W1
0x1056	0xB3C700  	MOV.B	#112, W0
0x1058	0xE10C00  	CP.B	W1, W0
0x105A	0x32FF5D  	BRA Z	L___Lib_Sprintf__doprntf49
L___Lib_Sprintf__doprntf395:
0x105C	0x9048AE  	MOV.B	[W14+10], W1
0x105E	0xB3C580  	MOV.B	#88, W0
0x1060	0xE10C00  	CP.B	W1, W0
0x1062	0x32FF59  	BRA Z	L___Lib_Sprintf__doprntf50
L___Lib_Sprintf__doprntf396:
0x1064	0x9048AE  	MOV.B	[W14+10], W1
0x1066	0xB3C780  	MOV.B	#120, W0
0x1068	0xE10C00  	CP.B	W1, W0
0x106A	0x32FF59  	BRA Z	L___Lib_Sprintf__doprntf51
L___Lib_Sprintf__doprntf397:
0x106C	0x9048AE  	MOV.B	[W14+10], W1
0x106E	0xB3C730  	MOV.B	#115, W0
0x1070	0xE10C00  	CP.B	W1, W0
0x1072	0x32FF5A  	BRA Z	L___Lib_Sprintf__doprntf52
L___Lib_Sprintf__doprntf398:
0x1074	0x9048AE  	MOV.B	[W14+10], W1
0x1076	0xB3C630  	MOV.B	#99, W0
0x1078	0xE10C00  	CP.B	W1, W0
0x107A	0x32FFB4  	BRA Z	L___Lib_Sprintf__doprntf69
L___Lib_Sprintf__doprntf399:
0x107C	0x9048AE  	MOV.B	[W14+10], W1
0x107E	0xB3C750  	MOV.B	#117, W0
0x1080	0xE10C00  	CP.B	W1, W0
0x1082	0x32FFBC  	BRA Z	L___Lib_Sprintf__doprntf71
L___Lib_Sprintf__doprntf400:
0x1084	0x37FFB6  	BRA	L___Lib_Sprintf__doprntf70
L___Lib_Sprintf__doprntf38:
;__Lib_Sprintf.c,382 :: 		
0x1086	0x9000FE  	MOV	[W14+14], W1
0x1088	0x207000  	MOV	#1792, W0
0x108A	0x608000  	AND	W1, W0, W0
0x108C	0x320498  	BRA Z	L___Lib_Sprintf__doprntf72
L___Lib_Sprintf__doprntf401:
;__Lib_Sprintf.c,383 :: 		
0x108E	0x47006E  	ADD	W14, #14, W0
0x1090	0xA6C010  	BTSS	[W0], #12
0x1092	0x370002  	BRA	L___Lib_Sprintf__doprntf73
;__Lib_Sprintf.c,384 :: 		
0x1094	0x200060  	MOV	#6, W0
0x1096	0x980740  	MOV	W0, [W14+8]
L___Lib_Sprintf__doprntf73:
;__Lib_Sprintf.c,385 :: 		
0x1098	0x78008C  	MOV	W12, W1
0x109A	0x78001C  	MOV	[W12], W0
0x109C	0x500064  	SUB	W0, #4, W0
0x109E	0x780E00  	MOV	W0, [W12]
0x10A0	0x780111  	MOV	[W1], W2
0x10A2	0xBE0012  	MOV.D	[W2], W0
0x10A4	0x980F00  	MOV	W0, [W14+16]
0x10A6	0x980F11  	MOV	W1, [W14+18]
;__Lib_Sprintf.c,386 :: 		
0x10A8	0x781F8C  	PUSH	W12
0x10AA	0xBE9F8A  	PUSH.D	W10
0x10AC	0xEF2004  	CLR	W2
0x10AE	0xEF2006  	CLR	W3
0x10B0	0x07FC12  	RCALL	__Compare_Le_Fp
0x10B2	0xE00000  	CP0	W0
0x10B4	0xEF6000  	CLR.B	W0
0x10B6	0x3D0001  	BRA GE	L___Lib_Sprintf__doprntf402
0x10B8	0xEC6000  	INC.B	W0
L___Lib_Sprintf__doprntf402:
0x10BA	0xBE054F  	POP.D	W10
0x10BC	0x78064F  	POP	W12
0x10BE	0xE24000  	CP0.B	W0
0x10C0	0x32000A  	BRA Z	L___Lib_Sprintf__doprntf74
L___Lib_Sprintf__doprntf403:
;__Lib_Sprintf.c,387 :: 		
0x10C2	0x90098E  	MOV	[W14+16], W3
0x10C4	0x900A1E  	MOV	[W14+18], W4
0x10C6	0x200001  	MOV	#0, W1
0x10C8	0x280002  	MOV	#32768, W2
0x10CA	0x470070  	ADD	W14, #16, W0
0x10CC	0x699801  	XOR	W3, W1, [W0++]
0x10CE	0x6A1002  	XOR	W4, W2, [W0--]
;__Lib_Sprintf.c,388 :: 		
0x10D0	0x9000FE  	MOV	[W14+14], W1
0x10D2	0x47006E  	ADD	W14, #14, W0
0x10D4	0x708863  	IOR	W1, #3, [W0]
;__Lib_Sprintf.c,389 :: 		
L___Lib_Sprintf__doprntf74:
;__Lib_Sprintf.c,390 :: 		
0x10D6	0xEF2000  	CLR	W0
0x10D8	0x980F20  	MOV	W0, [W14+20]
;__Lib_Sprintf.c,391 :: 		
0x10DA	0x781F8C  	PUSH	W12
0x10DC	0xBE9F8A  	PUSH.D	W10
0x10DE	0x90080E  	MOV	[W14+16], W0
0x10E0	0x90089E  	MOV	[W14+18], W1
0x10E2	0xEF2004  	CLR	W2
0x10E4	0xEF2006  	CLR	W3
0x10E6	0x07FBF7  	RCALL	__Compare_Le_Fp
0x10E8	0xE00000  	CP0	W0
0x10EA	0xEF6000  	CLR.B	W0
0x10EC	0x320001  	BRA Z	L___Lib_Sprintf__doprntf404
0x10EE	0xEC6000  	INC.B	W0
L___Lib_Sprintf__doprntf404:
0x10F0	0xBE054F  	POP.D	W10
0x10F2	0x78064F  	POP	W12
0x10F4	0xE24000  	CP0.B	W0
0x10F6	0x320049  	BRA Z	L___Lib_Sprintf__doprntf75
L___Lib_Sprintf__doprntf405:
;__Lib_Sprintf.c,392 :: 		
0x10F8	0x4701F4  	ADD	W14, #20, W3
0x10FA	0x470070  	ADD	W14, #16, W0
0x10FC	0x7800B0  	MOV	[W0++], W1
0x10FE	0x780120  	MOV	[W0--], W2
0x1100	0xDE10C7  	LSR	W2, #7, W1
0x1102	0xEB0100  	CLR	W2
0x1104	0x200FF0  	MOV	#255, W0
0x1106	0x608080  	AND	W1, W0, W1
0x1108	0x2007E0  	MOV	#126, W0
0x110A	0x508000  	SUB	W1, W0, W0
0x110C	0x780980  	MOV	W0, [W3]
;__Lib_Sprintf.c,393 :: 		
0x110E	0x200011  	MOV	#1, W1
0x1110	0x470074  	ADD	W14, #20, W0
0x1112	0x108810  	SUBR	W1, [W0], [W0]
;__Lib_Sprintf.c,394 :: 		
0x1114	0x9008AE  	MOV	[W14+20], W1
0x1116	0x200030  	MOV	#3, W0
0x1118	0xB98A00  	MUL.SS	W1, W0, W4
0x111A	0x980F24  	MOV	W4, [W14+20]
;__Lib_Sprintf.c,395 :: 		
0x111C	0x2000A2  	MOV	#10, W2
0x111E	0x090011  	REPEAT	#17
0x1120	0xD80202  	DIV.S	W4, W2
0x1122	0x980F20  	MOV	W0, [W14+20]
;__Lib_Sprintf.c,396 :: 		
0x1124	0xE10060  	CP	W0, #0
0x1126	0x3D0003  	BRA GE	L___Lib_Sprintf__doprntf76
L___Lib_Sprintf__doprntf406:
;__Lib_Sprintf.c,397 :: 		
0x1128	0x200011  	MOV	#1, W1
0x112A	0x470074  	ADD	W14, #20, W0
0x112C	0x108810  	SUBR	W1, [W0], [W0]
L___Lib_Sprintf__doprntf76:
;__Lib_Sprintf.c,398 :: 		
0x112E	0x90082E  	MOV	[W14+20], W0
0x1130	0x100060  	SUBR	W0, #0, W0
0x1132	0x781F8C  	PUSH	W12
0x1134	0xBE9F8A  	PUSH.D	W10
0x1136	0x784500  	MOV.B	W0, W10
0x1138	0x07FC99  	RCALL	__Lib_Sprintf_scale
0x113A	0x90090E  	MOV	[W14+16], W2
0x113C	0x90099E  	MOV	[W14+18], W3
0x113E	0x07F8BA  	RCALL	__Mul_FP
0x1140	0x980F30  	MOV	W0, [W14+22]
0x1142	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,399 :: 		
0x1144	0x200002  	MOV	#0, W2
0x1146	0x23F803  	MOV	#16256, W3
0x1148	0x90083E  	MOV	[W14+22], W0
0x114A	0x9008CE  	MOV	[W14+24], W1
0x114C	0x07FBC4  	RCALL	__Compare_Le_Fp
0x114E	0xE00000  	CP0	W0
0x1150	0xEF6000  	CLR.B	W0
0x1152	0x3D0001  	BRA GE	L___Lib_Sprintf__doprntf407
0x1154	0xEC6000  	INC.B	W0
L___Lib_Sprintf__doprntf407:
0x1156	0xBE054F  	POP.D	W10
0x1158	0x78064F  	POP	W12
0x115A	0xE24000  	CP0.B	W0
0x115C	0x320004  	BRA Z	L___Lib_Sprintf__doprntf77
L___Lib_Sprintf__doprntf408:
;__Lib_Sprintf.c,400 :: 		
0x115E	0x200011  	MOV	#1, W1
0x1160	0x470074  	ADD	W14, #20, W0
0x1162	0x108810  	SUBR	W1, [W0], [W0]
0x1164	0x370012  	BRA	L___Lib_Sprintf__doprntf78
L___Lib_Sprintf__doprntf77:
;__Lib_Sprintf.c,402 :: 		
0x1166	0x781F8C  	PUSH	W12
0x1168	0xBE9F8A  	PUSH.D	W10
0x116A	0x200002  	MOV	#0, W2
0x116C	0x241203  	MOV	#16672, W3
0x116E	0x90083E  	MOV	[W14+22], W0
0x1170	0x9008CE  	MOV	[W14+24], W1
0x1172	0x07FBA0  	RCALL	__Compare_Ge_Fp
0x1174	0xE00000  	CP0	W0
0x1176	0xEF6000  	CLR.B	W0
0x1178	0x350001  	BRA LT	L___Lib_Sprintf__doprntf409
0x117A	0xEC6000  	INC.B	W0
L___Lib_Sprintf__doprntf409:
0x117C	0xBE054F  	POP.D	W10
0x117E	0x78064F  	POP	W12
0x1180	0xE24000  	CP0.B	W0
0x1182	0x320003  	BRA Z	L___Lib_Sprintf__doprntf79
L___Lib_Sprintf__doprntf410:
;__Lib_Sprintf.c,403 :: 		
0x1184	0x200011  	MOV	#1, W1
0x1186	0x470074  	ADD	W14, #20, W0
0x1188	0x408810  	ADD	W1, [W0], [W0]
L___Lib_Sprintf__doprntf79:
L___Lib_Sprintf__doprntf78:
;__Lib_Sprintf.c,404 :: 		
L___Lib_Sprintf__doprntf75:
;__Lib_Sprintf.c,405 :: 		
0x118A	0x90082E  	MOV	[W14+20], W0
0x118C	0xE10060  	CP	W0, #0
0x118E	0x3C0003  	BRA GT	L___Lib_Sprintf__doprntf80
L___Lib_Sprintf__doprntf411:
;__Lib_Sprintf.c,406 :: 		
0x1190	0xB3C010  	MOV.B	#1, W0
0x1192	0x984F20  	MOV.B	W0, [W14+10]
0x1194	0x370002  	BRA	L___Lib_Sprintf__doprntf81
L___Lib_Sprintf__doprntf80:
;__Lib_Sprintf.c,408 :: 		
0x1196	0x90504E  	MOV.B	[W14+20], W0
0x1198	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf81:
;__Lib_Sprintf.c,409 :: 		
0x119A	0x47006E  	ADD	W14, #14, W0
0x119C	0xA78010  	BTSC	[W0], #8
0x119E	0x37000E  	BRA	L___Lib_Sprintf__doprntf322
0x11A0	0x47006E  	ADD	W14, #14, W0
0x11A2	0xA69010  	BTSS	[W0], #9
0x11A4	0x37000A  	BRA	L___Lib_Sprintf__doprntf321
0x11A6	0x2FFFC1  	MOV	#65532, W1
0x11A8	0x470074  	ADD	W14, #20, W0
0x11AA	0xE10810  	CP	W1, [W0]
0x11AC	0x3C0005  	BRA GT	L___Lib_Sprintf__doprntf320
L___Lib_Sprintf__doprntf412:
0x11AE	0x9008AE  	MOV	[W14+20], W1
0x11B0	0x470068  	ADD	W14, #8, W0
0x11B2	0xE10810  	CP	W1, [W0]
0x11B4	0x3D0001  	BRA GE	L___Lib_Sprintf__doprntf319
L___Lib_Sprintf__doprntf413:
0x11B6	0x370001  	BRA	L___Lib_Sprintf__doprntf314
L___Lib_Sprintf__doprntf320:
L___Lib_Sprintf__doprntf319:
0x11B8	0x370001  	BRA	L___Lib_Sprintf__doprntf313
L___Lib_Sprintf__doprntf314:
L___Lib_Sprintf__doprntf321:
0x11BA	0x370204  	BRA	L___Lib_Sprintf__doprntf88
L___Lib_Sprintf__doprntf313:
L___Lib_Sprintf__doprntf322:
;__Lib_Sprintf.c,410 :: 		
0x11BC	0x470068  	ADD	W14, #8, W0
0x11BE	0xE00010  	CP0	[W0]
0x11C0	0x320006  	BRA Z	L___Lib_Sprintf__doprntf324
L___Lib_Sprintf__doprntf414:
0x11C2	0x47006E  	ADD	W14, #14, W0
0x11C4	0xA69010  	BTSS	[W0], #9
0x11C6	0x370003  	BRA	L___Lib_Sprintf__doprntf323
L___Lib_Sprintf__doprntf312:
;__Lib_Sprintf.c,411 :: 		
0x11C8	0x9000CE  	MOV	[W14+8], W1
0x11CA	0x470068  	ADD	W14, #8, W0
0x11CC	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,410 :: 		
L___Lib_Sprintf__doprntf324:
L___Lib_Sprintf__doprntf323:
;__Lib_Sprintf.c,412 :: 		
0x11CE	0x90004E  	MOV	[W14+8], W0
0x11D0	0xE10068  	CP	W0, #8
0x11D2	0x360003  	BRA LEU	L___Lib_Sprintf__doprntf92
L___Lib_Sprintf__doprntf415:
;__Lib_Sprintf.c,413 :: 		
0x11D4	0xB3C080  	MOV.B	#8, W0
0x11D6	0x984F20  	MOV.B	W0, [W14+10]
0x11D8	0x370002  	BRA	L___Lib_Sprintf__doprntf93
L___Lib_Sprintf__doprntf92:
;__Lib_Sprintf.c,415 :: 		
0x11DA	0x90480E  	MOV.B	[W14+8], W0
0x11DC	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf93:
;__Lib_Sprintf.c,416 :: 		
0x11DE	0x781F8C  	PUSH	W12
0x11E0	0xBE9F8A  	PUSH.D	W10
0x11E2	0x90080E  	MOV	[W14+16], W0
0x11E4	0x90089E  	MOV	[W14+18], W1
0x11E6	0xEF2004  	CLR	W2
0x11E8	0xEF2006  	CLR	W3
0x11EA	0x07FB75  	RCALL	__Compare_Le_Fp
0x11EC	0xE00000  	CP0	W0
0x11EE	0xEF6000  	CLR.B	W0
0x11F0	0x320001  	BRA Z	L___Lib_Sprintf__doprntf416
0x11F2	0xEC6000  	INC.B	W0
L___Lib_Sprintf__doprntf416:
0x11F4	0xBE054F  	POP.D	W10
0x11F6	0x78064F  	POP	W12
0x11F8	0xE24000  	CP0.B	W0
0x11FA	0x320074  	BRA Z	L___Lib_Sprintf__doprntf94
L___Lib_Sprintf__doprntf417:
;__Lib_Sprintf.c,417 :: 		
0x11FC	0x781F8C  	PUSH	W12
0x11FE	0xBE9F8A  	PUSH.D	W10
0x1200	0x90554E  	MOV.B	[W14+20], W10
0x1202	0x07FC34  	RCALL	__Lib_Sprintf_scale
0x1204	0xBE0100  	MOV.D	W0, W2
0x1206	0x90080E  	MOV	[W14+16], W0
0x1208	0x90089E  	MOV	[W14+18], W1
0x120A	0x07F997  	RCALL	__Div_FP
0x120C	0x980F00  	MOV	W0, [W14+16]
0x120E	0x980F11  	MOV	W1, [W14+18]
;__Lib_Sprintf.c,418 :: 		
0x1210	0x47006A  	ADD	W14, #10, W0
0x1212	0xFB8010  	ZE	[W0], W0
0x1214	0x100060  	SUBR	W0, #0, W0
0x1216	0x784500  	MOV.B	W0, W10
0x1218	0x07FC29  	RCALL	__Lib_Sprintf_scale
0x121A	0xBE0100  	MOV.D	W0, W2
0x121C	0x90080E  	MOV	[W14+16], W0
0x121E	0x90089E  	MOV	[W14+18], W1
0x1220	0x07F98C  	RCALL	__Div_FP
0x1222	0x981720  	MOV	W0, [W14+36]
0x1224	0x981731  	MOV	W1, [W14+38]
0x1226	0x980F00  	MOV	W0, [W14+16]
0x1228	0x980F11  	MOV	W1, [W14+18]
;__Lib_Sprintf.c,419 :: 		
0x122A	0x07FB0E  	RCALL	__Float2Longword
0x122C	0x07FB66  	RCALL	__Long2Float
0x122E	0x980F60  	MOV	W0, [W14+28]
0x1230	0x980F71  	MOV	W1, [W14+30]
0x1232	0x90096E  	MOV	[W14+28], W2
0x1234	0x9009FE  	MOV	[W14+30], W3
0x1236	0x90102E  	MOV	[W14+36], W0
0x1238	0x9010BE  	MOV	[W14+38], W1
0x123A	0x07FB48  	RCALL	__Sub_FP
0x123C	0x200002  	MOV	#0, W2
0x123E	0x23F003  	MOV	#16128, W3
0x1240	0x07FB39  	RCALL	__Compare_Ge_Fp
0x1242	0xE00000  	CP0	W0
0x1244	0xEF6000  	CLR.B	W0
0x1246	0x350001  	BRA LT	L___Lib_Sprintf__doprntf418
0x1248	0xEC6000  	INC.B	W0
L___Lib_Sprintf__doprntf418:
0x124A	0xBE054F  	POP.D	W10
0x124C	0x78064F  	POP	W12
0x124E	0xE24000  	CP0.B	W0
0x1250	0x32000B  	BRA Z	L___Lib_Sprintf__doprntf95
L___Lib_Sprintf__doprntf419:
;__Lib_Sprintf.c,420 :: 		
0x1252	0x90090E  	MOV	[W14+16], W2
0x1254	0x90099E  	MOV	[W14+18], W3
0x1256	0x200000  	MOV	#0, W0
0x1258	0x23F001  	MOV	#16128, W1
0x125A	0x781F8C  	PUSH	W12
0x125C	0xBE9F8A  	PUSH.D	W10
0x125E	0x07F8B7  	RCALL	__AddSub_FP
0x1260	0xBE054F  	POP.D	W10
0x1262	0x78064F  	POP	W12
0x1264	0x980F00  	MOV	W0, [W14+16]
0x1266	0x980F11  	MOV	W1, [W14+18]
L___Lib_Sprintf__doprntf95:
;__Lib_Sprintf.c,421 :: 		
0x1268	0x781F8C  	PUSH	W12
0x126A	0xBE9F8A  	PUSH.D	W10
0x126C	0x90080E  	MOV	[W14+16], W0
0x126E	0x90089E  	MOV	[W14+18], W1
0x1270	0x07FAEB  	RCALL	__Float2Longword
0x1272	0xBE054F  	POP.D	W10
0x1274	0x78064F  	POP	W12
0x1276	0x47016A  	ADD	W14, #10, W2
0x1278	0xFB8112  	ZE	[W2], W2
0x127A	0xEC2004  	INC	W2
0x127C	0xDD11C2  	SL	W2, #2, W3
0x127E	0x2AC3E2  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W2
0x1280	0x410203  	ADD	W2, W3, W4
0x1282	0xBE0114  	MOV.D	[W4], W2
0x1284	0xE10002  	CP	W0, W2
0x1286	0xE18803  	CPB	W1, W3
0x1288	0x39000F  	BRA LTU	L___Lib_Sprintf__doprntf96
L___Lib_Sprintf__doprntf420:
;__Lib_Sprintf.c,422 :: 		
0x128A	0x781F8C  	PUSH	W12
0x128C	0xBE9F8A  	PUSH.D	W10
0x128E	0x90080E  	MOV	[W14+16], W0
0x1290	0x90089E  	MOV	[W14+18], W1
0x1292	0x2CCCD2  	MOV	#52429, W2
0x1294	0x23DCC3  	MOV	#15820, W3
0x1296	0x07F80E  	RCALL	__Mul_FP
0x1298	0xBE054F  	POP.D	W10
0x129A	0x78064F  	POP	W12
0x129C	0x980F00  	MOV	W0, [W14+16]
0x129E	0x980F11  	MOV	W1, [W14+18]
;__Lib_Sprintf.c,423 :: 		
0x12A0	0x200011  	MOV	#1, W1
0x12A2	0x470074  	ADD	W14, #20, W0
0x12A4	0x408810  	ADD	W1, [W0], [W0]
;__Lib_Sprintf.c,424 :: 		
0x12A6	0x37001E  	BRA	L___Lib_Sprintf__doprntf97
L___Lib_Sprintf__doprntf96:
;__Lib_Sprintf.c,426 :: 		
0x12A8	0x781F8C  	PUSH	W12
0x12AA	0xBE9F8A  	PUSH.D	W10
0x12AC	0x90080E  	MOV	[W14+16], W0
0x12AE	0x90089E  	MOV	[W14+18], W1
0x12B0	0x07FACB  	RCALL	__Float2Longword
0x12B2	0xBE054F  	POP.D	W10
0x12B4	0x78064F  	POP	W12
0x12B6	0x47016A  	ADD	W14, #10, W2
0x12B8	0xFB8112  	ZE	[W2], W2
0x12BA	0xDD11C2  	SL	W2, #2, W3
0x12BC	0x2AC3E2  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W2
0x12BE	0x410203  	ADD	W2, W3, W4
0x12C0	0xBE0114  	MOV.D	[W4], W2
0x12C2	0xE10002  	CP	W0, W2
0x12C4	0xE18803  	CPB	W1, W3
0x12C6	0x31000E  	BRA GEU	L___Lib_Sprintf__doprntf98
L___Lib_Sprintf__doprntf421:
;__Lib_Sprintf.c,427 :: 		
0x12C8	0x781F8C  	PUSH	W12
0x12CA	0xBE9F8A  	PUSH.D	W10
0x12CC	0x90080E  	MOV	[W14+16], W0
0x12CE	0x90089E  	MOV	[W14+18], W1
0x12D0	0x200002  	MOV	#0, W2
0x12D2	0x241203  	MOV	#16672, W3
0x12D4	0x07F7EF  	RCALL	__Mul_FP
0x12D6	0xBE054F  	POP.D	W10
0x12D8	0x78064F  	POP	W12
0x12DA	0x980F00  	MOV	W0, [W14+16]
0x12DC	0x980F11  	MOV	W1, [W14+18]
;__Lib_Sprintf.c,428 :: 		
0x12DE	0x200011  	MOV	#1, W1
0x12E0	0x470074  	ADD	W14, #20, W0
0x12E2	0x108810  	SUBR	W1, [W0], [W0]
;__Lib_Sprintf.c,429 :: 		
L___Lib_Sprintf__doprntf98:
L___Lib_Sprintf__doprntf97:
;__Lib_Sprintf.c,430 :: 		
L___Lib_Sprintf__doprntf94:
;__Lib_Sprintf.c,431 :: 		
0x12E4	0x47006E  	ADD	W14, #14, W0
0x12E6	0xA69010  	BTSS	[W0], #9
0x12E8	0x370049  	BRA	L___Lib_Sprintf__doprntf328
0x12EA	0x47006E  	ADD	W14, #14, W0
0x12EC	0xA7B010  	BTSC	[W0], #11
0x12EE	0x370046  	BRA	L___Lib_Sprintf__doprntf327
L___Lib_Sprintf__doprntf311:
;__Lib_Sprintf.c,432 :: 		
0x12F0	0x90004E  	MOV	[W14+8], W0
0x12F2	0xE1006A  	CP	W0, #10
0x12F4	0x340002  	BRA LE	L___Lib_Sprintf__doprntf102
L___Lib_Sprintf__doprntf422:
;__Lib_Sprintf.c,433 :: 		
0x12F6	0x2000A0  	MOV	#10, W0
0x12F8	0x980740  	MOV	W0, [W14+8]
L___Lib_Sprintf__doprntf102:
;__Lib_Sprintf.c,434 :: 		
0x12FA	0x781F8C  	PUSH	W12
0x12FC	0xBE9F8A  	PUSH.D	W10
0x12FE	0x90080E  	MOV	[W14+16], W0
0x1300	0x90089E  	MOV	[W14+18], W1
0x1302	0x07FAA2  	RCALL	__Float2Longword
0x1304	0xBE054F  	POP.D	W10
0x1306	0x78064F  	POP	W12
0x1308	0x980F30  	MOV	W0, [W14+22]
0x130A	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,435 :: 		
L___Lib_Sprintf__doprntf103:
0x130C	0x4700F6  	ADD	W14, #22, W1
0x130E	0x780031  	MOV	[W1++], W0
0x1310	0x700021  	IOR	W0, [W1--], W0
0x1312	0x32001D  	BRA Z	L___Lib_Sprintf__doprntf326
L___Lib_Sprintf__doprntf423:
0x1314	0x781F8C  	PUSH	W12
0x1316	0xBE9F8A  	PUSH.D	W10
0x1318	0x2000A2  	MOV	#10, W2
0x131A	0x200003  	MOV	#0, W3
0x131C	0x90083E  	MOV	[W14+22], W0
0x131E	0x9008CE  	MOV	[W14+24], W1
0x1320	0xEB0200  	CLR	W4
0x1322	0x07FA31  	RCALL	__Modulus_32x32
0x1324	0xBE054F  	POP.D	W10
0x1326	0x78064F  	POP	W12
0x1328	0xE10060  	CP	W0, #0
0x132A	0xE18860  	CPB	W1, #0
0x132C	0x3A0010  	BRA NZ	L___Lib_Sprintf__doprntf325
L___Lib_Sprintf__doprntf424:
L___Lib_Sprintf__doprntf310:
;__Lib_Sprintf.c,436 :: 		
0x132E	0x9000CE  	MOV	[W14+8], W1
0x1330	0x470068  	ADD	W14, #8, W0
0x1332	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,437 :: 		
0x1334	0x781F8C  	PUSH	W12
0x1336	0xBE9F8A  	PUSH.D	W10
0x1338	0x2000A2  	MOV	#10, W2
0x133A	0x200003  	MOV	#0, W3
0x133C	0x90083E  	MOV	[W14+22], W0
0x133E	0x9008CE  	MOV	[W14+24], W1
0x1340	0xEB0200  	CLR	W4
0x1342	0x07FA4D  	RCALL	__Divide_32x32
0x1344	0xBE054F  	POP.D	W10
0x1346	0x78064F  	POP	W12
0x1348	0x980F30  	MOV	W0, [W14+22]
0x134A	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,438 :: 		
0x134C	0x37FFDF  	BRA	L___Lib_Sprintf__doprntf103
;__Lib_Sprintf.c,435 :: 		
L___Lib_Sprintf__doprntf326:
L___Lib_Sprintf__doprntf325:
;__Lib_Sprintf.c,439 :: 		
0x134E	0x47006A  	ADD	W14, #10, W0
0x1350	0xFB8090  	ZE	[W0], W1
0x1352	0x470068  	ADD	W14, #8, W0
0x1354	0xE10810  	CP	W1, [W0]
0x1356	0x340012  	BRA LE	L___Lib_Sprintf__doprntf107
L___Lib_Sprintf__doprntf425:
;__Lib_Sprintf.c,440 :: 		
0x1358	0x47006A  	ADD	W14, #10, W0
0x135A	0xFB8090  	ZE	[W0], W1
0x135C	0x470068  	ADD	W14, #8, W0
0x135E	0x508010  	SUB	W1, [W0], W0
0x1360	0x781F8C  	PUSH	W12
0x1362	0xBE9F8A  	PUSH.D	W10
0x1364	0x784500  	MOV.B	W0, W10
0x1366	0x07FB82  	RCALL	__Lib_Sprintf_scale
0x1368	0xBE0100  	MOV.D	W0, W2
0x136A	0x90080E  	MOV	[W14+16], W0
0x136C	0x90089E  	MOV	[W14+18], W1
0x136E	0x07F8E5  	RCALL	__Div_FP
0x1370	0xBE054F  	POP.D	W10
0x1372	0x78064F  	POP	W12
0x1374	0x980F00  	MOV	W0, [W14+16]
0x1376	0x980F11  	MOV	W1, [W14+18]
;__Lib_Sprintf.c,441 :: 		
0x1378	0x90480E  	MOV.B	[W14+8], W0
0x137A	0x984F20  	MOV.B	W0, [W14+10]
;__Lib_Sprintf.c,442 :: 		
L___Lib_Sprintf__doprntf107:
;__Lib_Sprintf.c,431 :: 		
L___Lib_Sprintf__doprntf328:
L___Lib_Sprintf__doprntf327:
;__Lib_Sprintf.c,444 :: 		
0x137C	0x90004E  	MOV	[W14+8], W0
0x137E	0x400165  	ADD	W0, #5, W2
0x1380	0x4700EC  	ADD	W14, #12, W1
0x1382	0x47006C  	ADD	W14, #12, W0
0x1384	0x110811  	SUBR	W2, [W1], [W0]
;__Lib_Sprintf.c,445 :: 		
0x1386	0x470068  	ADD	W14, #8, W0
0x1388	0xE00010  	CP0	[W0]
0x138A	0x3A0004  	BRA NZ	L___Lib_Sprintf__doprntf330
L___Lib_Sprintf__doprntf426:
0x138C	0x47006E  	ADD	W14, #14, W0
0x138E	0xA7B010  	BTSC	[W0], #11
0x1390	0x370001  	BRA	L___Lib_Sprintf__doprntf329
0x1392	0x370003  	BRA	L___Lib_Sprintf__doprntf110
L___Lib_Sprintf__doprntf330:
L___Lib_Sprintf__doprntf329:
;__Lib_Sprintf.c,446 :: 		
0x1394	0x9000EE  	MOV	[W14+12], W1
0x1396	0x47006C  	ADD	W14, #12, W0
0x1398	0x508861  	SUB	W1, #1, [W0]
L___Lib_Sprintf__doprntf110:
;__Lib_Sprintf.c,447 :: 		
0x139A	0x90007E  	MOV	[W14+14], W0
0x139C	0x600063  	AND	W0, #3, W0
0x139E	0xE20000  	CP0	W0
0x13A0	0x320003  	BRA Z	L___Lib_Sprintf__doprntf111
L___Lib_Sprintf__doprntf427:
;__Lib_Sprintf.c,448 :: 		
0x13A2	0x9000EE  	MOV	[W14+12], W1
0x13A4	0x47006C  	ADD	W14, #12, W0
0x13A6	0x508861  	SUB	W1, #1, [W0]
L___Lib_Sprintf__doprntf111:
;__Lib_Sprintf.c,449 :: 		
0x13A8	0x47006E  	ADD	W14, #14, W0
0x13AA	0xA62010  	BTSS	[W0], #2
0x13AC	0x37002C  	BRA	L___Lib_Sprintf__doprntf112
;__Lib_Sprintf.c,450 :: 		
0x13AE	0x47006E  	ADD	W14, #14, W0
0x13B0	0xA61010  	BTSS	[W0], #1
0x13B2	0x370010  	BRA	L___Lib_Sprintf__doprntf113
;__Lib_Sprintf.c,451 :: 		
0x13B4	0x47006E  	ADD	W14, #14, W0
0x13B6	0xA60010  	BTSS	[W0], #0
0x13B8	0x370003  	BRA	L___Lib_Sprintf__doprntf114
0x13BA	0xB3C2D0  	MOV.B	#45, W0
0x13BC	0x984700  	MOV.B	W0, [W14+0]
0x13BE	0x370002  	BRA	L___Lib_Sprintf__doprntf115
L___Lib_Sprintf__doprntf114:
0x13C0	0xB3C2B0  	MOV.B	#43, W0
0x13C2	0x984700  	MOV.B	W0, [W14+0]
L___Lib_Sprintf__doprntf115:
0x13C4	0x90400E  	MOV.B	[W14+0], W0
0x13C6	0x784D00  	MOV.B	W0, [W10]
0x13C8	0x450061  	ADD	W10, #1, W0
0x13CA	0x780500  	MOV	W0, W10
0x13CC	0x9008DE  	MOV	[W14+26], W1
0x13CE	0x47007A  	ADD	W14, #26, W0
0x13D0	0x408861  	ADD	W1, #1, [W0]
0x13D2	0x37000A  	BRA	L___Lib_Sprintf__doprntf116
L___Lib_Sprintf__doprntf113:
;__Lib_Sprintf.c,453 :: 		
0x13D4	0x47006E  	ADD	W14, #14, W0
0x13D6	0xA60010  	BTSS	[W0], #0
0x13D8	0x370007  	BRA	L___Lib_Sprintf__doprntf117
;__Lib_Sprintf.c,454 :: 		
0x13DA	0xB3C200  	MOV.B	#32, W0
0x13DC	0x784D00  	MOV.B	W0, [W10]
0x13DE	0x450061  	ADD	W10, #1, W0
0x13E0	0x780500  	MOV	W0, W10
0x13E2	0x9008DE  	MOV	[W14+26], W1
0x13E4	0x47007A  	ADD	W14, #26, W0
0x13E6	0x408861  	ADD	W1, #1, [W0]
L___Lib_Sprintf__doprntf117:
L___Lib_Sprintf__doprntf116:
;__Lib_Sprintf.c,455 :: 		
L___Lib_Sprintf__doprntf118:
0x13E8	0x90006E  	MOV	[W14+12], W0
0x13EA	0xE10060  	CP	W0, #0
0x13EC	0x34000B  	BRA LE	L___Lib_Sprintf__doprntf119
L___Lib_Sprintf__doprntf428:
;__Lib_Sprintf.c,456 :: 		
0x13EE	0xB3C300  	MOV.B	#48, W0
0x13F0	0x784D00  	MOV.B	W0, [W10]
0x13F2	0x450061  	ADD	W10, #1, W0
0x13F4	0x780500  	MOV	W0, W10
0x13F6	0x9008DE  	MOV	[W14+26], W1
0x13F8	0x47007A  	ADD	W14, #26, W0
0x13FA	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,457 :: 		
0x13FC	0x9000EE  	MOV	[W14+12], W1
0x13FE	0x47006C  	ADD	W14, #12, W0
0x1400	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,458 :: 		
0x1402	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf118
L___Lib_Sprintf__doprntf119:
;__Lib_Sprintf.c,459 :: 		
0x1404	0x37002E  	BRA	L___Lib_Sprintf__doprntf120
L___Lib_Sprintf__doprntf112:
;__Lib_Sprintf.c,461 :: 		
0x1406	0x47006E  	ADD	W14, #14, W0
0x1408	0xA73010  	BTSC	[W0], #3
0x140A	0x37000E  	BRA	L___Lib_Sprintf__doprntf121
;__Lib_Sprintf.c,462 :: 		
L___Lib_Sprintf__doprntf122:
0x140C	0x90006E  	MOV	[W14+12], W0
0x140E	0xE10060  	CP	W0, #0
0x1410	0x34000B  	BRA LE	L___Lib_Sprintf__doprntf123
L___Lib_Sprintf__doprntf429:
;__Lib_Sprintf.c,463 :: 		
0x1412	0xB3C200  	MOV.B	#32, W0
0x1414	0x784D00  	MOV.B	W0, [W10]
0x1416	0x450061  	ADD	W10, #1, W0
0x1418	0x780500  	MOV	W0, W10
0x141A	0x9008DE  	MOV	[W14+26], W1
0x141C	0x47007A  	ADD	W14, #26, W0
0x141E	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,464 :: 		
0x1420	0x9000EE  	MOV	[W14+12], W1
0x1422	0x47006C  	ADD	W14, #12, W0
0x1424	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,465 :: 		
0x1426	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf122
L___Lib_Sprintf__doprntf123:
L___Lib_Sprintf__doprntf121:
;__Lib_Sprintf.c,466 :: 		
0x1428	0x47006E  	ADD	W14, #14, W0
0x142A	0xA61010  	BTSS	[W0], #1
0x142C	0x370010  	BRA	L___Lib_Sprintf__doprntf124
;__Lib_Sprintf.c,467 :: 		
0x142E	0x47006E  	ADD	W14, #14, W0
0x1430	0xA60010  	BTSS	[W0], #0
0x1432	0x370003  	BRA	L___Lib_Sprintf__doprntf125
0x1434	0xB3C2D0  	MOV.B	#45, W0
0x1436	0x984710  	MOV.B	W0, [W14+1]
0x1438	0x370002  	BRA	L___Lib_Sprintf__doprntf126
L___Lib_Sprintf__doprntf125:
0x143A	0xB3C2B0  	MOV.B	#43, W0
0x143C	0x984710  	MOV.B	W0, [W14+1]
L___Lib_Sprintf__doprntf126:
0x143E	0x90401E  	MOV.B	[W14+1], W0
0x1440	0x784D00  	MOV.B	W0, [W10]
0x1442	0x450061  	ADD	W10, #1, W0
0x1444	0x780500  	MOV	W0, W10
0x1446	0x9008DE  	MOV	[W14+26], W1
0x1448	0x47007A  	ADD	W14, #26, W0
0x144A	0x408861  	ADD	W1, #1, [W0]
0x144C	0x37000A  	BRA	L___Lib_Sprintf__doprntf127
L___Lib_Sprintf__doprntf124:
;__Lib_Sprintf.c,469 :: 		
0x144E	0x47006E  	ADD	W14, #14, W0
0x1450	0xA60010  	BTSS	[W0], #0
0x1452	0x370007  	BRA	L___Lib_Sprintf__doprntf128
;__Lib_Sprintf.c,470 :: 		
0x1454	0xB3C200  	MOV.B	#32, W0
0x1456	0x784D00  	MOV.B	W0, [W10]
0x1458	0x450061  	ADD	W10, #1, W0
0x145A	0x780500  	MOV	W0, W10
0x145C	0x9008DE  	MOV	[W14+26], W1
0x145E	0x47007A  	ADD	W14, #26, W0
0x1460	0x408861  	ADD	W1, #1, [W0]
L___Lib_Sprintf__doprntf128:
L___Lib_Sprintf__doprntf127:
;__Lib_Sprintf.c,471 :: 		
L___Lib_Sprintf__doprntf120:
;__Lib_Sprintf.c,472 :: 		
0x1462	0x781F8C  	PUSH	W12
0x1464	0xBE9F8A  	PUSH.D	W10
0x1466	0x90080E  	MOV	[W14+16], W0
0x1468	0x90089E  	MOV	[W14+18], W1
0x146A	0x07F9EE  	RCALL	__Float2Longword
0x146C	0x980F30  	MOV	W0, [W14+22]
0x146E	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,473 :: 		
0x1470	0x47006A  	ADD	W14, #10, W0
0x1472	0xFB8010  	ZE	[W0], W0
0x1474	0xDD00C2  	SL	W0, #2, W1
0x1476	0x2AC3E0  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W0
0x1478	0x400081  	ADD	W0, W1, W1
0x147A	0xBE0111  	MOV.D	[W1], W2
0x147C	0x90083E  	MOV	[W14+22], W0
0x147E	0x9008CE  	MOV	[W14+24], W1
0x1480	0xEB0200  	CLR	W4
0x1482	0x07F9AD  	RCALL	__Divide_32x32
0x1484	0xBE054F  	POP.D	W10
0x1486	0x78064F  	POP	W12
0x1488	0x200302  	MOV	#48, W2
0x148A	0x200003  	MOV	#0, W3
0x148C	0x400002  	ADD	W0, W2, W0
0x148E	0x784D00  	MOV.B	W0, [W10]
0x1490	0x450061  	ADD	W10, #1, W0
0x1492	0x780500  	MOV	W0, W10
0x1494	0x9008DE  	MOV	[W14+26], W1
0x1496	0x47007A  	ADD	W14, #26, W0
0x1498	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,474 :: 		
0x149A	0x470068  	ADD	W14, #8, W0
0x149C	0xE00010  	CP0	[W0]
0x149E	0x3A0004  	BRA NZ	L___Lib_Sprintf__doprntf332
L___Lib_Sprintf__doprntf430:
0x14A0	0x47006E  	ADD	W14, #14, W0
0x14A2	0xA7B010  	BTSC	[W0], #11
0x14A4	0x370001  	BRA	L___Lib_Sprintf__doprntf331
0x14A6	0x37003C  	BRA	L___Lib_Sprintf__doprntf131
L___Lib_Sprintf__doprntf332:
L___Lib_Sprintf__doprntf331:
;__Lib_Sprintf.c,475 :: 		
0x14A8	0xB3C2E0  	MOV.B	#46, W0
0x14AA	0x784D00  	MOV.B	W0, [W10]
0x14AC	0x450061  	ADD	W10, #1, W0
0x14AE	0x780500  	MOV	W0, W10
0x14B0	0x9008DE  	MOV	[W14+26], W1
0x14B2	0x47007A  	ADD	W14, #26, W0
0x14B4	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,476 :: 		
0x14B6	0x47006A  	ADD	W14, #10, W0
0x14B8	0xFB8110  	ZE	[W0], W2
0x14BA	0x4700E8  	ADD	W14, #8, W1
0x14BC	0x470068  	ADD	W14, #8, W0
0x14BE	0x110811  	SUBR	W2, [W1], [W0]
;__Lib_Sprintf.c,477 :: 		
L___Lib_Sprintf__doprntf132:
0x14C0	0x47006A  	ADD	W14, #10, W0
0x14C2	0xE00410  	CP0.B	[W0]
0x14C4	0x32001F  	BRA Z	L___Lib_Sprintf__doprntf133
L___Lib_Sprintf__doprntf431:
;__Lib_Sprintf.c,478 :: 		
0x14C6	0xB3C011  	MOV.B	#1, W1
0x14C8	0x47006A  	ADD	W14, #10, W0
0x14CA	0x10C810  	SUBR.B	W1, [W0], [W0]
0x14CC	0x47006A  	ADD	W14, #10, W0
0x14CE	0xFB8010  	ZE	[W0], W0
0x14D0	0xDD00C2  	SL	W0, #2, W1
0x14D2	0x2AC3E0  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W0
0x14D4	0x400081  	ADD	W0, W1, W1
0x14D6	0xBE0111  	MOV.D	[W1], W2
0x14D8	0x781F8C  	PUSH	W12
0x14DA	0xBE9F8A  	PUSH.D	W10
0x14DC	0x90083E  	MOV	[W14+22], W0
0x14DE	0x9008CE  	MOV	[W14+24], W1
0x14E0	0xEB0200  	CLR	W4
0x14E2	0x07F97D  	RCALL	__Divide_32x32
0x14E4	0x2000A2  	MOV	#10, W2
0x14E6	0x200003  	MOV	#0, W3
0x14E8	0xEB0200  	CLR	W4
0x14EA	0x07F94D  	RCALL	__Modulus_32x32
0x14EC	0xBE054F  	POP.D	W10
0x14EE	0x78064F  	POP	W12
0x14F0	0x200302  	MOV	#48, W2
0x14F2	0x200003  	MOV	#0, W3
0x14F4	0x410000  	ADD	W2, W0, W0
0x14F6	0x784D00  	MOV.B	W0, [W10]
0x14F8	0x450061  	ADD	W10, #1, W0
0x14FA	0x780500  	MOV	W0, W10
0x14FC	0x9008DE  	MOV	[W14+26], W1
0x14FE	0x47007A  	ADD	W14, #26, W0
0x1500	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,479 :: 		
0x1502	0x37FFDE  	BRA	L___Lib_Sprintf__doprntf132
L___Lib_Sprintf__doprntf133:
;__Lib_Sprintf.c,480 :: 		
L___Lib_Sprintf__doprntf134:
0x1504	0x470068  	ADD	W14, #8, W0
0x1506	0xE00010  	CP0	[W0]
0x1508	0x32000B  	BRA Z	L___Lib_Sprintf__doprntf135
L___Lib_Sprintf__doprntf432:
;__Lib_Sprintf.c,481 :: 		
0x150A	0xB3C300  	MOV.B	#48, W0
0x150C	0x784D00  	MOV.B	W0, [W10]
0x150E	0x450061  	ADD	W10, #1, W0
0x1510	0x780500  	MOV	W0, W10
0x1512	0x9008DE  	MOV	[W14+26], W1
0x1514	0x47007A  	ADD	W14, #26, W0
0x1516	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,482 :: 		
0x1518	0x9000CE  	MOV	[W14+8], W1
0x151A	0x470068  	ADD	W14, #8, W0
0x151C	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,483 :: 		
0x151E	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf134
L___Lib_Sprintf__doprntf135:
;__Lib_Sprintf.c,484 :: 		
L___Lib_Sprintf__doprntf131:
;__Lib_Sprintf.c,485 :: 		
0x1520	0x47006E  	ADD	W14, #14, W0
0x1522	0xA65010  	BTSS	[W0], #5
0x1524	0x370008  	BRA	L___Lib_Sprintf__doprntf136
;__Lib_Sprintf.c,486 :: 		
0x1526	0xB3C450  	MOV.B	#69, W0
0x1528	0x784D00  	MOV.B	W0, [W10]
0x152A	0x450061  	ADD	W10, #1, W0
0x152C	0x780500  	MOV	W0, W10
0x152E	0x9008DE  	MOV	[W14+26], W1
0x1530	0x47007A  	ADD	W14, #26, W0
0x1532	0x408861  	ADD	W1, #1, [W0]
0x1534	0x370007  	BRA	L___Lib_Sprintf__doprntf137
L___Lib_Sprintf__doprntf136:
;__Lib_Sprintf.c,488 :: 		
0x1536	0xB3C650  	MOV.B	#101, W0
0x1538	0x784D00  	MOV.B	W0, [W10]
0x153A	0x450061  	ADD	W10, #1, W0
0x153C	0x780500  	MOV	W0, W10
0x153E	0x9008DE  	MOV	[W14+26], W1
0x1540	0x47007A  	ADD	W14, #26, W0
0x1542	0x408861  	ADD	W1, #1, [W0]
L___Lib_Sprintf__doprntf137:
;__Lib_Sprintf.c,489 :: 		
0x1544	0x90082E  	MOV	[W14+20], W0
0x1546	0xE10060  	CP	W0, #0
0x1548	0x3D000B  	BRA GE	L___Lib_Sprintf__doprntf138
L___Lib_Sprintf__doprntf433:
;__Lib_Sprintf.c,490 :: 		
0x154A	0x9008AE  	MOV	[W14+20], W1
0x154C	0x470074  	ADD	W14, #20, W0
0x154E	0x108860  	SUBR	W1, #0, [W0]
;__Lib_Sprintf.c,491 :: 		
0x1550	0xB3C2D0  	MOV.B	#45, W0
0x1552	0x784D00  	MOV.B	W0, [W10]
0x1554	0x450061  	ADD	W10, #1, W0
0x1556	0x780500  	MOV	W0, W10
0x1558	0x9008DE  	MOV	[W14+26], W1
0x155A	0x47007A  	ADD	W14, #26, W0
0x155C	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,492 :: 		
0x155E	0x370007  	BRA	L___Lib_Sprintf__doprntf139
L___Lib_Sprintf__doprntf138:
;__Lib_Sprintf.c,494 :: 		
0x1560	0xB3C2B0  	MOV.B	#43, W0
0x1562	0x784D00  	MOV.B	W0, [W10]
0x1564	0x450061  	ADD	W10, #1, W0
0x1566	0x780500  	MOV	W0, W10
0x1568	0x9008DE  	MOV	[W14+26], W1
0x156A	0x47007A  	ADD	W14, #26, W0
0x156C	0x408861  	ADD	W1, #1, [W0]
L___Lib_Sprintf__doprntf139:
;__Lib_Sprintf.c,495 :: 		
0x156E	0x90082E  	MOV	[W14+20], W0
0x1570	0x2000A2  	MOV	#10, W2
0x1572	0x090011  	REPEAT	#17
0x1574	0xD80002  	DIV.S	W0, W2
0x1576	0x780080  	MOV	W0, W1
0x1578	0x200300  	MOV	#48, W0
0x157A	0x408000  	ADD	W1, W0, W0
0x157C	0x784D00  	MOV.B	W0, [W10]
0x157E	0x450061  	ADD	W10, #1, W0
0x1580	0x780500  	MOV	W0, W10
0x1582	0x9008DE  	MOV	[W14+26], W1
0x1584	0x47007A  	ADD	W14, #26, W0
0x1586	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,496 :: 		
0x1588	0x90082E  	MOV	[W14+20], W0
0x158A	0x2000A2  	MOV	#10, W2
0x158C	0x090011  	REPEAT	#17
0x158E	0xD80002  	DIV.S	W0, W2
0x1590	0x200300  	MOV	#48, W0
0x1592	0x408000  	ADD	W1, W0, W0
0x1594	0x784D00  	MOV.B	W0, [W10]
0x1596	0x450061  	ADD	W10, #1, W0
0x1598	0x780500  	MOV	W0, W10
0x159A	0x9008DE  	MOV	[W14+26], W1
0x159C	0x47007A  	ADD	W14, #26, W0
0x159E	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,497 :: 		
0x15A0	0x47006E  	ADD	W14, #14, W0
0x15A2	0xA63010  	BTSS	[W0], #3
0x15A4	0x37000E  	BRA	L___Lib_Sprintf__doprntf334
0x15A6	0x90006E  	MOV	[W14+12], W0
0x15A8	0xE10060  	CP	W0, #0
0x15AA	0x34000B  	BRA LE	L___Lib_Sprintf__doprntf333
L___Lib_Sprintf__doprntf434:
L___Lib_Sprintf__doprntf307:
;__Lib_Sprintf.c,498 :: 		
L___Lib_Sprintf__doprntf143:
;__Lib_Sprintf.c,499 :: 		
0x15AC	0xB3C200  	MOV.B	#32, W0
0x15AE	0x784D00  	MOV.B	W0, [W10]
0x15B0	0x450061  	ADD	W10, #1, W0
0x15B2	0x780500  	MOV	W0, W10
0x15B4	0x9008DE  	MOV	[W14+26], W1
0x15B6	0x47007A  	ADD	W14, #26, W0
0x15B8	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,500 :: 		
0x15BA	0x90006E  	MOV	[W14+12], W0
0x15BC	0xED2000  	DEC	W0
0x15BE	0x980760  	MOV	W0, [W14+12]
0x15C0	0x3AFFF5  	BRA NZ	L___Lib_Sprintf__doprntf143
L___Lib_Sprintf__doprntf435:
;__Lib_Sprintf.c,497 :: 		
L___Lib_Sprintf__doprntf334:
L___Lib_Sprintf__doprntf333:
;__Lib_Sprintf.c,501 :: 		
0x15C2	0x37FBCD  	BRA	L___Lib_Sprintf__doprntf10
;__Lib_Sprintf.c,502 :: 		
L___Lib_Sprintf__doprntf88:
;__Lib_Sprintf.c,505 :: 		
0x15C4	0x47006E  	ADD	W14, #14, W0
0x15C6	0xA69010  	BTSS	[W0], #9
0x15C8	0x370068  	BRA	L___Lib_Sprintf__doprntf146
;__Lib_Sprintf.c,506 :: 		
0x15CA	0x90082E  	MOV	[W14+20], W0
0x15CC	0xE10060  	CP	W0, #0
0x15CE	0x3D0005  	BRA GE	L___Lib_Sprintf__doprntf147
L___Lib_Sprintf__doprntf436:
;__Lib_Sprintf.c,507 :: 		
0x15D0	0x90082E  	MOV	[W14+20], W0
0x15D2	0x500161  	SUB	W0, #1, W2
0x15D4	0x4700E8  	ADD	W14, #8, W1
0x15D6	0x470068  	ADD	W14, #8, W0
0x15D8	0x110811  	SUBR	W2, [W1], [W0]
L___Lib_Sprintf__doprntf147:
;__Lib_Sprintf.c,508 :: 		
0x15DA	0x781F8C  	PUSH	W12
0x15DC	0xBE9F8A  	PUSH.D	W10
0x15DE	0x90080E  	MOV	[W14+16], W0
0x15E0	0x90089E  	MOV	[W14+18], W1
0x15E2	0x07F932  	RCALL	__Float2Longword
0x15E4	0xBE054F  	POP.D	W10
0x15E6	0x78064F  	POP	W12
0x15E8	0x980F30  	MOV	W0, [W14+22]
0x15EA	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,509 :: 		
0x15EC	0xB3C010  	MOV.B	#1, W0
0x15EE	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf148:
0x15F0	0x90482E  	MOV.B	[W14+10], W0
0x15F2	0xE1046A  	CP.B	W0, #10
0x15F4	0x320010  	BRA Z	L___Lib_Sprintf__doprntf149
L___Lib_Sprintf__doprntf437:
;__Lib_Sprintf.c,510 :: 		
0x15F6	0x47006A  	ADD	W14, #10, W0
0x15F8	0xFB8010  	ZE	[W0], W0
0x15FA	0xDD00C2  	SL	W0, #2, W1
0x15FC	0x2AC3E0  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W0
0x15FE	0x400181  	ADD	W0, W1, W3
0x1600	0x7800B3  	MOV	[W3++], W1
0x1602	0x780123  	MOV	[W3--], W2
0x1604	0x470076  	ADD	W14, #22, W0
0x1606	0xE10830  	CP	W1, [W0++]
0x1608	0xE19020  	CPB	W2, [W0--]
0x160A	0x360001  	BRA LEU	L___Lib_Sprintf__doprntf151
L___Lib_Sprintf__doprntf438:
;__Lib_Sprintf.c,511 :: 		
0x160C	0x370004  	BRA	L___Lib_Sprintf__doprntf149
L___Lib_Sprintf__doprntf151:
;__Lib_Sprintf.c,509 :: 		
0x160E	0xB3C011  	MOV.B	#1, W1
0x1610	0x47006A  	ADD	W14, #10, W0
0x1612	0x40C810  	ADD.B	W1, [W0], [W0]
;__Lib_Sprintf.c,511 :: 		
0x1614	0x37FFED  	BRA	L___Lib_Sprintf__doprntf148
L___Lib_Sprintf__doprntf149:
;__Lib_Sprintf.c,512 :: 		
0x1616	0x47006A  	ADD	W14, #10, W0
0x1618	0xFB8090  	ZE	[W0], W1
0x161A	0x470068  	ADD	W14, #8, W0
0x161C	0x108010  	SUBR	W1, [W0], W0
0x161E	0x981720  	MOV	W0, [W14+36]
0x1620	0x980740  	MOV	W0, [W14+8]
;__Lib_Sprintf.c,513 :: 		
0x1622	0x781F8C  	PUSH	W12
0x1624	0xBE9F8A  	PUSH.D	W10
0x1626	0x90083E  	MOV	[W14+22], W0
0x1628	0x9008CE  	MOV	[W14+24], W1
0x162A	0x07F967  	RCALL	__Long2Float
0x162C	0x980F60  	MOV	W0, [W14+28]
0x162E	0x980F71  	MOV	W1, [W14+30]
0x1630	0x90080E  	MOV	[W14+16], W0
0x1632	0x90089E  	MOV	[W14+18], W1
0x1634	0x90096E  	MOV	[W14+28], W2
0x1636	0x9009FE  	MOV	[W14+30], W3
0x1638	0x07F949  	RCALL	__Sub_FP
0x163A	0x90112E  	MOV	[W14+36], W2
0x163C	0x981720  	MOV	W0, [W14+36]
0x163E	0x981731  	MOV	W1, [W14+38]
0x1640	0x784502  	MOV.B	W2, W10
0x1642	0x07FA14  	RCALL	__Lib_Sprintf_scale
0x1644	0x90112E  	MOV	[W14+36], W2
0x1646	0x9011BE  	MOV	[W14+38], W3
0x1648	0x07F635  	RCALL	__Mul_FP
0x164A	0x200002  	MOV	#0, W2
0x164C	0x23F003  	MOV	#16128, W3
0x164E	0x07F6BF  	RCALL	__AddSub_FP
0x1650	0x07F8FB  	RCALL	__Float2Longword
0x1652	0xBE054F  	POP.D	W10
0x1654	0x78064F  	POP	W12
0x1656	0x980F30  	MOV	W0, [W14+22]
0x1658	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,514 :: 		
L___Lib_Sprintf__doprntf152:
0x165A	0x470068  	ADD	W14, #8, W0
0x165C	0xE00010  	CP0	[W0]
0x165E	0x32001D  	BRA Z	L___Lib_Sprintf__doprntf336
L___Lib_Sprintf__doprntf439:
0x1660	0x781F8C  	PUSH	W12
0x1662	0xBE9F8A  	PUSH.D	W10
0x1664	0x2000A2  	MOV	#10, W2
0x1666	0x200003  	MOV	#0, W3
0x1668	0x90083E  	MOV	[W14+22], W0
0x166A	0x9008CE  	MOV	[W14+24], W1
0x166C	0xEB0200  	CLR	W4
0x166E	0x07F88B  	RCALL	__Modulus_32x32
0x1670	0xBE054F  	POP.D	W10
0x1672	0x78064F  	POP	W12
0x1674	0xE10060  	CP	W0, #0
0x1676	0xE18860  	CPB	W1, #0
0x1678	0x3A0010  	BRA NZ	L___Lib_Sprintf__doprntf335
L___Lib_Sprintf__doprntf440:
L___Lib_Sprintf__doprntf306:
;__Lib_Sprintf.c,515 :: 		
0x167A	0x781F8C  	PUSH	W12
0x167C	0xBE9F8A  	PUSH.D	W10
0x167E	0x2000A2  	MOV	#10, W2
0x1680	0x200003  	MOV	#0, W3
0x1682	0x90083E  	MOV	[W14+22], W0
0x1684	0x9008CE  	MOV	[W14+24], W1
0x1686	0xEB0200  	CLR	W4
0x1688	0x07F8AA  	RCALL	__Divide_32x32
0x168A	0xBE054F  	POP.D	W10
0x168C	0x78064F  	POP	W12
0x168E	0x980F30  	MOV	W0, [W14+22]
0x1690	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,516 :: 		
0x1692	0x9000CE  	MOV	[W14+8], W1
0x1694	0x470068  	ADD	W14, #8, W0
0x1696	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,517 :: 		
0x1698	0x37FFE0  	BRA	L___Lib_Sprintf__doprntf152
;__Lib_Sprintf.c,514 :: 		
L___Lib_Sprintf__doprntf336:
L___Lib_Sprintf__doprntf335:
;__Lib_Sprintf.c,518 :: 		
L___Lib_Sprintf__doprntf146:
;__Lib_Sprintf.c,519 :: 		
0x169A	0x90004E  	MOV	[W14+8], W0
0x169C	0xE1006C  	CP	W0, #12
0x169E	0x3C000B  	BRA GT	L___Lib_Sprintf__doprntf156
L___Lib_Sprintf__doprntf441:
;__Lib_Sprintf.c,520 :: 		
0x16A0	0x781F8C  	PUSH	W12
0x16A2	0xBE9F8A  	PUSH.D	W10
0x16A4	0x904D0E  	MOV.B	[W14+8], W10
0x16A6	0x07F984  	RCALL	__Lib_Sprintf_fround
0x16A8	0x90090E  	MOV	[W14+16], W2
0x16AA	0x90099E  	MOV	[W14+18], W3
0x16AC	0x07F690  	RCALL	__AddSub_FP
0x16AE	0xBE054F  	POP.D	W10
0x16B0	0x78064F  	POP	W12
0x16B2	0x980F00  	MOV	W0, [W14+16]
0x16B4	0x980F11  	MOV	W1, [W14+18]
L___Lib_Sprintf__doprntf156:
;__Lib_Sprintf.c,523 :: 		
0x16B6	0x781F8C  	PUSH	W12
0x16B8	0xBE9F8A  	PUSH.D	W10
0x16BA	0x90080E  	MOV	[W14+16], W0
0x16BC	0x90089E  	MOV	[W14+18], W1
0x16BE	0xEF2004  	CLR	W2
0x16C0	0xEF2006  	CLR	W3
0x16C2	0x07F909  	RCALL	__Compare_Le_Fp
0x16C4	0xE00000  	CP0	W0
0x16C6	0xEF6000  	CLR.B	W0
0x16C8	0x320001  	BRA Z	L___Lib_Sprintf__doprntf442
0x16CA	0xEC6000  	INC.B	W0
L___Lib_Sprintf__doprntf442:
0x16CC	0xBE054F  	POP.D	W10
0x16CE	0x78064F  	POP	W12
0x16D0	0xE24000  	CP0.B	W0
0x16D2	0x320039  	BRA Z	L___Lib_Sprintf__doprntf339
L___Lib_Sprintf__doprntf443:
0x16D4	0x781F8C  	PUSH	W12
0x16D6	0xBE9F8A  	PUSH.D	W10
0x16D8	0x90080E  	MOV	[W14+16], W0
0x16DA	0x90089E  	MOV	[W14+18], W1
0x16DC	0x07F8B5  	RCALL	__Float2Longword
0x16DE	0xBE054F  	POP.D	W10
0x16E0	0x78064F  	POP	W12
0x16E2	0xE10060  	CP	W0, #0
0x16E4	0xE18860  	CPB	W1, #0
0x16E6	0x3A002F  	BRA NZ	L___Lib_Sprintf__doprntf338
L___Lib_Sprintf__doprntf444:
0x16E8	0x90082E  	MOV	[W14+20], W0
0x16EA	0xE10061  	CP	W0, #1
0x16EC	0x34002C  	BRA LE	L___Lib_Sprintf__doprntf337
L___Lib_Sprintf__doprntf445:
L___Lib_Sprintf__doprntf305:
;__Lib_Sprintf.c,526 :: 		
0x16EE	0x781F8C  	PUSH	W12
0x16F0	0xBE9F8A  	PUSH.D	W10
0x16F2	0x90554E  	MOV.B	[W14+20], W10
0x16F4	0x07F9BB  	RCALL	__Lib_Sprintf_scale
0x16F6	0xBE0100  	MOV.D	W0, W2
0x16F8	0x90080E  	MOV	[W14+16], W0
0x16FA	0x90089E  	MOV	[W14+18], W1
0x16FC	0x07F71E  	RCALL	__Div_FP
0x16FE	0x2705F2  	MOV	#28767, W2
0x1700	0x240893  	MOV	#16521, W3
0x1702	0x07F8E9  	RCALL	__Compare_Le_Fp
0x1704	0xE00000  	CP0	W0
0x1706	0xEF6000  	CLR.B	W0
0x1708	0x3D0001  	BRA GE	L___Lib_Sprintf__doprntf446
0x170A	0xEC6000  	INC.B	W0
L___Lib_Sprintf__doprntf446:
0x170C	0xBE054F  	POP.D	W10
0x170E	0x78064F  	POP	W12
0x1710	0xE24000  	CP0.B	W0
0x1712	0x320004  	BRA Z	L___Lib_Sprintf__doprntf160
L___Lib_Sprintf__doprntf447:
;__Lib_Sprintf.c,527 :: 		
0x1714	0x200091  	MOV	#9, W1
0x1716	0x470074  	ADD	W14, #20, W0
0x1718	0x108810  	SUBR	W1, [W0], [W0]
0x171A	0x370003  	BRA	L___Lib_Sprintf__doprntf161
L___Lib_Sprintf__doprntf160:
;__Lib_Sprintf.c,529 :: 		
0x171C	0x200081  	MOV	#8, W1
0x171E	0x470074  	ADD	W14, #20, W0
0x1720	0x108810  	SUBR	W1, [W0], [W0]
L___Lib_Sprintf__doprntf161:
;__Lib_Sprintf.c,530 :: 		
0x1722	0x781F8C  	PUSH	W12
0x1724	0xBE9F8A  	PUSH.D	W10
0x1726	0x90554E  	MOV.B	[W14+20], W10
0x1728	0x07F9A1  	RCALL	__Lib_Sprintf_scale
0x172A	0xBE0100  	MOV.D	W0, W2
0x172C	0x90080E  	MOV	[W14+16], W0
0x172E	0x90089E  	MOV	[W14+18], W1
0x1730	0x07F704  	RCALL	__Div_FP
0x1732	0x07F88A  	RCALL	__Float2Longword
0x1734	0xBE054F  	POP.D	W10
0x1736	0x78064F  	POP	W12
0x1738	0x980F30  	MOV	W0, [W14+22]
0x173A	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,531 :: 		
0x173C	0xEF2000  	CLR	W0
0x173E	0xEF2002  	CLR	W1
0x1740	0x980F00  	MOV	W0, [W14+16]
0x1742	0x980F11  	MOV	W1, [W14+18]
;__Lib_Sprintf.c,532 :: 		
0x1744	0x370017  	BRA	L___Lib_Sprintf__doprntf162
;__Lib_Sprintf.c,523 :: 		
L___Lib_Sprintf__doprntf339:
L___Lib_Sprintf__doprntf338:
L___Lib_Sprintf__doprntf337:
;__Lib_Sprintf.c,534 :: 		
0x1746	0x781F8C  	PUSH	W12
0x1748	0xBE9F8A  	PUSH.D	W10
0x174A	0x90080E  	MOV	[W14+16], W0
0x174C	0x90089E  	MOV	[W14+18], W1
0x174E	0x07F87C  	RCALL	__Float2Longword
0x1750	0x980F30  	MOV	W0, [W14+22]
0x1752	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,535 :: 		
0x1754	0x90083E  	MOV	[W14+22], W0
0x1756	0x9008CE  	MOV	[W14+24], W1
0x1758	0x07F8D0  	RCALL	__Long2Float
0x175A	0x980F60  	MOV	W0, [W14+28]
0x175C	0x980F71  	MOV	W1, [W14+30]
0x175E	0x90080E  	MOV	[W14+16], W0
0x1760	0x90089E  	MOV	[W14+18], W1
0x1762	0x90096E  	MOV	[W14+28], W2
0x1764	0x9009FE  	MOV	[W14+30], W3
0x1766	0x07F8B2  	RCALL	__Sub_FP
0x1768	0xBE054F  	POP.D	W10
0x176A	0x78064F  	POP	W12
0x176C	0x980F00  	MOV	W0, [W14+16]
0x176E	0x980F11  	MOV	W1, [W14+18]
;__Lib_Sprintf.c,536 :: 		
0x1770	0xEF2000  	CLR	W0
0x1772	0x980F20  	MOV	W0, [W14+20]
;__Lib_Sprintf.c,537 :: 		
L___Lib_Sprintf__doprntf162:
;__Lib_Sprintf.c,538 :: 		
0x1774	0xB3C010  	MOV.B	#1, W0
0x1776	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf163:
0x1778	0x90482E  	MOV.B	[W14+10], W0
0x177A	0xE1046A  	CP.B	W0, #10
0x177C	0x320010  	BRA Z	L___Lib_Sprintf__doprntf164
L___Lib_Sprintf__doprntf448:
;__Lib_Sprintf.c,539 :: 		
0x177E	0x47006A  	ADD	W14, #10, W0
0x1780	0xFB8010  	ZE	[W0], W0
0x1782	0xDD00C2  	SL	W0, #2, W1
0x1784	0x2AC3E0  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W0
0x1786	0x400181  	ADD	W0, W1, W3
0x1788	0x7800B3  	MOV	[W3++], W1
0x178A	0x780123  	MOV	[W3--], W2
0x178C	0x470076  	ADD	W14, #22, W0
0x178E	0xE10830  	CP	W1, [W0++]
0x1790	0xE19020  	CPB	W2, [W0--]
0x1792	0x360001  	BRA LEU	L___Lib_Sprintf__doprntf166
L___Lib_Sprintf__doprntf449:
;__Lib_Sprintf.c,540 :: 		
0x1794	0x370004  	BRA	L___Lib_Sprintf__doprntf164
L___Lib_Sprintf__doprntf166:
;__Lib_Sprintf.c,538 :: 		
0x1796	0xB3C011  	MOV.B	#1, W1
0x1798	0x47006A  	ADD	W14, #10, W0
0x179A	0x40C810  	ADD.B	W1, [W0], [W0]
;__Lib_Sprintf.c,540 :: 		
0x179C	0x37FFED  	BRA	L___Lib_Sprintf__doprntf163
L___Lib_Sprintf__doprntf164:
;__Lib_Sprintf.c,541 :: 		
0x179E	0x47006A  	ADD	W14, #10, W0
0x17A0	0xFB8090  	ZE	[W0], W1
0x17A2	0x470068  	ADD	W14, #8, W0
0x17A4	0x408090  	ADD	W1, [W0], W1
0x17A6	0x470074  	ADD	W14, #20, W0
0x17A8	0x408110  	ADD	W1, [W0], W2
0x17AA	0x4700EC  	ADD	W14, #12, W1
0x17AC	0x47006C  	ADD	W14, #12, W0
0x17AE	0x110811  	SUBR	W2, [W1], [W0]
;__Lib_Sprintf.c,542 :: 		
0x17B0	0x47006E  	ADD	W14, #14, W0
0x17B2	0xA7B010  	BTSC	[W0], #11
0x17B4	0x370004  	BRA	L___Lib_Sprintf__doprntf341
0x17B6	0x470068  	ADD	W14, #8, W0
0x17B8	0xE00010  	CP0	[W0]
0x17BA	0x3A0001  	BRA NZ	L___Lib_Sprintf__doprntf340
L___Lib_Sprintf__doprntf450:
0x17BC	0x370003  	BRA	L___Lib_Sprintf__doprntf169
L___Lib_Sprintf__doprntf341:
L___Lib_Sprintf__doprntf340:
;__Lib_Sprintf.c,543 :: 		
0x17BE	0x9000EE  	MOV	[W14+12], W1
0x17C0	0x47006C  	ADD	W14, #12, W0
0x17C2	0x508861  	SUB	W1, #1, [W0]
L___Lib_Sprintf__doprntf169:
;__Lib_Sprintf.c,544 :: 		
0x17C4	0x90007E  	MOV	[W14+14], W0
0x17C6	0x600063  	AND	W0, #3, W0
0x17C8	0xE20000  	CP0	W0
0x17CA	0x320003  	BRA Z	L___Lib_Sprintf__doprntf170
L___Lib_Sprintf__doprntf451:
;__Lib_Sprintf.c,545 :: 		
0x17CC	0x9000EE  	MOV	[W14+12], W1
0x17CE	0x47006C  	ADD	W14, #12, W0
0x17D0	0x508861  	SUB	W1, #1, [W0]
L___Lib_Sprintf__doprntf170:
;__Lib_Sprintf.c,546 :: 		
0x17D2	0x47006E  	ADD	W14, #14, W0
0x17D4	0xA62010  	BTSS	[W0], #2
0x17D6	0x37002C  	BRA	L___Lib_Sprintf__doprntf171
;__Lib_Sprintf.c,547 :: 		
0x17D8	0x47006E  	ADD	W14, #14, W0
0x17DA	0xA61010  	BTSS	[W0], #1
0x17DC	0x370010  	BRA	L___Lib_Sprintf__doprntf172
;__Lib_Sprintf.c,548 :: 		
0x17DE	0x47006E  	ADD	W14, #14, W0
0x17E0	0xA60010  	BTSS	[W0], #0
0x17E2	0x370003  	BRA	L___Lib_Sprintf__doprntf173
0x17E4	0xB3C2D0  	MOV.B	#45, W0
0x17E6	0x984720  	MOV.B	W0, [W14+2]
0x17E8	0x370002  	BRA	L___Lib_Sprintf__doprntf174
L___Lib_Sprintf__doprntf173:
0x17EA	0xB3C2B0  	MOV.B	#43, W0
0x17EC	0x984720  	MOV.B	W0, [W14+2]
L___Lib_Sprintf__doprntf174:
0x17EE	0x90402E  	MOV.B	[W14+2], W0
0x17F0	0x784D00  	MOV.B	W0, [W10]
0x17F2	0x450061  	ADD	W10, #1, W0
0x17F4	0x780500  	MOV	W0, W10
0x17F6	0x9008DE  	MOV	[W14+26], W1
0x17F8	0x47007A  	ADD	W14, #26, W0
0x17FA	0x408861  	ADD	W1, #1, [W0]
0x17FC	0x37000A  	BRA	L___Lib_Sprintf__doprntf175
L___Lib_Sprintf__doprntf172:
;__Lib_Sprintf.c,550 :: 		
0x17FE	0x47006E  	ADD	W14, #14, W0
0x1800	0xA60010  	BTSS	[W0], #0
0x1802	0x370007  	BRA	L___Lib_Sprintf__doprntf176
;__Lib_Sprintf.c,551 :: 		
0x1804	0xB3C200  	MOV.B	#32, W0
0x1806	0x784D00  	MOV.B	W0, [W10]
0x1808	0x450061  	ADD	W10, #1, W0
0x180A	0x780500  	MOV	W0, W10
0x180C	0x9008DE  	MOV	[W14+26], W1
0x180E	0x47007A  	ADD	W14, #26, W0
0x1810	0x408861  	ADD	W1, #1, [W0]
L___Lib_Sprintf__doprntf176:
L___Lib_Sprintf__doprntf175:
;__Lib_Sprintf.c,552 :: 		
L___Lib_Sprintf__doprntf177:
0x1812	0x90006E  	MOV	[W14+12], W0
0x1814	0xE10060  	CP	W0, #0
0x1816	0x34000B  	BRA LE	L___Lib_Sprintf__doprntf178
L___Lib_Sprintf__doprntf452:
;__Lib_Sprintf.c,553 :: 		
0x1818	0xB3C300  	MOV.B	#48, W0
0x181A	0x784D00  	MOV.B	W0, [W10]
0x181C	0x450061  	ADD	W10, #1, W0
0x181E	0x780500  	MOV	W0, W10
0x1820	0x9008DE  	MOV	[W14+26], W1
0x1822	0x47007A  	ADD	W14, #26, W0
0x1824	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,554 :: 		
0x1826	0x9000EE  	MOV	[W14+12], W1
0x1828	0x47006C  	ADD	W14, #12, W0
0x182A	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,555 :: 		
0x182C	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf177
L___Lib_Sprintf__doprntf178:
;__Lib_Sprintf.c,556 :: 		
0x182E	0x37002E  	BRA	L___Lib_Sprintf__doprntf179
L___Lib_Sprintf__doprntf171:
;__Lib_Sprintf.c,558 :: 		
0x1830	0x47006E  	ADD	W14, #14, W0
0x1832	0xA73010  	BTSC	[W0], #3
0x1834	0x37000E  	BRA	L___Lib_Sprintf__doprntf180
;__Lib_Sprintf.c,559 :: 		
L___Lib_Sprintf__doprntf181:
0x1836	0x90006E  	MOV	[W14+12], W0
0x1838	0xE10060  	CP	W0, #0
0x183A	0x34000B  	BRA LE	L___Lib_Sprintf__doprntf182
L___Lib_Sprintf__doprntf453:
;__Lib_Sprintf.c,560 :: 		
0x183C	0xB3C200  	MOV.B	#32, W0
0x183E	0x784D00  	MOV.B	W0, [W10]
0x1840	0x450061  	ADD	W10, #1, W0
0x1842	0x780500  	MOV	W0, W10
0x1844	0x9008DE  	MOV	[W14+26], W1
0x1846	0x47007A  	ADD	W14, #26, W0
0x1848	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,561 :: 		
0x184A	0x9000EE  	MOV	[W14+12], W1
0x184C	0x47006C  	ADD	W14, #12, W0
0x184E	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,562 :: 		
0x1850	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf181
L___Lib_Sprintf__doprntf182:
L___Lib_Sprintf__doprntf180:
;__Lib_Sprintf.c,563 :: 		
0x1852	0x47006E  	ADD	W14, #14, W0
0x1854	0xA61010  	BTSS	[W0], #1
0x1856	0x370010  	BRA	L___Lib_Sprintf__doprntf183
;__Lib_Sprintf.c,564 :: 		
0x1858	0x47006E  	ADD	W14, #14, W0
0x185A	0xA60010  	BTSS	[W0], #0
0x185C	0x370003  	BRA	L___Lib_Sprintf__doprntf184
0x185E	0xB3C2D0  	MOV.B	#45, W0
0x1860	0x984730  	MOV.B	W0, [W14+3]
0x1862	0x370002  	BRA	L___Lib_Sprintf__doprntf185
L___Lib_Sprintf__doprntf184:
0x1864	0xB3C2B0  	MOV.B	#43, W0
0x1866	0x984730  	MOV.B	W0, [W14+3]
L___Lib_Sprintf__doprntf185:
0x1868	0x90403E  	MOV.B	[W14+3], W0
0x186A	0x784D00  	MOV.B	W0, [W10]
0x186C	0x450061  	ADD	W10, #1, W0
0x186E	0x780500  	MOV	W0, W10
0x1870	0x9008DE  	MOV	[W14+26], W1
0x1872	0x47007A  	ADD	W14, #26, W0
0x1874	0x408861  	ADD	W1, #1, [W0]
0x1876	0x37000A  	BRA	L___Lib_Sprintf__doprntf186
L___Lib_Sprintf__doprntf183:
;__Lib_Sprintf.c,566 :: 		
0x1878	0x47006E  	ADD	W14, #14, W0
0x187A	0xA60010  	BTSS	[W0], #0
0x187C	0x370007  	BRA	L___Lib_Sprintf__doprntf187
;__Lib_Sprintf.c,567 :: 		
0x187E	0xB3C200  	MOV.B	#32, W0
0x1880	0x784D00  	MOV.B	W0, [W10]
0x1882	0x450061  	ADD	W10, #1, W0
0x1884	0x780500  	MOV	W0, W10
0x1886	0x9008DE  	MOV	[W14+26], W1
0x1888	0x47007A  	ADD	W14, #26, W0
0x188A	0x408861  	ADD	W1, #1, [W0]
L___Lib_Sprintf__doprntf187:
L___Lib_Sprintf__doprntf186:
;__Lib_Sprintf.c,568 :: 		
L___Lib_Sprintf__doprntf179:
;__Lib_Sprintf.c,569 :: 		
L___Lib_Sprintf__doprntf188:
0x188C	0x90492E  	MOV.B	[W14+10], W2
0x188E	0xB3C011  	MOV.B	#1, W1
0x1890	0x47006A  	ADD	W14, #10, W0
0x1892	0x10C810  	SUBR.B	W1, [W0], [W0]
0x1894	0xE24004  	CP0.B	W2
0x1896	0x32001C  	BRA Z	L___Lib_Sprintf__doprntf189
L___Lib_Sprintf__doprntf454:
;__Lib_Sprintf.c,570 :: 		
0x1898	0x47006A  	ADD	W14, #10, W0
0x189A	0xFB8010  	ZE	[W0], W0
0x189C	0xDD00C2  	SL	W0, #2, W1
0x189E	0x2AC3E0  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W0
0x18A0	0x400081  	ADD	W0, W1, W1
0x18A2	0xBE0111  	MOV.D	[W1], W2
0x18A4	0x781F8C  	PUSH	W12
0x18A6	0xBE9F8A  	PUSH.D	W10
0x18A8	0x90083E  	MOV	[W14+22], W0
0x18AA	0x9008CE  	MOV	[W14+24], W1
0x18AC	0xEB0200  	CLR	W4
0x18AE	0x07F797  	RCALL	__Divide_32x32
0x18B0	0x2000A2  	MOV	#10, W2
0x18B2	0x200003  	MOV	#0, W3
0x18B4	0xEB0200  	CLR	W4
0x18B6	0x07F767  	RCALL	__Modulus_32x32
0x18B8	0xBE054F  	POP.D	W10
0x18BA	0x78064F  	POP	W12
0x18BC	0x200302  	MOV	#48, W2
0x18BE	0x200003  	MOV	#0, W3
0x18C0	0x410000  	ADD	W2, W0, W0
0x18C2	0x784D00  	MOV.B	W0, [W10]
0x18C4	0x450061  	ADD	W10, #1, W0
0x18C6	0x780500  	MOV	W0, W10
0x18C8	0x9008DE  	MOV	[W14+26], W1
0x18CA	0x47007A  	ADD	W14, #26, W0
0x18CC	0x408861  	ADD	W1, #1, [W0]
0x18CE	0x37FFDE  	BRA	L___Lib_Sprintf__doprntf188
L___Lib_Sprintf__doprntf189:
;__Lib_Sprintf.c,571 :: 		
L___Lib_Sprintf__doprntf190:
0x18D0	0x90082E  	MOV	[W14+20], W0
0x18D2	0xE10060  	CP	W0, #0
0x18D4	0x34000B  	BRA LE	L___Lib_Sprintf__doprntf191
L___Lib_Sprintf__doprntf455:
;__Lib_Sprintf.c,572 :: 		
0x18D6	0xB3C300  	MOV.B	#48, W0
0x18D8	0x784D00  	MOV.B	W0, [W10]
0x18DA	0x450061  	ADD	W10, #1, W0
0x18DC	0x780500  	MOV	W0, W10
0x18DE	0x9008DE  	MOV	[W14+26], W1
0x18E0	0x47007A  	ADD	W14, #26, W0
0x18E2	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,573 :: 		
0x18E4	0x200011  	MOV	#1, W1
0x18E6	0x470074  	ADD	W14, #20, W0
0x18E8	0x108810  	SUBR	W1, [W0], [W0]
;__Lib_Sprintf.c,574 :: 		
0x18EA	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf190
L___Lib_Sprintf__doprntf191:
;__Lib_Sprintf.c,575 :: 		
0x18EC	0x90004E  	MOV	[W14+8], W0
0x18EE	0xE10068  	CP	W0, #8
0x18F0	0x340003  	BRA LE	L___Lib_Sprintf__doprntf192
L___Lib_Sprintf__doprntf456:
;__Lib_Sprintf.c,576 :: 		
0x18F2	0xB3C080  	MOV.B	#8, W0
0x18F4	0x984F20  	MOV.B	W0, [W14+10]
0x18F6	0x370002  	BRA	L___Lib_Sprintf__doprntf193
L___Lib_Sprintf__doprntf192:
;__Lib_Sprintf.c,578 :: 		
0x18F8	0x90480E  	MOV.B	[W14+8], W0
0x18FA	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf193:
;__Lib_Sprintf.c,579 :: 		
0x18FC	0x47006A  	ADD	W14, #10, W0
0x18FE	0xFB8110  	ZE	[W0], W2
0x1900	0x4700E8  	ADD	W14, #8, W1
0x1902	0x470068  	ADD	W14, #8, W0
0x1904	0x110811  	SUBR	W2, [W1], [W0]
;__Lib_Sprintf.c,580 :: 		
0x1906	0x47006A  	ADD	W14, #10, W0
0x1908	0xE00410  	CP0.B	[W0]
0x190A	0x3A0004  	BRA NZ	L___Lib_Sprintf__doprntf343
L___Lib_Sprintf__doprntf457:
0x190C	0x47006E  	ADD	W14, #14, W0
0x190E	0xA7B010  	BTSC	[W0], #11
0x1910	0x370001  	BRA	L___Lib_Sprintf__doprntf342
0x1912	0x370007  	BRA	L___Lib_Sprintf__doprntf196
L___Lib_Sprintf__doprntf343:
L___Lib_Sprintf__doprntf342:
;__Lib_Sprintf.c,581 :: 		
0x1914	0xB3C2E0  	MOV.B	#46, W0
0x1916	0x784D00  	MOV.B	W0, [W10]
0x1918	0x450061  	ADD	W10, #1, W0
0x191A	0x780500  	MOV	W0, W10
0x191C	0x9008DE  	MOV	[W14+26], W1
0x191E	0x47007A  	ADD	W14, #26, W0
0x1920	0x408861  	ADD	W1, #1, [W0]
L___Lib_Sprintf__doprntf196:
;__Lib_Sprintf.c,583 :: 		
0x1922	0x781F8C  	PUSH	W12
0x1924	0xBE9F8A  	PUSH.D	W10
0x1926	0x904D2E  	MOV.B	[W14+10], W10
0x1928	0x07F8A1  	RCALL	__Lib_Sprintf_scale
0x192A	0x90090E  	MOV	[W14+16], W2
0x192C	0x90099E  	MOV	[W14+18], W3
0x192E	0x07F4C2  	RCALL	__Mul_FP
0x1930	0x07F6EE  	RCALL	__Float2Longint
0x1932	0xBE054F  	POP.D	W10
0x1934	0x78064F  	POP	W12
0x1936	0x980F30  	MOV	W0, [W14+22]
0x1938	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,584 :: 		
L___Lib_Sprintf__doprntf197:
0x193A	0x47006A  	ADD	W14, #10, W0
0x193C	0xE00410  	CP0.B	[W0]
0x193E	0x32001F  	BRA Z	L___Lib_Sprintf__doprntf198
L___Lib_Sprintf__doprntf458:
;__Lib_Sprintf.c,585 :: 		
0x1940	0xB3C011  	MOV.B	#1, W1
0x1942	0x47006A  	ADD	W14, #10, W0
0x1944	0x10C810  	SUBR.B	W1, [W0], [W0]
0x1946	0x47006A  	ADD	W14, #10, W0
0x1948	0xFB8010  	ZE	[W0], W0
0x194A	0xDD00C2  	SL	W0, #2, W1
0x194C	0x2AC3E0  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W0
0x194E	0x400081  	ADD	W0, W1, W1
0x1950	0xBE0111  	MOV.D	[W1], W2
0x1952	0x781F8C  	PUSH	W12
0x1954	0xBE9F8A  	PUSH.D	W10
0x1956	0x90083E  	MOV	[W14+22], W0
0x1958	0x9008CE  	MOV	[W14+24], W1
0x195A	0xEB0200  	CLR	W4
0x195C	0x07F740  	RCALL	__Divide_32x32
0x195E	0x2000A2  	MOV	#10, W2
0x1960	0x200003  	MOV	#0, W3
0x1962	0xEB0200  	CLR	W4
0x1964	0x07F710  	RCALL	__Modulus_32x32
0x1966	0xBE054F  	POP.D	W10
0x1968	0x78064F  	POP	W12
0x196A	0x200302  	MOV	#48, W2
0x196C	0x200003  	MOV	#0, W3
0x196E	0x410000  	ADD	W2, W0, W0
0x1970	0x784D00  	MOV.B	W0, [W10]
0x1972	0x450061  	ADD	W10, #1, W0
0x1974	0x780500  	MOV	W0, W10
0x1976	0x9008DE  	MOV	[W14+26], W1
0x1978	0x47007A  	ADD	W14, #26, W0
0x197A	0x408861  	ADD	W1, #1, [W0]
0x197C	0x37FFDE  	BRA	L___Lib_Sprintf__doprntf197
L___Lib_Sprintf__doprntf198:
;__Lib_Sprintf.c,587 :: 		
L___Lib_Sprintf__doprntf199:
0x197E	0x470068  	ADD	W14, #8, W0
0x1980	0xE00010  	CP0	[W0]
0x1982	0x32000B  	BRA Z	L___Lib_Sprintf__doprntf200
L___Lib_Sprintf__doprntf459:
;__Lib_Sprintf.c,588 :: 		
0x1984	0xB3C300  	MOV.B	#48, W0
0x1986	0x784D00  	MOV.B	W0, [W10]
0x1988	0x450061  	ADD	W10, #1, W0
0x198A	0x780500  	MOV	W0, W10
0x198C	0x9008DE  	MOV	[W14+26], W1
0x198E	0x47007A  	ADD	W14, #26, W0
0x1990	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,589 :: 		
0x1992	0x9000CE  	MOV	[W14+8], W1
0x1994	0x470068  	ADD	W14, #8, W0
0x1996	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,590 :: 		
0x1998	0x37FFF2  	BRA	L___Lib_Sprintf__doprntf199
L___Lib_Sprintf__doprntf200:
;__Lib_Sprintf.c,591 :: 		
0x199A	0x47006E  	ADD	W14, #14, W0
0x199C	0xA63010  	BTSS	[W0], #3
0x199E	0x37000E  	BRA	L___Lib_Sprintf__doprntf345
0x19A0	0x90006E  	MOV	[W14+12], W0
0x19A2	0xE10060  	CP	W0, #0
0x19A4	0x34000B  	BRA LE	L___Lib_Sprintf__doprntf344
L___Lib_Sprintf__doprntf460:
L___Lib_Sprintf__doprntf302:
;__Lib_Sprintf.c,592 :: 		
L___Lib_Sprintf__doprntf204:
;__Lib_Sprintf.c,593 :: 		
0x19A6	0xB3C200  	MOV.B	#32, W0
0x19A8	0x784D00  	MOV.B	W0, [W10]
0x19AA	0x450061  	ADD	W10, #1, W0
0x19AC	0x780500  	MOV	W0, W10
0x19AE	0x9008DE  	MOV	[W14+26], W1
0x19B0	0x47007A  	ADD	W14, #26, W0
0x19B2	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,594 :: 		
0x19B4	0x90006E  	MOV	[W14+12], W0
0x19B6	0xED2000  	DEC	W0
0x19B8	0x980760  	MOV	W0, [W14+12]
0x19BA	0x3AFFF5  	BRA NZ	L___Lib_Sprintf__doprntf204
L___Lib_Sprintf__doprntf461:
;__Lib_Sprintf.c,591 :: 		
L___Lib_Sprintf__doprntf345:
L___Lib_Sprintf__doprntf344:
;__Lib_Sprintf.c,595 :: 		
0x19BC	0x37F9D0  	BRA	L___Lib_Sprintf__doprntf10
;__Lib_Sprintf.c,596 :: 		
L___Lib_Sprintf__doprntf72:
;__Lib_Sprintf.c,598 :: 		
0x19BE	0x200C01  	MOV	#192, W1
0x19C0	0x47006E  	ADD	W14, #14, W0
0x19C2	0x608010  	AND	W1, [W0], W0
0x19C4	0xE10060  	CP	W0, #0
0x19C6	0x3A0024  	BRA NZ	L___Lib_Sprintf__doprntf207
L___Lib_Sprintf__doprntf462:
;__Lib_Sprintf.c,600 :: 		
0x19C8	0x47006E  	ADD	W14, #14, W0
0x19CA	0xA64010  	BTSS	[W0], #4
0x19CC	0x370009  	BRA	L___Lib_Sprintf__doprntf208
;__Lib_Sprintf.c,601 :: 		
0x19CE	0x78008C  	MOV	W12, W1
0x19D0	0x78001C  	MOV	[W12], W0
0x19D2	0x500064  	SUB	W0, #4, W0
0x19D4	0x780E00  	MOV	W0, [W12]
0x19D6	0x780111  	MOV	[W1], W2
0x19D8	0xBE0012  	MOV.D	[W2], W0
0x19DA	0x980F30  	MOV	W0, [W14+22]
0x19DC	0x980F41  	MOV	W1, [W14+24]
0x19DE	0x370009  	BRA	L___Lib_Sprintf__doprntf209
L___Lib_Sprintf__doprntf208:
;__Lib_Sprintf.c,604 :: 		
0x19E0	0x78008C  	MOV	W12, W1
0x19E2	0x78001C  	MOV	[W12], W0
0x19E4	0xEDA000  	DEC2	W0
0x19E6	0x780E00  	MOV	W0, [W12]
0x19E8	0x780011  	MOV	[W1], W0
0x19EA	0x780010  	MOV	[W0], W0
0x19EC	0xDE80CF  	ASR	W0, #15, W1
0x19EE	0x980F30  	MOV	W0, [W14+22]
0x19F0	0x980F41  	MOV	W1, [W14+24]
L___Lib_Sprintf__doprntf209:
;__Lib_Sprintf.c,605 :: 		
0x19F2	0x90083E  	MOV	[W14+22], W0
0x19F4	0x9008CE  	MOV	[W14+24], W1
0x19F6	0xE10060  	CP	W0, #0
0x19F8	0xE18860  	CPB	W1, #0
0x19FA	0x3D0009  	BRA GE	L___Lib_Sprintf__doprntf210
L___Lib_Sprintf__doprntf463:
;__Lib_Sprintf.c,606 :: 		
0x19FC	0x9000FE  	MOV	[W14+14], W1
0x19FE	0x47006E  	ADD	W14, #14, W0
0x1A00	0x708863  	IOR	W1, #3, [W0]
;__Lib_Sprintf.c,607 :: 		
0x1A02	0x90083E  	MOV	[W14+22], W0
0x1A04	0x9008CE  	MOV	[W14+24], W1
0x1A06	0x100060  	SUBR	W0, #0, W0
0x1A08	0x1880E0  	SUBBR	W1, #0, W1
0x1A0A	0x980F30  	MOV	W0, [W14+22]
0x1A0C	0x980F41  	MOV	W1, [W14+24]
;__Lib_Sprintf.c,608 :: 		
L___Lib_Sprintf__doprntf210:
;__Lib_Sprintf.c,609 :: 		
0x1A0E	0x370015  	BRA	L___Lib_Sprintf__doprntf211
L___Lib_Sprintf__doprntf207:
;__Lib_Sprintf.c,612 :: 		
0x1A10	0x47006E  	ADD	W14, #14, W0
0x1A12	0xA64010  	BTSS	[W0], #4
0x1A14	0x370009  	BRA	L___Lib_Sprintf__doprntf212
;__Lib_Sprintf.c,613 :: 		
0x1A16	0x78008C  	MOV	W12, W1
0x1A18	0x78001C  	MOV	[W12], W0
0x1A1A	0x500064  	SUB	W0, #4, W0
0x1A1C	0x780E00  	MOV	W0, [W12]
0x1A1E	0x780111  	MOV	[W1], W2
0x1A20	0xBE0012  	MOV.D	[W2], W0
0x1A22	0x980F30  	MOV	W0, [W14+22]
0x1A24	0x980F41  	MOV	W1, [W14+24]
0x1A26	0x370009  	BRA	L___Lib_Sprintf__doprntf213
L___Lib_Sprintf__doprntf212:
;__Lib_Sprintf.c,616 :: 		
0x1A28	0x78008C  	MOV	W12, W1
0x1A2A	0x78001C  	MOV	[W12], W0
0x1A2C	0xEDA000  	DEC2	W0
0x1A2E	0x780E00  	MOV	W0, [W12]
0x1A30	0x780011  	MOV	[W1], W0
0x1A32	0x780010  	MOV	[W0], W0
0x1A34	0xEB0080  	CLR	W1
0x1A36	0x980F30  	MOV	W0, [W14+22]
0x1A38	0x980F41  	MOV	W1, [W14+24]
L___Lib_Sprintf__doprntf213:
;__Lib_Sprintf.c,617 :: 		
L___Lib_Sprintf__doprntf211:
;__Lib_Sprintf.c,618 :: 		
0x1A3A	0x90004E  	MOV	[W14+8], W0
0x1A3C	0xE10060  	CP	W0, #0
0x1A3E	0x3A0008  	BRA NZ	L___Lib_Sprintf__doprntf347
L___Lib_Sprintf__doprntf464:
0x1A40	0x90083E  	MOV	[W14+22], W0
0x1A42	0x9008CE  	MOV	[W14+24], W1
0x1A44	0xE10060  	CP	W0, #0
0x1A46	0xE18860  	CPB	W1, #0
0x1A48	0x3A0003  	BRA NZ	L___Lib_Sprintf__doprntf346
L___Lib_Sprintf__doprntf465:
L___Lib_Sprintf__doprntf301:
;__Lib_Sprintf.c,619 :: 		
0x1A4A	0x9000CE  	MOV	[W14+8], W1
0x1A4C	0x470068  	ADD	W14, #8, W0
0x1A4E	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,618 :: 		
L___Lib_Sprintf__doprntf347:
L___Lib_Sprintf__doprntf346:
;__Lib_Sprintf.c,620 :: 		
0x1A50	0x200C01  	MOV	#192, W1
0x1A52	0x47006E  	ADD	W14, #14, W0
0x1A54	0x608010  	AND	W1, [W0], W0
0x1A56	0x784200  	MOV.B	W0, W4
0x1A58	0x370042  	BRA	L___Lib_Sprintf__doprntf217
;__Lib_Sprintf.c,621 :: 		
L___Lib_Sprintf__doprntf219:
;__Lib_Sprintf.c,622 :: 		
L___Lib_Sprintf__doprntf220:
;__Lib_Sprintf.c,623 :: 		
0x1A5A	0xB3C010  	MOV.B	#1, W0
0x1A5C	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf221:
0x1A5E	0x90482E  	MOV.B	[W14+10], W0
0x1A60	0xE1046A  	CP.B	W0, #10
0x1A62	0x320010  	BRA Z	L___Lib_Sprintf__doprntf222
L___Lib_Sprintf__doprntf466:
;__Lib_Sprintf.c,624 :: 		
0x1A64	0x47006A  	ADD	W14, #10, W0
0x1A66	0xFB8010  	ZE	[W0], W0
0x1A68	0xDD00C2  	SL	W0, #2, W1
0x1A6A	0x2AC3E0  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W0
0x1A6C	0x400181  	ADD	W0, W1, W3
0x1A6E	0x7800B3  	MOV	[W3++], W1
0x1A70	0x780123  	MOV	[W3--], W2
0x1A72	0x470076  	ADD	W14, #22, W0
0x1A74	0xE10830  	CP	W1, [W0++]
0x1A76	0xE19020  	CPB	W2, [W0--]
0x1A78	0x360001  	BRA LEU	L___Lib_Sprintf__doprntf224
L___Lib_Sprintf__doprntf467:
;__Lib_Sprintf.c,625 :: 		
0x1A7A	0x370004  	BRA	L___Lib_Sprintf__doprntf222
L___Lib_Sprintf__doprntf224:
;__Lib_Sprintf.c,623 :: 		
0x1A7C	0x9048AE  	MOV.B	[W14+10], W1
0x1A7E	0x47006A  	ADD	W14, #10, W0
0x1A80	0x40C861  	ADD.B	W1, #1, [W0]
;__Lib_Sprintf.c,625 :: 		
0x1A82	0x37FFED  	BRA	L___Lib_Sprintf__doprntf221
L___Lib_Sprintf__doprntf222:
;__Lib_Sprintf.c,626 :: 		
0x1A84	0x370037  	BRA	L___Lib_Sprintf__doprntf218
;__Lib_Sprintf.c,628 :: 		
L___Lib_Sprintf__doprntf225:
;__Lib_Sprintf.c,629 :: 		
0x1A86	0xB3C010  	MOV.B	#1, W0
0x1A88	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf226:
0x1A8A	0x90482E  	MOV.B	[W14+10], W0
0x1A8C	0xE10468  	CP.B	W0, #8
0x1A8E	0x320010  	BRA Z	L___Lib_Sprintf__doprntf227
L___Lib_Sprintf__doprntf468:
;__Lib_Sprintf.c,630 :: 		
0x1A90	0x47006A  	ADD	W14, #10, W0
0x1A92	0xFB8010  	ZE	[W0], W0
0x1A94	0xDD00C2  	SL	W0, #2, W1
0x1A96	0x2AC660  	MOV	#lo_addr(__Lib_Sprintf_hexpowers), W0
0x1A98	0x400181  	ADD	W0, W1, W3
0x1A9A	0x7800B3  	MOV	[W3++], W1
0x1A9C	0x780123  	MOV	[W3--], W2
0x1A9E	0x470076  	ADD	W14, #22, W0
0x1AA0	0xE10830  	CP	W1, [W0++]
0x1AA2	0xE19020  	CPB	W2, [W0--]
0x1AA4	0x360001  	BRA LEU	L___Lib_Sprintf__doprntf229
L___Lib_Sprintf__doprntf469:
;__Lib_Sprintf.c,631 :: 		
0x1AA6	0x370004  	BRA	L___Lib_Sprintf__doprntf227
L___Lib_Sprintf__doprntf229:
;__Lib_Sprintf.c,629 :: 		
0x1AA8	0x9048AE  	MOV.B	[W14+10], W1
0x1AAA	0x47006A  	ADD	W14, #10, W0
0x1AAC	0x40C861  	ADD.B	W1, #1, [W0]
;__Lib_Sprintf.c,631 :: 		
0x1AAE	0x37FFED  	BRA	L___Lib_Sprintf__doprntf226
L___Lib_Sprintf__doprntf227:
;__Lib_Sprintf.c,632 :: 		
0x1AB0	0x370021  	BRA	L___Lib_Sprintf__doprntf218
;__Lib_Sprintf.c,634 :: 		
L___Lib_Sprintf__doprntf230:
;__Lib_Sprintf.c,635 :: 		
0x1AB2	0xB3C010  	MOV.B	#1, W0
0x1AB4	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf231:
0x1AB6	0x90482E  	MOV.B	[W14+10], W0
0x1AB8	0xE1046C  	CP.B	W0, #12
0x1ABA	0x320010  	BRA Z	L___Lib_Sprintf__doprntf232
L___Lib_Sprintf__doprntf470:
;__Lib_Sprintf.c,636 :: 		
0x1ABC	0x47006A  	ADD	W14, #10, W0
0x1ABE	0xFB8010  	ZE	[W0], W0
0x1AC0	0xDD00C2  	SL	W0, #2, W1
0x1AC2	0x2AC0E0  	MOV	#lo_addr(__Lib_Sprintf_octpowers), W0
0x1AC4	0x400181  	ADD	W0, W1, W3
0x1AC6	0x7800B3  	MOV	[W3++], W1
0x1AC8	0x780123  	MOV	[W3--], W2
0x1ACA	0x470076  	ADD	W14, #22, W0
0x1ACC	0xE10830  	CP	W1, [W0++]
0x1ACE	0xE19020  	CPB	W2, [W0--]
0x1AD0	0x360001  	BRA LEU	L___Lib_Sprintf__doprntf234
L___Lib_Sprintf__doprntf471:
;__Lib_Sprintf.c,637 :: 		
0x1AD2	0x370004  	BRA	L___Lib_Sprintf__doprntf232
L___Lib_Sprintf__doprntf234:
;__Lib_Sprintf.c,635 :: 		
0x1AD4	0x9048AE  	MOV.B	[W14+10], W1
0x1AD6	0x47006A  	ADD	W14, #10, W0
0x1AD8	0x40C861  	ADD.B	W1, #1, [W0]
;__Lib_Sprintf.c,637 :: 		
0x1ADA	0x37FFED  	BRA	L___Lib_Sprintf__doprntf231
L___Lib_Sprintf__doprntf232:
;__Lib_Sprintf.c,638 :: 		
0x1ADC	0x37000B  	BRA	L___Lib_Sprintf__doprntf218
;__Lib_Sprintf.c,639 :: 		
L___Lib_Sprintf__doprntf217:
0x1ADE	0xE12460  	CP.B	W4, #0
0x1AE0	0x32FFBC  	BRA Z	L___Lib_Sprintf__doprntf219
L___Lib_Sprintf__doprntf472:
0x1AE2	0xB3CC00  	MOV.B	#192, W0
0x1AE4	0xE12400  	CP.B	W4, W0
0x1AE6	0x32FFB9  	BRA Z	L___Lib_Sprintf__doprntf220
L___Lib_Sprintf__doprntf473:
0x1AE8	0xB3C800  	MOV.B	#128, W0
0x1AEA	0xE12400  	CP.B	W4, W0
0x1AEC	0x32FFCC  	BRA Z	L___Lib_Sprintf__doprntf225
L___Lib_Sprintf__doprntf474:
0x1AEE	0xB3C400  	MOV.B	#64, W0
0x1AF0	0xE12400  	CP.B	W4, W0
0x1AF2	0x32FFDF  	BRA Z	L___Lib_Sprintf__doprntf230
L___Lib_Sprintf__doprntf475:
L___Lib_Sprintf__doprntf218:
;__Lib_Sprintf.c,640 :: 		
0x1AF4	0x47006A  	ADD	W14, #10, W0
0x1AF6	0xFB8090  	ZE	[W0], W1
0x1AF8	0x470068  	ADD	W14, #8, W0
0x1AFA	0xE10810  	CP	W1, [W0]
0x1AFC	0x3D0003  	BRA GE	L___Lib_Sprintf__doprntf235
L___Lib_Sprintf__doprntf476:
;__Lib_Sprintf.c,641 :: 		
0x1AFE	0x90480E  	MOV.B	[W14+8], W0
0x1B00	0x984F20  	MOV.B	W0, [W14+10]
0x1B02	0x370008  	BRA	L___Lib_Sprintf__doprntf236
L___Lib_Sprintf__doprntf235:
;__Lib_Sprintf.c,643 :: 		
0x1B04	0x47006A  	ADD	W14, #10, W0
0x1B06	0xFB8090  	ZE	[W0], W1
0x1B08	0x470068  	ADD	W14, #8, W0
0x1B0A	0xE10810  	CP	W1, [W0]
0x1B0C	0x340003  	BRA LE	L___Lib_Sprintf__doprntf237
L___Lib_Sprintf__doprntf477:
;__Lib_Sprintf.c,644 :: 		
0x1B0E	0x47006A  	ADD	W14, #10, W0
0x1B10	0xFB8010  	ZE	[W0], W0
0x1B12	0x980740  	MOV	W0, [W14+8]
L___Lib_Sprintf__doprntf237:
L___Lib_Sprintf__doprntf236:
;__Lib_Sprintf.c,645 :: 		
0x1B14	0x47006C  	ADD	W14, #12, W0
0x1B16	0xE00010  	CP0	[W0]
0x1B18	0x320007  	BRA Z	L___Lib_Sprintf__doprntf349
L___Lib_Sprintf__doprntf478:
0x1B1A	0x90007E  	MOV	[W14+14], W0
0x1B1C	0x600063  	AND	W0, #3, W0
0x1B1E	0xE20000  	CP0	W0
0x1B20	0x320003  	BRA Z	L___Lib_Sprintf__doprntf348
L___Lib_Sprintf__doprntf479:
L___Lib_Sprintf__doprntf300:
;__Lib_Sprintf.c,646 :: 		
0x1B22	0x9000EE  	MOV	[W14+12], W1
0x1B24	0x47006C  	ADD	W14, #12, W0
0x1B26	0x508861  	SUB	W1, #1, [W0]
;__Lib_Sprintf.c,645 :: 		
L___Lib_Sprintf__doprntf349:
L___Lib_Sprintf__doprntf348:
;__Lib_Sprintf.c,647 :: 		
0x1B28	0x9000EE  	MOV	[W14+12], W1
0x1B2A	0x470068  	ADD	W14, #8, W0
0x1B2C	0xE10810  	CP	W1, [W0]
0x1B2E	0x340005  	BRA LE	L___Lib_Sprintf__doprntf241
L___Lib_Sprintf__doprntf480:
;__Lib_Sprintf.c,648 :: 		
0x1B30	0x90016E  	MOV	[W14+12], W2
0x1B32	0x4700E8  	ADD	W14, #8, W1
0x1B34	0x47006C  	ADD	W14, #12, W0
0x1B36	0x510811  	SUB	W2, [W1], [W0]
0x1B38	0x370002  	BRA	L___Lib_Sprintf__doprntf242
L___Lib_Sprintf__doprntf241:
;__Lib_Sprintf.c,650 :: 		
0x1B3A	0xEF2000  	CLR	W0
0x1B3C	0x980760  	MOV	W0, [W14+12]
L___Lib_Sprintf__doprntf242:
;__Lib_Sprintf.c,651 :: 		
0x1B3E	0x9000FE  	MOV	[W14+14], W1
0x1B40	0x208C40  	MOV	#2244, W0
0x1B42	0x608080  	AND	W1, W0, W1
0x1B44	0x208400  	MOV	#2112, W0
0x1B46	0xE10800  	CP	W1, W0
0x1B48	0x3A0007  	BRA NZ	L___Lib_Sprintf__doprntf243
L___Lib_Sprintf__doprntf481:
;__Lib_Sprintf.c,652 :: 		
0x1B4A	0x47006C  	ADD	W14, #12, W0
0x1B4C	0xE00010  	CP0	[W0]
0x1B4E	0x320003  	BRA Z	L___Lib_Sprintf__doprntf244
L___Lib_Sprintf__doprntf482:
;__Lib_Sprintf.c,653 :: 		
0x1B50	0x9000EE  	MOV	[W14+12], W1
0x1B52	0x47006C  	ADD	W14, #12, W0
0x1B54	0x508861  	SUB	W1, #1, [W0]
L___Lib_Sprintf__doprntf244:
;__Lib_Sprintf.c,654 :: 		
0x1B56	0x37000F  	BRA	L___Lib_Sprintf__doprntf245
L___Lib_Sprintf__doprntf243:
;__Lib_Sprintf.c,656 :: 		
0x1B58	0x9000FE  	MOV	[W14+14], W1
0x1B5A	0x208C00  	MOV	#2240, W0
0x1B5C	0x608080  	AND	W1, W0, W1
0x1B5E	0x208800  	MOV	#2176, W0
0x1B60	0xE10800  	CP	W1, W0
0x1B62	0x3A0009  	BRA NZ	L___Lib_Sprintf__doprntf246
L___Lib_Sprintf__doprntf483:
;__Lib_Sprintf.c,657 :: 		
0x1B64	0x90006E  	MOV	[W14+12], W0
0x1B66	0xE10062  	CP	W0, #2
0x1B68	0x340004  	BRA LE	L___Lib_Sprintf__doprntf247
L___Lib_Sprintf__doprntf484:
;__Lib_Sprintf.c,658 :: 		
0x1B6A	0x9000EE  	MOV	[W14+12], W1
0x1B6C	0x47006C  	ADD	W14, #12, W0
0x1B6E	0x508862  	SUB	W1, #2, [W0]
0x1B70	0x370002  	BRA	L___Lib_Sprintf__doprntf248
L___Lib_Sprintf__doprntf247:
;__Lib_Sprintf.c,660 :: 		
0x1B72	0xEF2000  	CLR	W0
0x1B74	0x980760  	MOV	W0, [W14+12]
L___Lib_Sprintf__doprntf248:
;__Lib_Sprintf.c,661 :: 		
L___Lib_Sprintf__doprntf246:
L___Lib_Sprintf__doprntf245:
;__Lib_Sprintf.c,662 :: 		
0x1B76	0x47006E  	ADD	W14, #14, W0
0x1B78	0xA62010  	BTSS	[W0], #2
0x1B7A	0x370049  	BRA	L___Lib_Sprintf__doprntf249
;__Lib_Sprintf.c,663 :: 		
0x1B7C	0x47006E  	ADD	W14, #14, W0
0x1B7E	0xA61010  	BTSS	[W0], #1
0x1B80	0x370010  	BRA	L___Lib_Sprintf__doprntf250
;__Lib_Sprintf.c,664 :: 		
0x1B82	0x47006E  	ADD	W14, #14, W0
0x1B84	0xA60010  	BTSS	[W0], #0
0x1B86	0x370003  	BRA	L___Lib_Sprintf__doprntf251
0x1B88	0xB3C2D0  	MOV.B	#45, W0
0x1B8A	0x984740  	MOV.B	W0, [W14+4]
0x1B8C	0x370002  	BRA	L___Lib_Sprintf__doprntf252
L___Lib_Sprintf__doprntf251:
0x1B8E	0xB3C2B0  	MOV.B	#43, W0
0x1B90	0x984740  	MOV.B	W0, [W14+4]
L___Lib_Sprintf__doprntf252:
0x1B92	0x90404E  	MOV.B	[W14+4], W0
0x1B94	0x784D00  	MOV.B	W0, [W10]
0x1B96	0x450061  	ADD	W10, #1, W0
0x1B98	0x780500  	MOV	W0, W10
0x1B9A	0x9008DE  	MOV	[W14+26], W1
0x1B9C	0x47007A  	ADD	W14, #26, W0
0x1B9E	0x408861  	ADD	W1, #1, [W0]
0x1BA0	0x370027  	BRA	L___Lib_Sprintf__doprntf253
L___Lib_Sprintf__doprntf250:
;__Lib_Sprintf.c,666 :: 		
0x1BA2	0x47006E  	ADD	W14, #14, W0
0x1BA4	0xA60010  	BTSS	[W0], #0
0x1BA6	0x370008  	BRA	L___Lib_Sprintf__doprntf254
;__Lib_Sprintf.c,667 :: 		
0x1BA8	0xB3C200  	MOV.B	#32, W0
0x1BAA	0x784D00  	MOV.B	W0, [W10]
0x1BAC	0x450061  	ADD	W10, #1, W0
0x1BAE	0x780500  	MOV	W0, W10
0x1BB0	0x9008DE  	MOV	[W14+26], W1
0x1BB2	0x47007A  	ADD	W14, #26, W0
0x1BB4	0x408861  	ADD	W1, #1, [W0]
0x1BB6	0x37001C  	BRA	L___Lib_Sprintf__doprntf255
L___Lib_Sprintf__doprntf254:
;__Lib_Sprintf.c,669 :: 		
0x1BB8	0x9000FE  	MOV	[W14+14], W1
0x1BBA	0x208C00  	MOV	#2240, W0
0x1BBC	0x608080  	AND	W1, W0, W1
0x1BBE	0x208800  	MOV	#2176, W0
0x1BC0	0xE10800  	CP	W1, W0
0x1BC2	0x3A0016  	BRA NZ	L___Lib_Sprintf__doprntf256
L___Lib_Sprintf__doprntf485:
;__Lib_Sprintf.c,670 :: 		
0x1BC4	0xB3C300  	MOV.B	#48, W0
0x1BC6	0x784D00  	MOV.B	W0, [W10]
0x1BC8	0x450061  	ADD	W10, #1, W0
0x1BCA	0x780500  	MOV	W0, W10
0x1BCC	0x9008DE  	MOV	[W14+26], W1
0x1BCE	0x47007A  	ADD	W14, #26, W0
0x1BD0	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,671 :: 		
0x1BD2	0x47006E  	ADD	W14, #14, W0
0x1BD4	0xA65010  	BTSS	[W0], #5
0x1BD6	0x370003  	BRA	L___Lib_Sprintf__doprntf257
0x1BD8	0xB3C580  	MOV.B	#88, W0
0x1BDA	0x984750  	MOV.B	W0, [W14+5]
0x1BDC	0x370002  	BRA	L___Lib_Sprintf__doprntf258
L___Lib_Sprintf__doprntf257:
0x1BDE	0xB3C780  	MOV.B	#120, W0
0x1BE0	0x984750  	MOV.B	W0, [W14+5]
L___Lib_Sprintf__doprntf258:
0x1BE2	0x90405E  	MOV.B	[W14+5], W0
0x1BE4	0x784D00  	MOV.B	W0, [W10]
0x1BE6	0x450061  	ADD	W10, #1, W0
0x1BE8	0x780500  	MOV	W0, W10
0x1BEA	0x9008DE  	MOV	[W14+26], W1
0x1BEC	0x47007A  	ADD	W14, #26, W0
0x1BEE	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,672 :: 		
L___Lib_Sprintf__doprntf256:
L___Lib_Sprintf__doprntf255:
L___Lib_Sprintf__doprntf253:
;__Lib_Sprintf.c,673 :: 		
0x1BF0	0x47006C  	ADD	W14, #12, W0
0x1BF2	0xE00010  	CP0	[W0]
0x1BF4	0x32000B  	BRA Z	L___Lib_Sprintf__doprntf259
L___Lib_Sprintf__doprntf486:
;__Lib_Sprintf.c,674 :: 		
L___Lib_Sprintf__doprntf260:
;__Lib_Sprintf.c,675 :: 		
0x1BF6	0xB3C300  	MOV.B	#48, W0
0x1BF8	0x784D00  	MOV.B	W0, [W10]
0x1BFA	0x450061  	ADD	W10, #1, W0
0x1BFC	0x780500  	MOV	W0, W10
0x1BFE	0x9008DE  	MOV	[W14+26], W1
0x1C00	0x47007A  	ADD	W14, #26, W0
0x1C02	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,676 :: 		
0x1C04	0x90006E  	MOV	[W14+12], W0
0x1C06	0xED2000  	DEC	W0
0x1C08	0x980760  	MOV	W0, [W14+12]
0x1C0A	0x3AFFF5  	BRA NZ	L___Lib_Sprintf__doprntf260
L___Lib_Sprintf__doprntf487:
L___Lib_Sprintf__doprntf259:
;__Lib_Sprintf.c,677 :: 		
0x1C0C	0x370058  	BRA	L___Lib_Sprintf__doprntf263
L___Lib_Sprintf__doprntf249:
;__Lib_Sprintf.c,679 :: 		
0x1C0E	0x47006C  	ADD	W14, #12, W0
0x1C10	0xE00010  	CP0	[W0]
0x1C12	0x32000E  	BRA Z	L___Lib_Sprintf__doprntf351
L___Lib_Sprintf__doprntf488:
0x1C14	0x47006E  	ADD	W14, #14, W0
0x1C16	0xA73010  	BTSC	[W0], #3
0x1C18	0x37000B  	BRA	L___Lib_Sprintf__doprntf350
L___Lib_Sprintf__doprntf299:
;__Lib_Sprintf.c,680 :: 		
L___Lib_Sprintf__doprntf267:
;__Lib_Sprintf.c,681 :: 		
0x1C1A	0xB3C200  	MOV.B	#32, W0
0x1C1C	0x784D00  	MOV.B	W0, [W10]
0x1C1E	0x450061  	ADD	W10, #1, W0
0x1C20	0x780500  	MOV	W0, W10
0x1C22	0x9008DE  	MOV	[W14+26], W1
0x1C24	0x47007A  	ADD	W14, #26, W0
0x1C26	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,682 :: 		
0x1C28	0x90006E  	MOV	[W14+12], W0
0x1C2A	0xED2000  	DEC	W0
0x1C2C	0x980760  	MOV	W0, [W14+12]
0x1C2E	0x3AFFF5  	BRA NZ	L___Lib_Sprintf__doprntf267
L___Lib_Sprintf__doprntf489:
;__Lib_Sprintf.c,679 :: 		
L___Lib_Sprintf__doprntf351:
L___Lib_Sprintf__doprntf350:
;__Lib_Sprintf.c,683 :: 		
0x1C30	0x47006E  	ADD	W14, #14, W0
0x1C32	0xA61010  	BTSS	[W0], #1
0x1C34	0x370010  	BRA	L___Lib_Sprintf__doprntf270
;__Lib_Sprintf.c,684 :: 		
0x1C36	0x47006E  	ADD	W14, #14, W0
0x1C38	0xA60010  	BTSS	[W0], #0
0x1C3A	0x370003  	BRA	L___Lib_Sprintf__doprntf271
0x1C3C	0xB3C2D0  	MOV.B	#45, W0
0x1C3E	0x984760  	MOV.B	W0, [W14+6]
0x1C40	0x370002  	BRA	L___Lib_Sprintf__doprntf272
L___Lib_Sprintf__doprntf271:
0x1C42	0xB3C2B0  	MOV.B	#43, W0
0x1C44	0x984760  	MOV.B	W0, [W14+6]
L___Lib_Sprintf__doprntf272:
0x1C46	0x90406E  	MOV.B	[W14+6], W0
0x1C48	0x784D00  	MOV.B	W0, [W10]
0x1C4A	0x450061  	ADD	W10, #1, W0
0x1C4C	0x780500  	MOV	W0, W10
0x1C4E	0x9008DE  	MOV	[W14+26], W1
0x1C50	0x47007A  	ADD	W14, #26, W0
0x1C52	0x408861  	ADD	W1, #1, [W0]
0x1C54	0x37000A  	BRA	L___Lib_Sprintf__doprntf273
L___Lib_Sprintf__doprntf270:
;__Lib_Sprintf.c,686 :: 		
0x1C56	0x47006E  	ADD	W14, #14, W0
0x1C58	0xA60010  	BTSS	[W0], #0
0x1C5A	0x370007  	BRA	L___Lib_Sprintf__doprntf274
;__Lib_Sprintf.c,687 :: 		
0x1C5C	0xB3C200  	MOV.B	#32, W0
0x1C5E	0x784D00  	MOV.B	W0, [W10]
0x1C60	0x450061  	ADD	W10, #1, W0
0x1C62	0x780500  	MOV	W0, W10
0x1C64	0x9008DE  	MOV	[W14+26], W1
0x1C66	0x47007A  	ADD	W14, #26, W0
0x1C68	0x408861  	ADD	W1, #1, [W0]
L___Lib_Sprintf__doprntf274:
L___Lib_Sprintf__doprntf273:
;__Lib_Sprintf.c,688 :: 		
0x1C6A	0x9000FE  	MOV	[W14+14], W1
0x1C6C	0x208C00  	MOV	#2240, W0
0x1C6E	0x608080  	AND	W1, W0, W1
0x1C70	0x208400  	MOV	#2112, W0
0x1C72	0xE10800  	CP	W1, W0
0x1C74	0x3A0008  	BRA NZ	L___Lib_Sprintf__doprntf275
L___Lib_Sprintf__doprntf490:
;__Lib_Sprintf.c,689 :: 		
0x1C76	0xB3C300  	MOV.B	#48, W0
0x1C78	0x784D00  	MOV.B	W0, [W10]
0x1C7A	0x450061  	ADD	W10, #1, W0
0x1C7C	0x780500  	MOV	W0, W10
0x1C7E	0x9008DE  	MOV	[W14+26], W1
0x1C80	0x47007A  	ADD	W14, #26, W0
0x1C82	0x408861  	ADD	W1, #1, [W0]
0x1C84	0x37001C  	BRA	L___Lib_Sprintf__doprntf276
L___Lib_Sprintf__doprntf275:
;__Lib_Sprintf.c,691 :: 		
0x1C86	0x9000FE  	MOV	[W14+14], W1
0x1C88	0x208C00  	MOV	#2240, W0
0x1C8A	0x608080  	AND	W1, W0, W1
0x1C8C	0x208800  	MOV	#2176, W0
0x1C8E	0xE10800  	CP	W1, W0
0x1C90	0x3A0016  	BRA NZ	L___Lib_Sprintf__doprntf277
L___Lib_Sprintf__doprntf491:
;__Lib_Sprintf.c,692 :: 		
0x1C92	0xB3C300  	MOV.B	#48, W0
0x1C94	0x784D00  	MOV.B	W0, [W10]
0x1C96	0x450061  	ADD	W10, #1, W0
0x1C98	0x780500  	MOV	W0, W10
0x1C9A	0x9008DE  	MOV	[W14+26], W1
0x1C9C	0x47007A  	ADD	W14, #26, W0
0x1C9E	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,693 :: 		
0x1CA0	0x47006E  	ADD	W14, #14, W0
0x1CA2	0xA65010  	BTSS	[W0], #5
0x1CA4	0x370003  	BRA	L___Lib_Sprintf__doprntf278
0x1CA6	0xB3C580  	MOV.B	#88, W0
0x1CA8	0x984770  	MOV.B	W0, [W14+7]
0x1CAA	0x370002  	BRA	L___Lib_Sprintf__doprntf279
L___Lib_Sprintf__doprntf278:
0x1CAC	0xB3C780  	MOV.B	#120, W0
0x1CAE	0x984770  	MOV.B	W0, [W14+7]
L___Lib_Sprintf__doprntf279:
0x1CB0	0x90407E  	MOV.B	[W14+7], W0
0x1CB2	0x784D00  	MOV.B	W0, [W10]
0x1CB4	0x450061  	ADD	W10, #1, W0
0x1CB6	0x780500  	MOV	W0, W10
0x1CB8	0x9008DE  	MOV	[W14+26], W1
0x1CBA	0x47007A  	ADD	W14, #26, W0
0x1CBC	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,694 :: 		
L___Lib_Sprintf__doprntf277:
L___Lib_Sprintf__doprntf276:
;__Lib_Sprintf.c,695 :: 		
L___Lib_Sprintf__doprntf263:
;__Lib_Sprintf.c,696 :: 		
L___Lib_Sprintf__doprntf280:
0x1CBE	0x47006A  	ADD	W14, #10, W0
0x1CC0	0xFB8090  	ZE	[W0], W1
0x1CC2	0x470068  	ADD	W14, #8, W0
0x1CC4	0xE10810  	CP	W1, [W0]
0x1CC6	0x3D0008  	BRA GE	L___Lib_Sprintf__doprntf281
L___Lib_Sprintf__doprntf492:
;__Lib_Sprintf.c,697 :: 		
0x1CC8	0xB3C300  	MOV.B	#48, W0
0x1CCA	0x784D00  	MOV.B	W0, [W10]
0x1CCC	0x450061  	ADD	W10, #1, W0
0x1CCE	0x780500  	MOV	W0, W10
0x1CD0	0x9008DE  	MOV	[W14+26], W1
0x1CD2	0x47007A  	ADD	W14, #26, W0
0x1CD4	0x408861  	ADD	W1, #1, [W0]
0x1CD6	0x37FFF3  	BRA	L___Lib_Sprintf__doprntf280
L___Lib_Sprintf__doprntf281:
;__Lib_Sprintf.c,698 :: 		
L___Lib_Sprintf__doprntf282:
0x1CD8	0x90014E  	MOV	[W14+8], W2
0x1CDA	0x9000CE  	MOV	[W14+8], W1
0x1CDC	0x470068  	ADD	W14, #8, W0
0x1CDE	0x508861  	SUB	W1, #1, [W0]
0x1CE0	0xE20004  	CP0	W2
0x1CE2	0x32006B  	BRA Z	L___Lib_Sprintf__doprntf283
L___Lib_Sprintf__doprntf493:
;__Lib_Sprintf.c,699 :: 		
0x1CE4	0x200C01  	MOV	#192, W1
0x1CE6	0x47006E  	ADD	W14, #14, W0
0x1CE8	0x608010  	AND	W1, [W0], W0
0x1CEA	0x986740  	MOV.B	W0, [W14+36]
0x1CEC	0x370052  	BRA	L___Lib_Sprintf__doprntf284
;__Lib_Sprintf.c,700 :: 		
L___Lib_Sprintf__doprntf286:
;__Lib_Sprintf.c,701 :: 		
L___Lib_Sprintf__doprntf287:
;__Lib_Sprintf.c,702 :: 		
0x1CEE	0x90004E  	MOV	[W14+8], W0
0x1CF0	0xDD00C2  	SL	W0, #2, W1
0x1CF2	0x2AC3E0  	MOV	#lo_addr(__Lib_Sprintf_dpowers), W0
0x1CF4	0x400081  	ADD	W0, W1, W1
0x1CF6	0xBE0111  	MOV.D	[W1], W2
0x1CF8	0x781F8C  	PUSH	W12
0x1CFA	0xBE9F8A  	PUSH.D	W10
0x1CFC	0x90083E  	MOV	[W14+22], W0
0x1CFE	0x9008CE  	MOV	[W14+24], W1
0x1D00	0xEB0200  	CLR	W4
0x1D02	0x07F56D  	RCALL	__Divide_32x32
0x1D04	0x2000A2  	MOV	#10, W2
0x1D06	0x200003  	MOV	#0, W3
0x1D08	0xEB0200  	CLR	W4
0x1D0A	0x07F53D  	RCALL	__Modulus_32x32
0x1D0C	0xBE054F  	POP.D	W10
0x1D0E	0x78064F  	POP	W12
0x1D10	0xB3C303  	MOV.B	#48, W3
0x1D12	0x47016A  	ADD	W14, #10, W2
0x1D14	0x404903  	ADD.B	W0, W3, [W2]
;__Lib_Sprintf.c,703 :: 		
0x1D16	0x370049  	BRA	L___Lib_Sprintf__doprntf285
;__Lib_Sprintf.c,705 :: 		
L___Lib_Sprintf__doprntf288:
;__Lib_Sprintf.c,706 :: 		
0x1D18	0x47006E  	ADD	W14, #14, W0
0x1D1A	0xA65010  	BTSS	[W0], #5
0x1D1C	0x370014  	BRA	L___Lib_Sprintf__doprntf289
;__Lib_Sprintf.c,707 :: 		
0x1D1E	0x90004E  	MOV	[W14+8], W0
0x1D20	0xDD00C2  	SL	W0, #2, W1
0x1D22	0x2AC660  	MOV	#lo_addr(__Lib_Sprintf_hexpowers), W0
0x1D24	0x400081  	ADD	W0, W1, W1
0x1D26	0xBE0111  	MOV.D	[W1], W2
0x1D28	0x781F8C  	PUSH	W12
0x1D2A	0xBE9F8A  	PUSH.D	W10
0x1D2C	0x90083E  	MOV	[W14+22], W0
0x1D2E	0x9008CE  	MOV	[W14+24], W1
0x1D30	0xEB0200  	CLR	W4
0x1D32	0x07F555  	RCALL	__Divide_32x32
0x1D34	0xBE054F  	POP.D	W10
0x1D36	0x78064F  	POP	W12
0x1D38	0x60016F  	AND	W0, #15, W2
0x1D3A	0x6081E0  	AND	W1, #0, W3
0x1D3C	0x2AC860  	MOV	#lo_addr(__Lib_Sprintf_hexb), W0
0x1D3E	0x400082  	ADD	W0, W2, W1
0x1D40	0x784011  	MOV.B	[W1], W0
0x1D42	0x984F20  	MOV.B	W0, [W14+10]
0x1D44	0x370013  	BRA	L___Lib_Sprintf__doprntf290
L___Lib_Sprintf__doprntf289:
;__Lib_Sprintf.c,709 :: 		
0x1D46	0x90004E  	MOV	[W14+8], W0
0x1D48	0xDD00C2  	SL	W0, #2, W1
0x1D4A	0x2AC660  	MOV	#lo_addr(__Lib_Sprintf_hexpowers), W0
0x1D4C	0x400081  	ADD	W0, W1, W1
0x1D4E	0xBE0111  	MOV.D	[W1], W2
0x1D50	0x781F8C  	PUSH	W12
0x1D52	0xBE9F8A  	PUSH.D	W10
0x1D54	0x90083E  	MOV	[W14+22], W0
0x1D56	0x9008CE  	MOV	[W14+24], W1
0x1D58	0xEB0200  	CLR	W4
0x1D5A	0x07F541  	RCALL	__Divide_32x32
0x1D5C	0xBE054F  	POP.D	W10
0x1D5E	0x78064F  	POP	W12
0x1D60	0x60016F  	AND	W0, #15, W2
0x1D62	0x6081E0  	AND	W1, #0, W3
0x1D64	0x2AC970  	MOV	#lo_addr(__Lib_Sprintf_hexs), W0
0x1D66	0x400082  	ADD	W0, W2, W1
0x1D68	0x784011  	MOV.B	[W1], W0
0x1D6A	0x984F20  	MOV.B	W0, [W14+10]
L___Lib_Sprintf__doprntf290:
;__Lib_Sprintf.c,710 :: 		
0x1D6C	0x37001E  	BRA	L___Lib_Sprintf__doprntf285
;__Lib_Sprintf.c,712 :: 		
L___Lib_Sprintf__doprntf291:
;__Lib_Sprintf.c,713 :: 		
0x1D6E	0x90004E  	MOV	[W14+8], W0
0x1D70	0xDD00C2  	SL	W0, #2, W1
0x1D72	0x2AC0E0  	MOV	#lo_addr(__Lib_Sprintf_octpowers), W0
0x1D74	0x400081  	ADD	W0, W1, W1
0x1D76	0xBE0111  	MOV.D	[W1], W2
0x1D78	0x781F8C  	PUSH	W12
0x1D7A	0xBE9F8A  	PUSH.D	W10
0x1D7C	0x90083E  	MOV	[W14+22], W0
0x1D7E	0x9008CE  	MOV	[W14+24], W1
0x1D80	0xEB0200  	CLR	W4
0x1D82	0x07F52D  	RCALL	__Divide_32x32
0x1D84	0xBE054F  	POP.D	W10
0x1D86	0x78064F  	POP	W12
0x1D88	0x600167  	AND	W0, #7, W2
0x1D8A	0xB3C301  	MOV.B	#48, W1
0x1D8C	0x47006A  	ADD	W14, #10, W0
0x1D8E	0x414801  	ADD.B	W2, W1, [W0]
;__Lib_Sprintf.c,714 :: 		
0x1D90	0x37000C  	BRA	L___Lib_Sprintf__doprntf285
;__Lib_Sprintf.c,715 :: 		
L___Lib_Sprintf__doprntf284:
0x1D92	0x9060CE  	MOV.B	[W14+36], W1
0x1D94	0xE10C60  	CP.B	W1, #0
0x1D96	0x32FFAB  	BRA Z	L___Lib_Sprintf__doprntf286
L___Lib_Sprintf__doprntf494:
0x1D98	0xB3CC00  	MOV.B	#192, W0
0x1D9A	0xE10C00  	CP.B	W1, W0
0x1D9C	0x32FFA8  	BRA Z	L___Lib_Sprintf__doprntf287
L___Lib_Sprintf__doprntf495:
0x1D9E	0xB3C800  	MOV.B	#128, W0
0x1DA0	0xE10C00  	CP.B	W1, W0
0x1DA2	0x32FFBA  	BRA Z	L___Lib_Sprintf__doprntf288
L___Lib_Sprintf__doprntf496:
0x1DA4	0xB3C400  	MOV.B	#64, W0
0x1DA6	0xE10C00  	CP.B	W1, W0
0x1DA8	0x32FFE2  	BRA Z	L___Lib_Sprintf__doprntf291
L___Lib_Sprintf__doprntf497:
L___Lib_Sprintf__doprntf285:
;__Lib_Sprintf.c,716 :: 		
0x1DAA	0x90482E  	MOV.B	[W14+10], W0
0x1DAC	0x784D00  	MOV.B	W0, [W10]
0x1DAE	0x450061  	ADD	W10, #1, W0
0x1DB0	0x780500  	MOV	W0, W10
0x1DB2	0x9008DE  	MOV	[W14+26], W1
0x1DB4	0x47007A  	ADD	W14, #26, W0
0x1DB6	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,717 :: 		
0x1DB8	0x37FF8F  	BRA	L___Lib_Sprintf__doprntf282
L___Lib_Sprintf__doprntf283:
;__Lib_Sprintf.c,718 :: 		
0x1DBA	0x47006E  	ADD	W14, #14, W0
0x1DBC	0xA63010  	BTSS	[W0], #3
0x1DBE	0x37000E  	BRA	L___Lib_Sprintf__doprntf353
0x1DC0	0x90006E  	MOV	[W14+12], W0
0x1DC2	0xE10060  	CP	W0, #0
0x1DC4	0x34000B  	BRA LE	L___Lib_Sprintf__doprntf352
L___Lib_Sprintf__doprntf498:
L___Lib_Sprintf__doprntf298:
;__Lib_Sprintf.c,719 :: 		
L___Lib_Sprintf__doprntf295:
;__Lib_Sprintf.c,720 :: 		
0x1DC6	0xB3C200  	MOV.B	#32, W0
0x1DC8	0x784D00  	MOV.B	W0, [W10]
0x1DCA	0x450061  	ADD	W10, #1, W0
0x1DCC	0x780500  	MOV	W0, W10
0x1DCE	0x9008DE  	MOV	[W14+26], W1
0x1DD0	0x47007A  	ADD	W14, #26, W0
0x1DD2	0x408861  	ADD	W1, #1, [W0]
;__Lib_Sprintf.c,721 :: 		
0x1DD4	0x90006E  	MOV	[W14+12], W0
0x1DD6	0xED2000  	DEC	W0
0x1DD8	0x980760  	MOV	W0, [W14+12]
0x1DDA	0x3AFFF5  	BRA NZ	L___Lib_Sprintf__doprntf295
L___Lib_Sprintf__doprntf499:
;__Lib_Sprintf.c,718 :: 		
L___Lib_Sprintf__doprntf353:
L___Lib_Sprintf__doprntf352:
;__Lib_Sprintf.c,722 :: 		
0x1DDC	0x37F7C0  	BRA	L___Lib_Sprintf__doprntf10
L___Lib_Sprintf__doprntf11:
;__Lib_Sprintf.c,723 :: 		
0x1DDE	0x90085E  	MOV	[W14+26], W0
;__Lib_Sprintf.c,725 :: 		
L_end__doprntf:
0x1DE0	0xFA8000  	ULNK
0x1DE2	0x060000  	RETURN
; end of __Lib_Sprintf__doprntf
_isdigit:
0x08E0	0xFA0000  	LNK	#0
;__Lib_CType.c,23 :: 		
;__Lib_CType.c,24 :: 		
0x08E2	0xB3C390  	MOV.B	#57, W0
0x08E4	0xE15400  	CP.B	W10, W0
0x08E6	0x3E0005  	BRA GTU	L_isdigit9
L__isdigit58:
0x08E8	0xB3C300  	MOV.B	#48, W0
0x08EA	0xE15400  	CP.B	W10, W0
0x08EC	0x390002  	BRA LTU	L_isdigit9
L__isdigit59:
0x08EE	0xB3C010  	MOV.B	#1, W0
0x08F0	0x370001  	BRA	L_isdigit8
L_isdigit9:
0x08F2	0xEF2000  	CLR	W0
L_isdigit8:
0x08F4	0xFB8000  	ZE	W0, W0
;__Lib_CType.c,25 :: 		
L_end_isdigit:
0x08F6	0xFA8000  	ULNK
0x08F8	0x060000  	RETURN
; end of _isdigit
__Lib_Sprintf_scale:
0x0A6C	0xFA0004  	LNK	#4
;__Lib_Sprintf.c,145 :: 		
;__Lib_Sprintf.c,146 :: 		
0x0A6E	0xE15460  	CP.B	W10, #0
0x0A70	0x3D0052  	BRA GE	L___Lib_Sprintf_scale3
L___Lib_Sprintf_scale358:
;__Lib_Sprintf.c,147 :: 		
0x0A72	0xFB000A  	SE	W10, W0
0x0A74	0x1000E0  	SUBR	W0, #0, W1
0x0A76	0x784501  	MOV.B	W1, W10
;__Lib_Sprintf.c,148 :: 		
0x0A78	0xB3C6E0  	MOV.B	#110, W0
0x0A7A	0xE10C00  	CP.B	W1, W0
0x0A7C	0x35002C  	BRA LT	L___Lib_Sprintf_scale4
L___Lib_Sprintf_scale359:
;__Lib_Sprintf.c,149 :: 		
0x0A7E	0xFB000A  	SE	W10, W0
0x0A80	0x200642  	MOV	#100, W2
0x0A82	0x090011  	REPEAT	#17
0x0A84	0xD80002  	DIV.S	W0, W2
0x0A86	0x400072  	ADD	W0, #18, W0
0x0A88	0xDD00C2  	SL	W0, #2, W1
0x0A8A	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0A8C	0x400101  	ADD	W0, W1, W2
0x0A8E	0xBE0012  	MOV.D	[W2], W0
0x0A90	0x980700  	MOV	W0, [W14+0]
0x0A92	0x980711  	MOV	W1, [W14+2]
0x0A94	0xFB000A  	SE	W10, W0
0x0A96	0x200642  	MOV	#100, W2
0x0A98	0x090011  	REPEAT	#17
0x0A9A	0xD80002  	DIV.S	W0, W2
0x0A9C	0x780001  	MOV	W1, W0
0x0A9E	0x2000A2  	MOV	#10, W2
0x0AA0	0x090011  	REPEAT	#17
0x0AA2	0xD80002  	DIV.S	W0, W2
0x0AA4	0x400069  	ADD	W0, #9, W0
0x0AA6	0xDD00C2  	SL	W0, #2, W1
0x0AA8	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0AAA	0x400201  	ADD	W0, W1, W4
0x0AAC	0xBE0114  	MOV.D	[W4], W2
0x0AAE	0x90000E  	MOV	[W14+0], W0
0x0AB0	0x90009E  	MOV	[W14+2], W1
0x0AB2	0x781F8A  	PUSH	W10
0x0AB4	0x07FBFF  	RCALL	__Mul_FP
0x0AB6	0x78054F  	POP	W10
0x0AB8	0x980700  	MOV	W0, [W14+0]
0x0ABA	0x980711  	MOV	W1, [W14+2]
0x0ABC	0xFB000A  	SE	W10, W0
0x0ABE	0x2000A2  	MOV	#10, W2
0x0AC0	0x090011  	REPEAT	#17
0x0AC2	0xD80002  	DIV.S	W0, W2
0x0AC4	0x780001  	MOV	W1, W0
0x0AC6	0xDD00C2  	SL	W0, #2, W1
0x0AC8	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0ACA	0x400201  	ADD	W0, W1, W4
0x0ACC	0xBE0114  	MOV.D	[W4], W2
0x0ACE	0x90000E  	MOV	[W14+0], W0
0x0AD0	0x90009E  	MOV	[W14+2], W1
0x0AD2	0x07FBF0  	RCALL	__Mul_FP
0x0AD4	0x37006E  	BRA	L_end_scale
L___Lib_Sprintf_scale4:
;__Lib_Sprintf.c,151 :: 		
0x0AD6	0xE1546A  	CP.B	W10, #10
0x0AD8	0x340018  	BRA LE	L___Lib_Sprintf_scale6
L___Lib_Sprintf_scale360:
;__Lib_Sprintf.c,152 :: 		
0x0ADA	0xFB000A  	SE	W10, W0
0x0ADC	0x2000A2  	MOV	#10, W2
0x0ADE	0x090011  	REPEAT	#17
0x0AE0	0xD80002  	DIV.S	W0, W2
0x0AE2	0x400069  	ADD	W0, #9, W0
0x0AE4	0xDD00C2  	SL	W0, #2, W1
0x0AE6	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0AE8	0x400101  	ADD	W0, W1, W2
0x0AEA	0xBE0012  	MOV.D	[W2], W0
0x0AEC	0x980700  	MOV	W0, [W14+0]
0x0AEE	0x980711  	MOV	W1, [W14+2]
0x0AF0	0xFB000A  	SE	W10, W0
0x0AF2	0x2000A2  	MOV	#10, W2
0x0AF4	0x090011  	REPEAT	#17
0x0AF6	0xD80002  	DIV.S	W0, W2
0x0AF8	0x780001  	MOV	W1, W0
0x0AFA	0xDD00C2  	SL	W0, #2, W1
0x0AFC	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0AFE	0x400201  	ADD	W0, W1, W4
0x0B00	0xBE0114  	MOV.D	[W4], W2
0x0B02	0x90000E  	MOV	[W14+0], W0
0x0B04	0x90009E  	MOV	[W14+2], W1
0x0B06	0x07FBD6  	RCALL	__Mul_FP
0x0B08	0x370054  	BRA	L_end_scale
L___Lib_Sprintf_scale6:
;__Lib_Sprintf.c,153 :: 		
0x0B0A	0xFB000A  	SE	W10, W0
0x0B0C	0xDD00C2  	SL	W0, #2, W1
0x0B0E	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0B10	0x400101  	ADD	W0, W1, W2
0x0B12	0xBE0012  	MOV.D	[W2], W0
0x0B14	0x37004E  	BRA	L_end_scale
;__Lib_Sprintf.c,154 :: 		
L___Lib_Sprintf_scale3:
;__Lib_Sprintf.c,155 :: 		
0x0B16	0xB3C6E0  	MOV.B	#110, W0
0x0B18	0xE15400  	CP.B	W10, W0
0x0B1A	0x35002C  	BRA LT	L___Lib_Sprintf_scale7
L___Lib_Sprintf_scale361:
;__Lib_Sprintf.c,156 :: 		
0x0B1C	0xFB000A  	SE	W10, W0
0x0B1E	0x200642  	MOV	#100, W2
0x0B20	0x090011  	REPEAT	#17
0x0B22	0xD80002  	DIV.S	W0, W2
0x0B24	0x400072  	ADD	W0, #18, W0
0x0B26	0xDD00C2  	SL	W0, #2, W1
0x0B28	0x2ABDA0  	MOV	#lo_addr(__Lib_Sprintf__powers_), W0
0x0B2A	0x400101  	ADD	W0, W1, W2
0x0B2C	0xBE0012  	MOV.D	[W2], W0
0x0B2E	0x980700  	MOV	W0, [W14+0]
0x0B30	0x980711  	MOV	W1, [W14+2]
0x0B32	0xFB000A  	SE	W10, W0
0x0B34	0x200642  	MOV	#100, W2
0x0B36	0x090011  	REPEAT	#17
0x0B38	0xD80002  	DIV.S	W0, W2
0x0B3A	0x780001  	MOV	W1, W0
0x0B3C	0x2000A2  	MOV	#10, W2
0x0B3E	0x090011  	REPEAT	#17
0x0B40	0xD80002  	DIV.S	W0, W2
0x0B42	0x400069  	ADD	W0, #9, W0
0x0B44	0xDD00C2  	SL	W0, #2, W1
0x0B46	0x2ABDA0  	MOV	#lo_addr(__Lib_Sprintf__powers_), W0
0x0B48	0x400201  	ADD	W0, W1, W4
0x0B4A	0xBE0114  	MOV.D	[W4], W2
0x0B4C	0x90000E  	MOV	[W14+0], W0
0x0B4E	0x90009E  	MOV	[W14+2], W1
0x0B50	0x781F8A  	PUSH	W10
0x0B52	0x07FBB0  	RCALL	__Mul_FP
0x0B54	0x78054F  	POP	W10
0x0B56	0x980700  	MOV	W0, [W14+0]
0x0B58	0x980711  	MOV	W1, [W14+2]
0x0B5A	0xFB000A  	SE	W10, W0
0x0B5C	0x2000A2  	MOV	#10, W2
0x0B5E	0x090011  	REPEAT	#17
0x0B60	0xD80002  	DIV.S	W0, W2
0x0B62	0x780001  	MOV	W1, W0
0x0B64	0xDD00C2  	SL	W0, #2, W1
0x0B66	0x2ABDA0  	MOV	#lo_addr(__Lib_Sprintf__powers_), W0
0x0B68	0x400201  	ADD	W0, W1, W4
0x0B6A	0xBE0114  	MOV.D	[W4], W2
0x0B6C	0x90000E  	MOV	[W14+0], W0
0x0B6E	0x90009E  	MOV	[W14+2], W1
0x0B70	0x07FBA1  	RCALL	__Mul_FP
0x0B72	0x37001F  	BRA	L_end_scale
L___Lib_Sprintf_scale7:
;__Lib_Sprintf.c,158 :: 		
0x0B74	0xE1546A  	CP.B	W10, #10
0x0B76	0x340018  	BRA LE	L___Lib_Sprintf_scale9
L___Lib_Sprintf_scale362:
;__Lib_Sprintf.c,159 :: 		
0x0B78	0xFB000A  	SE	W10, W0
0x0B7A	0x2000A2  	MOV	#10, W2
0x0B7C	0x090011  	REPEAT	#17
0x0B7E	0xD80002  	DIV.S	W0, W2
0x0B80	0x400069  	ADD	W0, #9, W0
0x0B82	0xDD00C2  	SL	W0, #2, W1
0x0B84	0x2ABDA0  	MOV	#lo_addr(__Lib_Sprintf__powers_), W0
0x0B86	0x400101  	ADD	W0, W1, W2
0x0B88	0xBE0012  	MOV.D	[W2], W0
0x0B8A	0x980700  	MOV	W0, [W14+0]
0x0B8C	0x980711  	MOV	W1, [W14+2]
0x0B8E	0xFB000A  	SE	W10, W0
0x0B90	0x2000A2  	MOV	#10, W2
0x0B92	0x090011  	REPEAT	#17
0x0B94	0xD80002  	DIV.S	W0, W2
0x0B96	0x780001  	MOV	W1, W0
0x0B98	0xDD00C2  	SL	W0, #2, W1
0x0B9A	0x2ABDA0  	MOV	#lo_addr(__Lib_Sprintf__powers_), W0
0x0B9C	0x400201  	ADD	W0, W1, W4
0x0B9E	0xBE0114  	MOV.D	[W4], W2
0x0BA0	0x90000E  	MOV	[W14+0], W0
0x0BA2	0x90009E  	MOV	[W14+2], W1
0x0BA4	0x07FB87  	RCALL	__Mul_FP
0x0BA6	0x370005  	BRA	L_end_scale
L___Lib_Sprintf_scale9:
;__Lib_Sprintf.c,160 :: 		
0x0BA8	0xFB000A  	SE	W10, W0
0x0BAA	0xDD00C2  	SL	W0, #2, W1
0x0BAC	0x2ABDA0  	MOV	#lo_addr(__Lib_Sprintf__powers_), W0
0x0BAE	0x400101  	ADD	W0, W1, W2
0x0BB0	0xBE0012  	MOV.D	[W2], W0
;__Lib_Sprintf.c,161 :: 		
L_end_scale:
0x0BB2	0xFA8000  	ULNK
0x0BB4	0x060000  	RETURN
; end of __Lib_Sprintf_scale
__Lib_Sprintf_fround:
0x09B0	0xFA0004  	LNK	#4
;__Lib_Sprintf.c,132 :: 		
;__Lib_Sprintf.c,134 :: 		
0x09B2	0xB3C6E0  	MOV.B	#110, W0
0x09B4	0xE15400  	CP.B	W10, W0
0x09B6	0x390031  	BRA LTU	L___Lib_Sprintf_fround0
L___Lib_Sprintf_fround355:
;__Lib_Sprintf.c,135 :: 		
0x09B8	0xFB800A  	ZE	W10, W0
0x09BA	0x200642  	MOV	#100, W2
0x09BC	0x090011  	REPEAT	#17
0x09BE	0xD80002  	DIV.S	W0, W2
0x09C0	0x400072  	ADD	W0, #18, W0
0x09C2	0xDD00C2  	SL	W0, #2, W1
0x09C4	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x09C6	0x400101  	ADD	W0, W1, W2
0x09C8	0xBE0012  	MOV.D	[W2], W0
0x09CA	0x781F8A  	PUSH	W10
0x09CC	0x200002  	MOV	#0, W2
0x09CE	0x23F003  	MOV	#16128, W3
0x09D0	0x07FC71  	RCALL	__Mul_FP
0x09D2	0x78054F  	POP	W10
0x09D4	0x980700  	MOV	W0, [W14+0]
0x09D6	0x980711  	MOV	W1, [W14+2]
0x09D8	0xFB800A  	ZE	W10, W0
0x09DA	0x200642  	MOV	#100, W2
0x09DC	0x090011  	REPEAT	#17
0x09DE	0xD80002  	DIV.S	W0, W2
0x09E0	0x780001  	MOV	W1, W0
0x09E2	0x2000A2  	MOV	#10, W2
0x09E4	0x090011  	REPEAT	#17
0x09E6	0xD80002  	DIV.S	W0, W2
0x09E8	0x400069  	ADD	W0, #9, W0
0x09EA	0xDD00C2  	SL	W0, #2, W1
0x09EC	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x09EE	0x400201  	ADD	W0, W1, W4
0x09F0	0xBE0114  	MOV.D	[W4], W2
0x09F2	0x90000E  	MOV	[W14+0], W0
0x09F4	0x90009E  	MOV	[W14+2], W1
0x09F6	0x781F8A  	PUSH	W10
0x09F8	0x07FC5D  	RCALL	__Mul_FP
0x09FA	0x78054F  	POP	W10
0x09FC	0x980700  	MOV	W0, [W14+0]
0x09FE	0x980711  	MOV	W1, [W14+2]
0x0A00	0xFB800A  	ZE	W10, W0
0x0A02	0x2000A2  	MOV	#10, W2
0x0A04	0x090011  	REPEAT	#17
0x0A06	0xD80002  	DIV.S	W0, W2
0x0A08	0x780001  	MOV	W1, W0
0x0A0A	0xDD00C2  	SL	W0, #2, W1
0x0A0C	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0A0E	0x400201  	ADD	W0, W1, W4
0x0A10	0xBE0114  	MOV.D	[W4], W2
0x0A12	0x90000E  	MOV	[W14+0], W0
0x0A14	0x90009E  	MOV	[W14+2], W1
0x0A16	0x07FC4E  	RCALL	__Mul_FP
0x0A18	0x370027  	BRA	L_end_fround
L___Lib_Sprintf_fround0:
;__Lib_Sprintf.c,137 :: 		
0x0A1A	0xE1546A  	CP.B	W10, #10
0x0A1C	0x36001D  	BRA LEU	L___Lib_Sprintf_fround2
L___Lib_Sprintf_fround356:
;__Lib_Sprintf.c,138 :: 		
0x0A1E	0xFB800A  	ZE	W10, W0
0x0A20	0x2000A2  	MOV	#10, W2
0x0A22	0x090011  	REPEAT	#17
0x0A24	0xD80002  	DIV.S	W0, W2
0x0A26	0x400069  	ADD	W0, #9, W0
0x0A28	0xDD00C2  	SL	W0, #2, W1
0x0A2A	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0A2C	0x400101  	ADD	W0, W1, W2
0x0A2E	0xBE0012  	MOV.D	[W2], W0
0x0A30	0x781F8A  	PUSH	W10
0x0A32	0x200002  	MOV	#0, W2
0x0A34	0x23F003  	MOV	#16128, W3
0x0A36	0x07FC3E  	RCALL	__Mul_FP
0x0A38	0x78054F  	POP	W10
0x0A3A	0x980700  	MOV	W0, [W14+0]
0x0A3C	0x980711  	MOV	W1, [W14+2]
0x0A3E	0xFB800A  	ZE	W10, W0
0x0A40	0x2000A2  	MOV	#10, W2
0x0A42	0x090011  	REPEAT	#17
0x0A44	0xD80002  	DIV.S	W0, W2
0x0A46	0x780001  	MOV	W1, W0
0x0A48	0xDD00C2  	SL	W0, #2, W1
0x0A4A	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0A4C	0x400201  	ADD	W0, W1, W4
0x0A4E	0xBE0114  	MOV.D	[W4], W2
0x0A50	0x90000E  	MOV	[W14+0], W0
0x0A52	0x90009E  	MOV	[W14+2], W1
0x0A54	0x07FC2F  	RCALL	__Mul_FP
0x0A56	0x370008  	BRA	L_end_fround
L___Lib_Sprintf_fround2:
;__Lib_Sprintf.c,139 :: 		
0x0A58	0xFB800A  	ZE	W10, W0
0x0A5A	0xDD00C2  	SL	W0, #2, W1
0x0A5C	0x2ABA60  	MOV	#lo_addr(__Lib_Sprintf__npowers_), W0
0x0A5E	0x400101  	ADD	W0, W1, W2
0x0A60	0xBE0012  	MOV.D	[W2], W0
0x0A62	0x200002  	MOV	#0, W2
0x0A64	0x23F003  	MOV	#16128, W3
0x0A66	0x07FC26  	RCALL	__Mul_FP
;__Lib_Sprintf.c,140 :: 		
L_end_fround:
0x0A68	0xFA8000  	ULNK
0x0A6A	0x060000  	RETURN
; end of __Lib_Sprintf_fround
__Compare_Le_Fp:
0x08D6	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1348 :: 		
;__Lib_MathDouble.c,1349 :: 		
0x08D8	0x200014  	MOV	#1, W4
;__Lib_MathDouble.c,1350 :: 		
0x08DA	0x07FC1D  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1351 :: 		
L_end__Compare_Le_Fp:
0x08DC	0xFA8000  	ULNK
0x08DE	0x060000  	RETURN
; end of __Compare_Le_Fp
__Compare_Fp:
0x0116	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1272 :: 		
;__Lib_MathDouble.c,1274 :: 		
0x0118	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.c,1275 :: 		
0x011A	0x000000040184  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.c,1277 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.c,1278 :: 		
0x011E	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.c,1279 :: 		
0x0120	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.c,1280 :: 		
0x0122	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.c,1281 :: 		
0x0124	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.c,1282 :: 		
0x0126	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1283 :: 		
0x0128	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,1284 :: 		
0x012A	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.c,1285 :: 		
0x012C	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.c,1286 :: 		
0x012E	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.c,1287 :: 		
0x0130	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.c,1288 :: 		
0x0132	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.c,1289 :: 		
0x0134	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1290 :: 		
0x0136	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.c,1291 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.c,1292 :: 		
0x0138	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,1293 :: 		
0x013A	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.c,1294 :: 		
0x013C	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.c,1295 :: 		
0x013E	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1296 :: 		
0x0140	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.c,1297 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.c,1298 :: 		
0x0142	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1299 :: 		
CompareFp_adjust:
;__Lib_MathDouble.c,1300 :: 		
0x0144	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.c,1301 :: 		
0x0146	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.c,1302 :: 		
CompareFp_exit:
;__Lib_MathDouble.c,1303 :: 		
0x0148	0x060000  	RETURN
;__Lib_MathDouble.c,1304 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.c,1305 :: 		
0x014A	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1306 :: 		
0x014C	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1307 :: 		
0x014E	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1308 :: 		
0x0150	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1309 :: 		
0x0152	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1310 :: 		
0x0154	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1311 :: 		
0x0156	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1312 :: 		
0x0158	0x060000  	RETURN
;__Lib_MathDouble.c,1313 :: 		
CompareFp__funpack:
;__Lib_MathDouble.c,1314 :: 		
0x015A	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1315 :: 		
0x015C	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1316 :: 		
0x015E	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1317 :: 		
0x0160	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.c,1318 :: 		
0x0162	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1319 :: 		
0x0164	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.c,1320 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.c,1321 :: 		
0x0166	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1322 :: 		
0x0168	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1323 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.c,1324 :: 		
0x016A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1325 :: 		
0x016C	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.c,1326 :: 		
0x016E	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1327 :: 		
CompareFp_infinite:
;__Lib_MathDouble.c,1328 :: 		
0x0170	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1329 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.c,1330 :: 		
0x0172	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1331 :: 		
0x0174	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.c,1332 :: 		
0x0176	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1333 :: 		
CompareFp_normalize:
;__Lib_MathDouble.c,1334 :: 		
0x0178	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1335 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.c,1336 :: 		
0x017A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1337 :: 		
0x017C	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1338 :: 		
0x017E	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.c,1339 :: 		
0x0180	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1340 :: 		
0x0182	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1343 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.c,1345 :: 		
L_end__Compare_Fp:
0x0184	0xFA8000  	ULNK
0x0186	0x060000  	RETURN
; end of __Compare_Fp
__Compare_Ge_Fp:
0x08B4	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1354 :: 		
;__Lib_MathDouble.c,1355 :: 		
0x08B6	0x2FFFF4  	MOV	#65535, W4
;__Lib_MathDouble.c,1356 :: 		
0x08B8	0x07FC2E  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1357 :: 		
L_end__Compare_Ge_Fp:
0x08BA	0xFA8000  	ULNK
0x08BC	0x060000  	RETURN
; end of __Compare_Ge_Fp
__Float2Longword:
0x0848	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,387 :: 		
;__Lib_MathDouble.c,389 :: 		
0x084A	0x070002  	RCALL	Float2Longword_fixunssfsi
;__Lib_MathDouble.c,390 :: 		
0x084C	0x0000000408B0  	GOTO	the_end__Float2Longword
;__Lib_MathDouble.c,393 :: 		
Float2Longword_fixunssfsi:
;__Lib_MathDouble.c,394 :: 		
0x0850	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,395 :: 		
0x0852	0x070019  	RCALL	Float2Longword_funpack
;__Lib_MathDouble.c,396 :: 		
0x0854	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,397 :: 		
0x0856	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,398 :: 		
0x0858	0xA3F803  	BTST.Z	W3, #15
;__Lib_MathDouble.c,399 :: 		
0x085A	0x3A0013  	BRA NZ	Float2Longword_returnzero
;__Lib_MathDouble.c,400 :: 		
0x085C	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,401 :: 		
0x085E	0x320010  	BRA Z	Float2Longword_exit
;__Lib_MathDouble.c,402 :: 		
0x0860	0x350009  	BRA LT	Float2Longword_shiftright
;__Lib_MathDouble.c,403 :: 		
0x0862	0xE12869  	CP	W5, #9
;__Lib_MathDouble.c,404 :: 		
0x0864	0x350002  	BRA LT	Float2Longword_shiftleft
;__Lib_MathDouble.c,405 :: 		
0x0866	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,406 :: 		
0x0868	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,407 :: 		
Float2Longword_shiftleft:
;__Lib_MathDouble.c,408 :: 		
0x086A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,409 :: 		
0x086C	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,410 :: 		
0x086E	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,411 :: 		
0x0870	0x3AFFFC  	BRA NZ	Float2Longword_shiftleft
;__Lib_MathDouble.c,412 :: 		
0x0872	0x060000  	RETURN
;__Lib_MathDouble.c,413 :: 		
Float2Longword_shiftright:
;__Lib_MathDouble.c,414 :: 		
0x0874	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,415 :: 		
0x0876	0x350005  	BRA LT	Float2Longword_returnzero
;__Lib_MathDouble.c,416 :: 		
Float2Longword_shiftrightloop:
;__Lib_MathDouble.c,417 :: 		
0x0878	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,418 :: 		
0x087A	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,419 :: 		
0x087C	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,420 :: 		
0x087E	0x3AFFFC  	BRA NZ	Float2Longword_shiftrightloop
;__Lib_MathDouble.c,421 :: 		
Float2Longword_exit:
;__Lib_MathDouble.c,422 :: 		
0x0880	0x060000  	RETURN
;__Lib_MathDouble.c,423 :: 		
Float2Longword_returnzero:
;__Lib_MathDouble.c,424 :: 		
0x0882	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,425 :: 		
0x0884	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,426 :: 		
Float2Longword_funpack:
;__Lib_MathDouble.c,427 :: 		
0x0886	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,428 :: 		
0x0888	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,429 :: 		
0x088A	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,430 :: 		
0x088C	0x320008  	BRA Z	Float2Longword_zeroorsub
;__Lib_MathDouble.c,431 :: 		
0x088E	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,432 :: 		
0x0890	0x320002  	BRA Z	Float2Longword_nanorinf
;__Lib_MathDouble.c,433 :: 		
Float2Longword_finitereturn:
;__Lib_MathDouble.c,434 :: 		
0x0892	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,435 :: 		
0x0894	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,436 :: 		
Float2Longword_nanorinf:
;__Lib_MathDouble.c,437 :: 		
0x0896	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,438 :: 		
0x0898	0x320001  	BRA Z	Float2Longword_infinite
;__Lib_MathDouble.c,439 :: 		
0x089A	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,440 :: 		
Float2Longword_infinite:
;__Lib_MathDouble.c,441 :: 		
0x089C	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,442 :: 		
Float2Longword_zeroorsub:
;__Lib_MathDouble.c,443 :: 		
0x089E	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,444 :: 		
0x08A0	0x3A0002  	BRA NZ	Float2Longword_subnormal
;__Lib_MathDouble.c,445 :: 		
0x08A2	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,446 :: 		
Float2Longword_normalize:
;__Lib_MathDouble.c,447 :: 		
0x08A4	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,448 :: 		
Float2Longword_subnormal:
;__Lib_MathDouble.c,449 :: 		
0x08A6	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,450 :: 		
0x08A8	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,451 :: 		
0x08AA	0x3BFFFC  	BRA NN	Float2Longword_normalize
;__Lib_MathDouble.c,452 :: 		
0x08AC	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,453 :: 		
0x08AE	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,455 :: 		
the_end__Float2Longword:
;__Lib_MathDouble.c,457 :: 		
L_end__Float2Longword:
0x08B0	0xFA8000  	ULNK
0x08B2	0x060000  	RETURN
; end of __Float2Longword
__Sub_FP:
0x08CC	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x08CE	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.c,832 :: 		
0x08D0	0x07FD7E  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x08D2	0xFA8000  	ULNK
0x08D4	0x060000  	RETURN
; end of __Sub_FP
__AddSub_FP:
0x03CE	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x03D0	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x03D2	0x000000040536  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x03D6	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,590 :: 		
0x03D8	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,591 :: 		
0x03DA	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,592 :: 		
0x03DC	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x03DE	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x03E0	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,595 :: 		
0x03E2	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x03E4	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,598 :: 		
0x03E6	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x03E8	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.c,600 :: 		
0x03EA	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x03EC	0xD00509  	SL	W9, W10
;__Lib_MathDouble.c,602 :: 		
0x03EE	0xD00603  	SL	W3, W12
;__Lib_MathDouble.c,603 :: 		
0x03F0	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,604 :: 		
0x03F2	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.c,605 :: 		
0x03F4	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x03F6	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x03F8	0x880039  	MOV	W9, W3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x03FA	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x03FC	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.c,612 :: 		
0x03FE	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x0400	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.c,614 :: 		
0x0402	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.c,615 :: 		
0x0404	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.c,616 :: 		
0x0406	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x0408	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.c,619 :: 		
0x040A	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x040C	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,621 :: 		
0x040E	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x0410	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,624 :: 		
0x0412	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,625 :: 		
0x0414	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.c,626 :: 		
0x0416	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x0418	0x880006  	MOV	W6, W0
;__Lib_MathDouble.c,628 :: 		
0x041A	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,629 :: 		
0x041C	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.c,630 :: 		
0x041E	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.c,631 :: 		
0x0420	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x0422	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,634 :: 		
0x0424	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,635 :: 		
0x0426	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.c,636 :: 		
0x0428	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.c,637 :: 		
0x042A	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x042C	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,640 :: 		
0x042E	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x0430	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.c,643 :: 		
0x0432	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.c,644 :: 		
0x0434	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x0436	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.c,646 :: 		
0x0438	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x043A	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.c,649 :: 		
0x043C	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x043E	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.c,651 :: 		
0x0440	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,652 :: 		
0x0442	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,653 :: 		
0x0444	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,654 :: 		
0x0446	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,655 :: 		
0x0448	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,656 :: 		
0x044A	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x044C	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,659 :: 		
0x044E	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x0450	0xE20016  	CP0	W11
;__Lib_MathDouble.c,662 :: 		
0x0452	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x0454	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,664 :: 		
0x0456	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,665 :: 		
0x0458	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,666 :: 		
0x045A	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.c,667 :: 		
0x045C	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,668 :: 		
0x045E	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x0460	0xE20016  	CP0	W11
;__Lib_MathDouble.c,671 :: 		
0x0462	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x0464	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,673 :: 		
0x0466	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,674 :: 		
0x0468	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,675 :: 		
0x046A	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x046C	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x046E	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,679 :: 		
0x0470	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x0472	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,682 :: 		
0x0474	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x0476	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,685 :: 		
0x0478	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x047A	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x047C	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,690 :: 		
0x047E	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,691 :: 		
0x0480	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x0482	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,694 :: 		
0x0484	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x0486	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,696 :: 		
0x0488	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x048A	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x048C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,701 :: 		
0x048E	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x0490	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,704 :: 		
0x0492	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x0494	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,706 :: 		
0x0496	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,707 :: 		
0x0498	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,708 :: 		
0x049A	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x049C	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,710 :: 		
0x049E	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x04A0	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,713 :: 		
0x04A2	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,714 :: 		
0x04A4	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x04A6	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,716 :: 		
0x04A8	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x04AA	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,718 :: 		
0x04AC	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x04AE	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x04B0	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x04B2	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,725 :: 		
0x04B4	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,726 :: 		
0x04B6	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,727 :: 		
0x04B8	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x04BA	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,730 :: 		
0x04BC	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,731 :: 		
0x04BE	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x04C0	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,734 :: 		
0x04C2	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,735 :: 		
0x04C4	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x04C6	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,737 :: 		
0x04C8	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,738 :: 		
0x04CA	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,739 :: 		
0x04CC	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x04CE	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,742 :: 		
0x04D0	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,743 :: 		
0x04D2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,744 :: 		
0x04D4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,745 :: 		
0x04D6	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,746 :: 		
0x04D8	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x04DA	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x04DC	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,750 :: 		
0x04DE	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,751 :: 		
0x04E0	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,752 :: 		
0x04E2	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x04E4	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,754 :: 		
0x04E6	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,755 :: 		
0x04E8	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,756 :: 		
0x04EA	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x04EC	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,758 :: 		
0x04EE	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,759 :: 		
0x04F0	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x04F2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,761 :: 		
0x04F4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x04F6	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,764 :: 		
0x04F8	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,765 :: 		
0x04FA	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x04FC	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,767 :: 		
0x04FE	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,768 :: 		
0x0500	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,769 :: 		
0x0502	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,770 :: 		
0x0504	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x0506	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x0508	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,775 :: 		
0x050A	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x050C	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,778 :: 		
0x050E	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,779 :: 		
0x0510	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,780 :: 		
0x0512	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x0514	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,782 :: 		
0x0516	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x0518	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,785 :: 		
0x051A	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x051C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,788 :: 		
0x051E	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x0520	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x0522	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x0524	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,794 :: 		
0x0526	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x0528	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x052A	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x052C	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,800 :: 		
0x052E	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,801 :: 		
0x0530	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x0532	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,803 :: 		
0x0534	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x0536	0xFA8000  	ULNK
0x0538	0x060000  	RETURN
; end of __AddSub_FP
_Debug_UART_Write:
;motor.c,8 :: 		void Debug_UART_Write(char* text){
;motor.c,9 :: 		UART1_Write_Text(text);
0x22C6	0x07FEF3  	RCALL	_UART1_Write_Text
;motor.c,10 :: 		}
L_end_Debug_UART_Write:
0x22C8	0x060000  	RETURN
; end of _Debug_UART_Write
_UART1_Write_Text:
0x20AE	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.c,59 :: 		
;__Lib_UART_12_p30.c,60 :: 		
; counter start address is: 2 (W1)
0x20B0	0xEF2002  	CLR	W1
;__Lib_UART_12_p30.c,62 :: 		
; data_ start address is: 0 (W0)
0x20B2	0x78401A  	MOV.B	[W10], W0
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
;__Lib_UART_12_p30.c,63 :: 		
L_UART1_Write_Text2:
; data_ start address is: 0 (W0)
; counter start address is: 2 (W1)
0x20B4	0xE10460  	CP.B	W0, #0
0x20B6	0x32000A  	BRA Z	L_UART1_Write_Text3
L__UART1_Write_Text49:
;__Lib_UART_12_p30.c,64 :: 		
0x20B8	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0x20BA	0xFB8500  	ZE	W0, W10
0x20BC	0x07F400  	RCALL	_UART1_Write
0x20BE	0x78054F  	POP	W10
;__Lib_UART_12_p30.c,65 :: 		
0x20C0	0x40C061  	ADD.B	W1, #1, W0
0x20C2	0x784080  	MOV.B	W0, W1
;__Lib_UART_12_p30.c,66 :: 		
0x20C4	0xFB8000  	ZE	W0, W0
0x20C6	0x450000  	ADD	W10, W0, W0
; data_ start address is: 0 (W0)
0x20C8	0x784010  	MOV.B	[W0], W0
;__Lib_UART_12_p30.c,67 :: 		
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0x20CA	0x37FFF4  	BRA	L_UART1_Write_Text2
L_UART1_Write_Text3:
;__Lib_UART_12_p30.c,68 :: 		
L_end_UART1_Write_Text:
0x20CC	0xFA8000  	ULNK
0x20CE	0x060000  	RETURN
; end of _UART1_Write_Text
_UART1_Write:
0x08BE	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.c,53 :: 		
;__Lib_UART_12_p30.c,54 :: 		
L_UART1_Write0:
0x08C0	0xAF020F  	BTSC	U1STA, #8
0x08C2	0x370001  	BRA	L_UART1_Write1
0x08C4	0x37FFFD  	BRA	L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_12_p30.c,55 :: 		
0x08C6	0x88108A  	MOV	W10, U1TXREG
;__Lib_UART_12_p30.c,56 :: 		
L_end_UART1_Write:
0x08C8	0xFA8000  	ULNK
0x08CA	0x060000  	RETURN
; end of _UART1_Write
_timer1_interrupt:
0x28D4	0xF80034  	PUSH	PSVPAG
0x28D6	0xF80036  	PUSH	RCOUNT
0x28D8	0x781F80  	PUSH	W0
0x28DA	0x200020  	MOV	#2, W0
0x28DC	0x09000C  	REPEAT	#12
0x28DE	0x781FB0  	PUSH	[W0++]
;EBB_DPX.c,97 :: 		onTimer1Interrupt {
;EBB_DPX.c,99 :: 		timer1_counter ++;
0x28E0	0x200011  	MOV	#1, W1
0x28E2	0x2080E0  	MOV	#lo_addr(_timer1_counter), W0
0x28E4	0x408810  	ADD	W1, [W0], [W0]
;EBB_DPX.c,100 :: 		if (timer1_counter == 300){
0x28E6	0x804071  	MOV	_timer1_counter, W1
0x28E8	0x2012C0  	MOV	#300, W0
0x28EA	0xE10800  	CP	W1, W0
0x28EC	0x3A0008  	BRA NZ	L_timer1_interrupt151
L__timer1_interrupt316:
;EBB_DPX.c,101 :: 		ebb_current_state = EBB_OFF;
0x28EE	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x28F0	0xEF2000  	CLR	W0
0x28F2	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,102 :: 		is_requested_movement = ON;
0x28F4	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x28F6	0xB3C010  	MOV.B	#1, W0
0x28F8	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,103 :: 		ebb_target_pos = 8;
0x28FA	0x200080  	MOV	#8, W0
0x28FC	0x8844D0  	MOV	W0, _ebb_target_pos
;EBB_DPX.c,104 :: 		}
L_timer1_interrupt151:
;EBB_DPX.c,105 :: 		if (timer1_counter == 600){
0x28FE	0x804071  	MOV	_timer1_counter, W1
0x2900	0x202580  	MOV	#600, W0
0x2902	0xE10800  	CP	W1, W0
0x2904	0x3A0008  	BRA NZ	L_timer1_interrupt152
L__timer1_interrupt317:
;EBB_DPX.c,106 :: 		ebb_current_state = EBB_OFF;
0x2906	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2908	0xEF2000  	CLR	W0
0x290A	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,107 :: 		is_requested_movement = ON;
0x290C	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x290E	0xB3C010  	MOV.B	#1, W0
0x2910	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,108 :: 		ebb_target_pos = 7;
0x2912	0x200070  	MOV	#7, W0
0x2914	0x8844D0  	MOV	W0, _ebb_target_pos
;EBB_DPX.c,109 :: 		}
L_timer1_interrupt152:
;EBB_DPX.c,110 :: 		if (timer1_counter == 900){
0x2916	0x804071  	MOV	_timer1_counter, W1
0x2918	0x203840  	MOV	#900, W0
0x291A	0xE10800  	CP	W1, W0
0x291C	0x3A0008  	BRA NZ	L_timer1_interrupt153
L__timer1_interrupt318:
;EBB_DPX.c,111 :: 		ebb_current_state = EBB_OFF;
0x291E	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2920	0xEF2000  	CLR	W0
0x2922	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,112 :: 		is_requested_movement = ON;
0x2924	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x2926	0xB3C010  	MOV.B	#1, W0
0x2928	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,113 :: 		ebb_target_pos = 6;
0x292A	0x200060  	MOV	#6, W0
0x292C	0x8844D0  	MOV	W0, _ebb_target_pos
;EBB_DPX.c,114 :: 		}
L_timer1_interrupt153:
;EBB_DPX.c,115 :: 		if (timer1_counter == 1200){
0x292E	0x804071  	MOV	_timer1_counter, W1
0x2930	0x204B00  	MOV	#1200, W0
0x2932	0xE10800  	CP	W1, W0
0x2934	0x3A0008  	BRA NZ	L_timer1_interrupt154
L__timer1_interrupt319:
;EBB_DPX.c,116 :: 		ebb_current_state = EBB_OFF;
0x2936	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2938	0xEF2000  	CLR	W0
0x293A	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,117 :: 		is_requested_movement = ON;
0x293C	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x293E	0xB3C010  	MOV.B	#1, W0
0x2940	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,118 :: 		ebb_target_pos = 5;
0x2942	0x200050  	MOV	#5, W0
0x2944	0x8844D0  	MOV	W0, _ebb_target_pos
;EBB_DPX.c,119 :: 		}
L_timer1_interrupt154:
;EBB_DPX.c,120 :: 		if (timer1_counter == 1500){
0x2946	0x804071  	MOV	_timer1_counter, W1
0x2948	0x205DC0  	MOV	#1500, W0
0x294A	0xE10800  	CP	W1, W0
0x294C	0x3A0008  	BRA NZ	L_timer1_interrupt155
L__timer1_interrupt320:
;EBB_DPX.c,121 :: 		ebb_current_state = EBB_OFF;
0x294E	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2950	0xEF2000  	CLR	W0
0x2952	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,122 :: 		is_requested_movement = ON;
0x2954	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x2956	0xB3C010  	MOV.B	#1, W0
0x2958	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,123 :: 		ebb_target_pos = 6;
0x295A	0x200060  	MOV	#6, W0
0x295C	0x8844D0  	MOV	W0, _ebb_target_pos
;EBB_DPX.c,124 :: 		}
L_timer1_interrupt155:
;EBB_DPX.c,125 :: 		if (timer1_counter == 1800){
0x295E	0x804071  	MOV	_timer1_counter, W1
0x2960	0x207080  	MOV	#1800, W0
0x2962	0xE10800  	CP	W1, W0
0x2964	0x3A000A  	BRA NZ	L_timer1_interrupt156
L__timer1_interrupt321:
;EBB_DPX.c,126 :: 		ebb_current_state = EBB_OFF;
0x2966	0x208111  	MOV	#lo_addr(_ebb_current_state), W1
0x2968	0xEF2000  	CLR	W0
0x296A	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,127 :: 		is_requested_movement = ON;
0x296C	0x208031  	MOV	#lo_addr(_is_requested_movement), W1
0x296E	0xB3C010  	MOV.B	#1, W0
0x2970	0x784880  	MOV.B	W0, [W1]
;EBB_DPX.c,128 :: 		ebb_target_pos = 7;
0x2972	0x200070  	MOV	#7, W0
0x2974	0x8844D0  	MOV	W0, _ebb_target_pos
;EBB_DPX.c,129 :: 		timer1_counter = 0;
0x2976	0xEF2000  	CLR	W0
0x2978	0x884070  	MOV	W0, _timer1_counter
;EBB_DPX.c,130 :: 		}
L_timer1_interrupt156:
;EBB_DPX.c,142 :: 		clearTimer1();
0x297A	0xA96084  	BCLR	IFS0bits, #3
;EBB_DPX.c,143 :: 		}
L_end_timer1_interrupt:
0x297C	0x2001A0  	MOV	#26, W0
0x297E	0x09000C  	REPEAT	#12
0x2980	0x78104F  	POP	[W0--]
0x2982	0x78004F  	POP	W0
0x2984	0xF90036  	POP	RCOUNT
0x2986	0xF90034  	POP	PSVPAG
0x2988	0x064000  	RETFIE
; end of _timer1_interrupt
;,0 :: _initBlock_0 [108]
; Containing: ?ICS?lstr1___Lib_Sprintf [7]
;             ?ICS_dstr [100]
;             ?ICS_blink_counter [1]
0x2B3A	0x6E28 ;_initBlock_0+0 : ?ICS?lstr1___Lib_Sprintf at 0x2B3A
0x2B3C	0x6C75 ;_initBlock_0+2
0x2B3E	0x296C ;_initBlock_0+4
0x2B40	0x0000 ;_initBlock_0+6 : ?ICS_dstr at 0x2B41
0x2B42	0x0000 ;_initBlock_0+8
0x2B44	0x0000 ;_initBlock_0+10
0x2B46	0x0000 ;_initBlock_0+12
0x2B48	0x0000 ;_initBlock_0+14
0x2B4A	0x0000 ;_initBlock_0+16
0x2B4C	0x0000 ;_initBlock_0+18
0x2B4E	0x0000 ;_initBlock_0+20
0x2B50	0x0000 ;_initBlock_0+22
0x2B52	0x0000 ;_initBlock_0+24
0x2B54	0x0000 ;_initBlock_0+26
0x2B56	0x0000 ;_initBlock_0+28
0x2B58	0x0000 ;_initBlock_0+30
0x2B5A	0x0000 ;_initBlock_0+32
0x2B5C	0x0000 ;_initBlock_0+34
0x2B5E	0x0000 ;_initBlock_0+36
0x2B60	0x0000 ;_initBlock_0+38
0x2B62	0x0000 ;_initBlock_0+40
0x2B64	0x0000 ;_initBlock_0+42
0x2B66	0x0000 ;_initBlock_0+44
0x2B68	0x0000 ;_initBlock_0+46
0x2B6A	0x0000 ;_initBlock_0+48
0x2B6C	0x0000 ;_initBlock_0+50
0x2B6E	0x0000 ;_initBlock_0+52
0x2B70	0x0000 ;_initBlock_0+54
0x2B72	0x0000 ;_initBlock_0+56
0x2B74	0x0000 ;_initBlock_0+58
0x2B76	0x0000 ;_initBlock_0+60
0x2B78	0x0000 ;_initBlock_0+62
0x2B7A	0x0000 ;_initBlock_0+64
0x2B7C	0x0000 ;_initBlock_0+66
0x2B7E	0x0000 ;_initBlock_0+68
0x2B80	0x0000 ;_initBlock_0+70
0x2B82	0x0000 ;_initBlock_0+72
0x2B84	0x0000 ;_initBlock_0+74
0x2B86	0x0000 ;_initBlock_0+76
0x2B88	0x0000 ;_initBlock_0+78
0x2B8A	0x0000 ;_initBlock_0+80
0x2B8C	0x0000 ;_initBlock_0+82
0x2B8E	0x0000 ;_initBlock_0+84
0x2B90	0x0000 ;_initBlock_0+86
0x2B92	0x0000 ;_initBlock_0+88
0x2B94	0x0000 ;_initBlock_0+90
0x2B96	0x0000 ;_initBlock_0+92
0x2B98	0x0000 ;_initBlock_0+94
0x2B9A	0x0000 ;_initBlock_0+96
0x2B9C	0x0000 ;_initBlock_0+98
0x2B9E	0x0000 ;_initBlock_0+100
0x2BA0	0x0000 ;_initBlock_0+102
0x2BA2	0x0000 ;_initBlock_0+104
0x2BA4	0x0000 ;_initBlock_0+106 : ?ICS_blink_counter at 0x2BA5
; end of _initBlock_0
;__Lib_Sprintf.c,83 :: __Lib_Sprintf__npowers_ [52]
0x2BA6	0x0000 ;__Lib_Sprintf__npowers_+0
0x2BA8	0x3F80 ;__Lib_Sprintf__npowers_+2
0x2BAA	0xCCCD ;__Lib_Sprintf__npowers_+4
0x2BAC	0x3DCC ;__Lib_Sprintf__npowers_+6
0x2BAE	0xD70A ;__Lib_Sprintf__npowers_+8
0x2BB0	0x3C23 ;__Lib_Sprintf__npowers_+10
0x2BB2	0x126F ;__Lib_Sprintf__npowers_+12
0x2BB4	0x3A83 ;__Lib_Sprintf__npowers_+14
0x2BB6	0xB717 ;__Lib_Sprintf__npowers_+16
0x2BB8	0x38D1 ;__Lib_Sprintf__npowers_+18
0x2BBA	0xC5AC ;__Lib_Sprintf__npowers_+20
0x2BBC	0x3727 ;__Lib_Sprintf__npowers_+22
0x2BBE	0x37BD ;__Lib_Sprintf__npowers_+24
0x2BC0	0x3586 ;__Lib_Sprintf__npowers_+26
0x2BC2	0xBF95 ;__Lib_Sprintf__npowers_+28
0x2BC4	0x33D6 ;__Lib_Sprintf__npowers_+30
0x2BC6	0xCC77 ;__Lib_Sprintf__npowers_+32
0x2BC8	0x322B ;__Lib_Sprintf__npowers_+34
0x2BCA	0x705F ;__Lib_Sprintf__npowers_+36
0x2BCC	0x3089 ;__Lib_Sprintf__npowers_+38
0x2BCE	0xE6FF ;__Lib_Sprintf__npowers_+40
0x2BD0	0x2EDB ;__Lib_Sprintf__npowers_+42
0x2BD2	0xE508 ;__Lib_Sprintf__npowers_+44
0x2BD4	0x1E3C ;__Lib_Sprintf__npowers_+46
0x2BD6	0x4260 ;__Lib_Sprintf__npowers_+48
0x2BD8	0x0DA2 ;__Lib_Sprintf__npowers_+50
; end of __Lib_Sprintf__npowers_
;__Lib_Sprintf.c,66 :: __Lib_Sprintf__powers_ [52]
0x2BDA	0x0000 ;__Lib_Sprintf__powers_+0
0x2BDC	0x3F80 ;__Lib_Sprintf__powers_+2
0x2BDE	0x0000 ;__Lib_Sprintf__powers_+4
0x2BE0	0x4120 ;__Lib_Sprintf__powers_+6
0x2BE2	0x0000 ;__Lib_Sprintf__powers_+8
0x2BE4	0x42C8 ;__Lib_Sprintf__powers_+10
0x2BE6	0x0000 ;__Lib_Sprintf__powers_+12
0x2BE8	0x447A ;__Lib_Sprintf__powers_+14
0x2BEA	0x4000 ;__Lib_Sprintf__powers_+16
0x2BEC	0x461C ;__Lib_Sprintf__powers_+18
0x2BEE	0x5000 ;__Lib_Sprintf__powers_+20
0x2BF0	0x47C3 ;__Lib_Sprintf__powers_+22
0x2BF2	0x2400 ;__Lib_Sprintf__powers_+24
0x2BF4	0x4974 ;__Lib_Sprintf__powers_+26
0x2BF6	0x9680 ;__Lib_Sprintf__powers_+28
0x2BF8	0x4B18 ;__Lib_Sprintf__powers_+30
0x2BFA	0xBC20 ;__Lib_Sprintf__powers_+32
0x2BFC	0x4CBE ;__Lib_Sprintf__powers_+34
0x2BFE	0x6B28 ;__Lib_Sprintf__powers_+36
0x2C00	0x4E6E ;__Lib_Sprintf__powers_+38
0x2C02	0x02F9 ;__Lib_Sprintf__powers_+40
0x2C04	0x5015 ;__Lib_Sprintf__powers_+42
0x2C06	0x78EC ;__Lib_Sprintf__powers_+44
0x2C08	0x60AD ;__Lib_Sprintf__powers_+46
0x2C0A	0xF2CA ;__Lib_Sprintf__powers_+48
0x2C0C	0x7149 ;__Lib_Sprintf__powers_+50
; end of __Lib_Sprintf__powers_
;__Lib_Sprintf.c,115 :: __Lib_Sprintf_octpowers [48]
0x2C0E	0x0001 ;__Lib_Sprintf_octpowers+0
0x2C10	0x0000 ;__Lib_Sprintf_octpowers+2
0x2C12	0x0008 ;__Lib_Sprintf_octpowers+4
0x2C14	0x0000 ;__Lib_Sprintf_octpowers+6
0x2C16	0x0040 ;__Lib_Sprintf_octpowers+8
0x2C18	0x0000 ;__Lib_Sprintf_octpowers+10
0x2C1A	0x0200 ;__Lib_Sprintf_octpowers+12
0x2C1C	0x0000 ;__Lib_Sprintf_octpowers+14
0x2C1E	0x1000 ;__Lib_Sprintf_octpowers+16
0x2C20	0x0000 ;__Lib_Sprintf_octpowers+18
0x2C22	0x8000 ;__Lib_Sprintf_octpowers+20
0x2C24	0x0000 ;__Lib_Sprintf_octpowers+22
0x2C26	0x0000 ;__Lib_Sprintf_octpowers+24
0x2C28	0x0004 ;__Lib_Sprintf_octpowers+26
0x2C2A	0x0000 ;__Lib_Sprintf_octpowers+28
0x2C2C	0x0020 ;__Lib_Sprintf_octpowers+30
0x2C2E	0x0000 ;__Lib_Sprintf_octpowers+32
0x2C30	0x0100 ;__Lib_Sprintf_octpowers+34
0x2C32	0x0000 ;__Lib_Sprintf_octpowers+36
0x2C34	0x0800 ;__Lib_Sprintf_octpowers+38
0x2C36	0x0000 ;__Lib_Sprintf_octpowers+40
0x2C38	0x4000 ;__Lib_Sprintf_octpowers+42
0x2C3A	0x0000 ;__Lib_Sprintf_octpowers+44
0x2C3C	0x0000 ;__Lib_Sprintf_octpowers+46
; end of __Lib_Sprintf_octpowers
;__Lib_Sprintf.c,104 :: __Lib_Sprintf_dpowers [40]
0x2C3E	0x0001 ;__Lib_Sprintf_dpowers+0
0x2C40	0x0000 ;__Lib_Sprintf_dpowers+2
0x2C42	0x000A ;__Lib_Sprintf_dpowers+4
0x2C44	0x0000 ;__Lib_Sprintf_dpowers+6
0x2C46	0x0064 ;__Lib_Sprintf_dpowers+8
0x2C48	0x0000 ;__Lib_Sprintf_dpowers+10
0x2C4A	0x03E8 ;__Lib_Sprintf_dpowers+12
0x2C4C	0x0000 ;__Lib_Sprintf_dpowers+14
0x2C4E	0x2710 ;__Lib_Sprintf_dpowers+16
0x2C50	0x0000 ;__Lib_Sprintf_dpowers+18
0x2C52	0x86A0 ;__Lib_Sprintf_dpowers+20
0x2C54	0x0001 ;__Lib_Sprintf_dpowers+22
0x2C56	0x4240 ;__Lib_Sprintf_dpowers+24
0x2C58	0x000F ;__Lib_Sprintf_dpowers+26
0x2C5A	0x9680 ;__Lib_Sprintf_dpowers+28
0x2C5C	0x0098 ;__Lib_Sprintf_dpowers+30
0x2C5E	0xE100 ;__Lib_Sprintf_dpowers+32
0x2C60	0x05F5 ;__Lib_Sprintf_dpowers+34
0x2C62	0xCA00 ;__Lib_Sprintf_dpowers+36
0x2C64	0x3B9A ;__Lib_Sprintf_dpowers+38
; end of __Lib_Sprintf_dpowers
;__Lib_Sprintf.c,110 :: __Lib_Sprintf_hexpowers [32]
0x2C66	0x0001 ;__Lib_Sprintf_hexpowers+0
0x2C68	0x0000 ;__Lib_Sprintf_hexpowers+2
0x2C6A	0x0010 ;__Lib_Sprintf_hexpowers+4
0x2C6C	0x0000 ;__Lib_Sprintf_hexpowers+6
0x2C6E	0x0100 ;__Lib_Sprintf_hexpowers+8
0x2C70	0x0000 ;__Lib_Sprintf_hexpowers+10
0x2C72	0x1000 ;__Lib_Sprintf_hexpowers+12
0x2C74	0x0000 ;__Lib_Sprintf_hexpowers+14
0x2C76	0x0000 ;__Lib_Sprintf_hexpowers+16
0x2C78	0x0001 ;__Lib_Sprintf_hexpowers+18
0x2C7A	0x0000 ;__Lib_Sprintf_hexpowers+20
0x2C7C	0x0010 ;__Lib_Sprintf_hexpowers+22
0x2C7E	0x0000 ;__Lib_Sprintf_hexpowers+24
0x2C80	0x0100 ;__Lib_Sprintf_hexpowers+26
0x2C82	0x0000 ;__Lib_Sprintf_hexpowers+28
0x2C84	0x1000 ;__Lib_Sprintf_hexpowers+30
; end of __Lib_Sprintf_hexpowers
;,0 :: _initBlock_6 [34]
; Containing: hexb [17]
;             hexs [17]
0x2C86	0x3130 ;_initBlock_6+0 : hexb at 0x2C86
0x2C88	0x3332 ;_initBlock_6+2
0x2C8A	0x3534 ;_initBlock_6+4
0x2C8C	0x3736 ;_initBlock_6+6
0x2C8E	0x3938 ;_initBlock_6+8
0x2C90	0x4241 ;_initBlock_6+10
0x2C92	0x4443 ;_initBlock_6+12
0x2C94	0x4645 ;_initBlock_6+14
0x2C96	0x3000 ;_initBlock_6+16 : hexs at 0x2C97
0x2C98	0x3231 ;_initBlock_6+18
0x2C9A	0x3433 ;_initBlock_6+20
0x2C9C	0x3635 ;_initBlock_6+22
0x2C9E	0x3837 ;_initBlock_6+24
0x2CA0	0x6139 ;_initBlock_6+26
0x2CA2	0x6362 ;_initBlock_6+28
0x2CA4	0x6564 ;_initBlock_6+30
0x2CA6	0x0066 ;_initBlock_6+32
; end of _initBlock_6
;,0 :: _initBlock_7 [26]
; Containing: ?lstr_1_EBB_DPX [13]
;             ?lstr_2_EBB_DPX [13]
0x2CA8	0x4545 ;_initBlock_7+0 : ?lstr_1_EBB_DPX at 0x2CA8
0x2CAA	0x5250 ;_initBlock_7+2
0x2CAC	0x4D4F ;_initBlock_7+4
0x2CAE	0x203A ;_initBlock_7+6
0x2CB0	0x7525 ;_initBlock_7+8
0x2CB2	0x0A0D ;_initBlock_7+10
0x2CB4	0x5000 ;_initBlock_7+12 : ?lstr_2_EBB_DPX at 0x2CB5
0x2CB6	0x534F ;_initBlock_7+14
0x2CB8	0x4E43 ;_initBlock_7+16
0x2CBA	0x3A54 ;_initBlock_7+18
0x2CBC	0x2520 ;_initBlock_7+20
0x2CBE	0x0D75 ;_initBlock_7+22
0x2CC0	0x000A ;_initBlock_7+24
; end of _initBlock_7
;EBB_DPX.c,0 :: ?ICS_timer2_counter [2]
0x2CC2	0x0000 ;?ICS_timer2_counter+0
; end of ?ICS_timer2_counter
;EBB_DPX.c,0 :: ?ICS_can_txPriority [2]
0x2CC4	0x00FD ;?ICS_can_txPriority+0
; end of ?ICS_can_txPriority
;EBB_DPX.c,0 :: ?ICS_error_flag [2]
0x2CC6	0x0000 ;?ICS_error_flag+0
; end of ?ICS_error_flag
;EBB_DPX.c,0 :: ?ICS_calibration_on_off [2]
0x2CC8	0x0000 ;?ICS_calibration_on_off+0
; end of ?ICS_calibration_on_off
;EBB_DPX.c,0 :: ?ICS_can_err [2]
0x2CCA	0x0000 ;?ICS_can_err+0
; end of ?ICS_can_err
;EBB_DPX.c,0 :: ?ICS_timer1_counter [2]
0x2CCC	0x0000 ;?ICS_timer1_counter+0
; end of ?ICS_timer1_counter
;EBB_DPX.c,8 :: _PRESCALER_VALUES [8]
0x2CCE	0x0001 ;_PRESCALER_VALUES+0
0x2CD0	0x0008 ;_PRESCALER_VALUES+2
0x2CD2	0x0040 ;_PRESCALER_VALUES+4
0x2CD4	0x0100 ;_PRESCALER_VALUES+6
; end of _PRESCALER_VALUES
;EBB_DPX.c,0 :: ?ICS_can_dataOutLength [2]
0x2CD6	0x0000 ;?ICS_can_dataOutLength+0
; end of ?ICS_can_dataOutLength
;,0 :: _initBlock_16 [2]
; Containing: ?ICS_brake_counter [1]
;             ?ICS_ebb_current_state [1]
0x2CD8	0x0000 ;_initBlock_16+0 : ?ICS_brake_counter at 0x2CD8 : ?ICS_ebb_current_state at 0x2CD9
; end of _initBlock_16
;EBB_DPX.c,0 :: ?ICS_buzzer_state [2]
0x2CDA	0x0000 ;?ICS_buzzer_state+0
; end of ?ICS_buzzer_state
;,0 :: _initBlock_18 [2]
; Containing: ?ICS_is_requested_movement [1]
;             ?ICS_is_requested_calibration [1]
0x2CDC	0x0000 ;_initBlock_18+0 : ?ICS_is_requested_movement at 0x2CDC : ?ICS_is_requested_calibration at 0x2CDD
; end of _initBlock_18
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100      [22]    __Lib_EEPROM_p30_KeySequence
0x0116     [114]    __Compare_Fp
0x0188     [300]    __Lib_CAN_1_CAN1IDToRegs
0x02B4     [282]    __Mul_FP
0x03CE     [364]    __AddSub_FP
0x053A     [310]    __Div_FP
0x0670     [158]    _CAN1Write
0x070E     [120]    __Float2Longint
0x0786      [88]    __Modulus_32x32
0x07DE      [82]    __Divide_32x32
0x0830      [16]    _getExactTimerPrescaler
0x0840       [8]    _Can_getWriteFlags
0x0848     [108]    __Float2Longword
0x08B4      [10]    __Compare_Ge_Fp
0x08BE      [14]    _UART1_Write
0x08CC      [10]    __Sub_FP
0x08D6      [10]    __Compare_Le_Fp
0x08E0      [26]    _isdigit
0x08FA     [182]    __Long2Float
0x09B0     [188]    __Lib_Sprintf_fround
0x0A6C     [330]    __Lib_Sprintf_scale
0x0BB6      [20]    __Lib_EEPROM_p30_EraseGlobal
0x0BCA      [78]    _CAN1SetOperationMode
0x0C18     [110]    _CAN1SetFilter
0x0C86      [40]    _CAN1SetMask
0x0CAE     [154]    _CAN1SetBaudRate
0x0D48      [16]    _Can_addByteToWritePacket
0x0D58    [4236]    __Lib_Sprintf__doprntf
0x1DE4     [230]    _Can_initInterrupt
0x1ECA       [4]    _Can_setWritePriority
0x1ECE      [62]    _getTimerPeriod
0x1F0C     [224]    _CAN1Initialize
0x1FEC      [14]    _EEPROM_Erase
0x1FFA      [80]    __Lib_CAN_1_RegsToCAN1ID
0x204A       [4]    _Get_Fosc_Per_Cyc
0x204E      [14]    _Delay_100ms
0x205C      [18]    __Multiply_32x32
0x206E      [64]    _Can_write
0x20AE      [34]    _UART1_Write_Text
0x20D0       [6]    _Get_Fosc_kHz
0x20D6      [24]    _Can_addIntToWritePacket
0x20EE      [56]    _getTimerPrescaler
0x2126     [174]    _setInterruptPriority
0x21D4      [34]    _Can_resetWritePacket
0x21F6      [48]    _sprintf
0x2226      [18]    _EEPROM_Read
0x2238      [36]    _EEPROM_Write
0x225C     [106]    _Can_init
0x22C6       [4]    _Debug_UART_Write
0x22CA      [16]    _Can_B0hasBeenReceived
0x22DA       [4]    _Can_clearB0Flag
0x22DE     [202]    _CAN1Read
0x23A8     [132]    _UART1_Init
0x242C     [186]    _setTimer
0x24E6      [30]    _CAN_routine
0x2504       [4]    _Can_clearB1Flag
0x2508      [16]    _Can_B1hasBeenReceived
0x2518     [278]    _EBB_Init
0x262E     [596]    _EBB_control
0x2882       [4]    _Can_clearInterrupt
0x2886      [42]    _Can_read
0x28B0      [36]    _timer4_interrupt
0x28D4     [182]    _timer1_interrupt
0x298A      [24]    _main
0x29A2     [238]    _CAN_Interrupt
0x2A90      [94]    _counter_quarter_turn_match
0x2AEE      [76]    _timer2_interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0310       [2]    C1RXF2SID
0x0318       [2]    C1RXF3SID
0x0320       [2]    C1RXF4SID
0x034E       [2]    C1TX2CON
0x0300       [2]    C1RXF0SID
0x0308       [2]    C1RXF1SID
0x0328       [2]    C1RXF5SID
0x0394       [2]    C1CFG2bits
0x0032       [2]    TBLPAG
0x0760       [2]    NVMCON
0x0330       [2]    C1RXM0SID
0x0338       [2]    C1RXM1SID
0x0392       [1]    C1CFG1bits
0x0340       [2]    C1TX2SID
0x0390       [2]    C1CTRLbits
0x038E       [1]    C1RX0CONbits
0x036E       [1]    C1TX0CONbits
0x0350       [2]    C1TX1SID
0x035E       [2]    C1TX1CON
0x034E       [1]    C1TX2CONbits
0x0360       [2]    C1TX0SID
0x036E       [2]    C1TX0CON
0x035E       [1]    C1TX1CONbits
0x0766       [2]    NVMKEY
0x0370       [2]    C1RX1SID
0x037E       [2]    C1RX1CON
0x0380       [2]    C1RX0SID
0x038E       [2]    C1RX0CON
0x037E       [1]    C1RX1CONbits
0x0210       [2]    U1TXREG
0x0880       [2]    _current_reading_motor
0x0084       [2]    IFS0bits
0x0396       [2]    C1INTFbits
0x0882       [2]    _UART_Rd_Ptr
0x0884       [2]    _UART_Rdy_Ptr
0x0886       [2]    _UART_Tx_Idle_Ptr
0x0762       [2]    NVMADR
0x0764       [2]    NVMADRU
0x0888       [2]    _UART_Wr_Ptr
0x020C       [2]    U1MODE
0x0122       [0]    UPDN_bit
0x0086       [2]    IFS1bits
0x020E       [2]    U1STA
0x0214       [2]    U1BRG
0x0122       [0]    DIRECTION_REGISTER
0x011A       [2]    PR4
0x0094       [2]    IPC0bits
0x009C       [2]    IPC4bits
0x0110       [2]    T2CONbits
0x010C       [2]    PR2
0x011E       [2]    T4CONbits
0x009E       [2]    IPC5bits
0x02D2       [1]    TRISDbits
0x02D8       [2]    TRISEbits
0x02C6       [2]    TRISBbits
0x0096       [2]    IPC1bits
0x0760       [0]    WR_bit
0x02A8       [2]    ADPCFG
0x008C       [2]    IEC0bits
0x0052       [2]    DISICNT
0x008E       [2]    IEC1bits
0x0398       [1]    C1INTEbits
0x088A       [8]    _can_dataOutBuffer
0x0042       [2]    SRbits
0x0104       [2]    T1CONbits
0x0102       [2]    PR1
0x0892       [2]    _ebb_current_pos
0x02D6       [0]    BUZZER
0x02DC       [0]    LATE4_bit
0x02DC       [0]    REVERSE
0x02DC       [0]    LATE3_bit
0x01C2       [2]    PTMR
0x01C0       [2]    PTCON
0x02DC       [0]    FORWARD
0x02DC       [0]    ENABLE
0x0894       [2]    _motor_target_position
0x0896       [2]    _ebb_settings
0x0898       [2]    _brake_pressure_front
0x02DC       [0]    LATE2_bit
0x089A       [2]    _ebb_target_pos
0x089C       [2]    _motor_current_position
0x01D6       [2]    PDC1
0x02D6       [0]    LED_G
0x02D6       [0]    LATD3_bit
0x0122       [2]    QEICON
0x02D6       [0]    LATD2_bit
0x02D6       [0]    LED_B
0x02D6       [0]    LATD1_bit
0x0126       [2]    POSCNT
0x0090       [2]    IEC2bits
0x01C8       [2]    PWMCON1
0x01C4       [2]    PTPER
0x0128       [2]    MAXCNT
0x00A8       [2]    IPC10bits
0x0088       [2]    IFS2bits
0x0800       [2]    _can_dataOutLength
0x0802       [1]    _brake_counter
0x0804       [2]    _timer2_counter
0x0806       [2]    _can_txPriority
0x0808       [2]    _error_flag
0x080A       [2]    _calibration_on_off
0x080C       [2]    _can_err
0x080E       [2]    _timer1_counter
0x0803       [1]    _is_requested_movement
0x0810       [1]    _is_requested_calibration
0x0812       [2]    _buzzer_state
0x0811       [1]    _ebb_current_state
0x0814       [7]    ?lstr1___Lib_Sprintf
0x081B     [100]    _dstr
0x087F       [1]    _blink_counter
0x0032       [2]    TBLPAG
0x0052       [2]    DISICNT
0x0102       [2]    PR1
0x010C       [2]    PR2
0x011A       [2]    PR4
0x0122       [2]    QEICON
0x0126       [2]    POSCNT
0x0128       [2]    MAXCNT
0x0014       [2]    FARG___Lib_CAN_1_CAN1IDToRegs_ptr
0x0016       [4]    FARG___Lib_CAN_1_CAN1IDToRegs_val
0x001A       [2]    FARG___Lib_CAN_1_CAN1IDToRegs_RegType
0x01C0       [2]    PTCON
0x01C2       [2]    PTMR
0x01C4       [2]    PTPER
0x01C8       [2]    PWMCON1
0x01D6       [2]    PDC1
0x020C       [2]    U1MODE
0x020E       [2]    U1STA
0x0210       [2]    U1TXREG
0x0214       [2]    U1BRG
0x02A8       [2]    ADPCFG
0x0300       [2]    C1RXF0SID
0x0308       [2]    C1RXF1SID
0x0310       [2]    C1RXF2SID
0x0318       [2]    C1RXF3SID
0x0320       [2]    C1RXF4SID
0x0328       [2]    C1RXF5SID
0x0330       [2]    C1RXM0SID
0x0338       [2]    C1RXM1SID
0x0340       [2]    C1TX2SID
0x034E       [2]    C1TX2CON
0x0350       [2]    C1TX1SID
0x035E       [2]    C1TX1CON
0x0360       [2]    C1TX0SID
0x036E       [2]    C1TX0CON
0x0370       [2]    C1RX1SID
0x037E       [2]    C1RX1CON
0x0380       [2]    C1RX0SID
0x038E       [2]    C1RX0CON
0x0014       [4]    FARG_CAN1Write_id
0x0018       [2]    FARG_CAN1Write_Data_
0x001A       [2]    FARG_CAN1Write_DataLen
0x0760       [2]    NVMCON
0x0762       [2]    NVMADR
0x0764       [2]    NVMADRU
0x0766       [2]    NVMKEY
0x0014       [4]    FARG_getExactTimerPrescaler_timePeriod
0x0014       [2]    FARG_UART1_Write__data
0x0014       [1]    FARG_isdigit_character
0x0014       [1]    FARG___Lib_Sprintf_fround_prec
0x0014       [1]    FARG___Lib_Sprintf_scale_scl
0x0014       [4]    FARG___Lib_EEPROM_p30_EraseGlobal_address
0x0018       [2]    FARG___Lib_EEPROM_p30_EraseGlobal_nvmcon_data
0x0014       [2]    FARG_CAN1SetOperationMode_mode
0x0016       [2]    FARG_CAN1SetOperationMode_WAIT
0x0014       [2]    FARG_CAN1SetFilter_CAN_FILTER
0x0016       [4]    FARG_CAN1SetFilter_val
0x001A       [2]    FARG_CAN1SetFilter_CAN_CONFIG_FLAGS
0x0014       [2]    FARG_CAN1SetMask_CAN_MASK
0x0016       [4]    FARG_CAN1SetMask_val
0x001A       [2]    FARG_CAN1SetMask_CAN_CONFIG_FLAGS
0x0014       [2]    FARG_CAN1SetBaudRate_SJW
0x0016       [2]    FARG_CAN1SetBaudRate_BRP
0x0018       [2]    FARG_CAN1SetBaudRate_PHSEG1
0x001A       [2]    FARG_CAN1SetBaudRate_PHSEG2
0x0014       [1]    FARG_Can_addByteToWritePacket_dataOut
0x0014       [2]    FARG___Lib_Sprintf__doprntf_pb
0x0016       [2]    FARG___Lib_Sprintf__doprntf_f
0x0018       [2]    FARG___Lib_Sprintf__doprntf_ap
0x0014       [2]    FARG_Can_setWritePriority_txPriority
0x0014       [4]    FARG_getTimerPeriod_timePeriod
0x0018       [1]    FARG_getTimerPeriod_prescalerIndex
0x0014       [2]    FARG_CAN1Initialize_SJW
0x0016       [2]    FARG_CAN1Initialize_BRP
0x0018       [2]    FARG_CAN1Initialize_PHSEG1
0x001A       [2]    FARG_CAN1Initialize_PHSEG2
0x0014       [4]    FARG_EEPROM_Erase_address
0x0014       [2]    FARG___Lib_CAN_1_RegsToCAN1ID_ptr
0x0016       [2]    FARG___Lib_CAN_1_RegsToCAN1ID_CAN_CONFIG_FLAGS
0x0014       [4]    FARG_Can_write_id
0x0014       [2]    FARG_UART1_Write_Text_uart_text
0x0014       [2]    FARG_Can_addIntToWritePacket_dataOut
0x0014       [4]    FARG_getTimerPrescaler_timePeriod
0x0014       [1]    FARG_setInterruptPriority_device
0x0016       [1]    FARG_setInterruptPriority_priority
0x0014       [4]    FARG_EEPROM_Read_address
0x0014       [4]    FARG_EEPROM_Write_address
0x0018       [2]    FARG_EEPROM_Write_data_
0x0014       [2]    FARG_Debug_UART_Write_text
0x0014       [2]    FARG_CAN1Read_id
0x0016       [2]    FARG_CAN1Read_data_
0x0018       [2]    FARG_CAN1Read_dataLen
0x001A       [2]    FARG_CAN1Read_CAN_RX_MSG_FLAGS
0x0014       [4]    FARG_UART1_Init_baud_rate
0x0014       [1]    FARG_setTimer_device
0x0016       [4]    FARG_setTimer_timePeriod
0x0014       [2]    FARG_Can_read_id
0x0016       [2]    FARG_Can_read_dataBuffer
0x0018       [2]    FARG_Can_read_dataLength
0x001A       [2]    FARG_Can_read_inFlags
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2B3A       [7]    ?ICS?lstr1___Lib_Sprintf
0x2B41     [100]    ?ICS_dstr
0x2BA5       [1]    ?ICS_blink_counter
0x2BA6      [52]    __Lib_Sprintf__npowers_
0x2BDA      [52]    __Lib_Sprintf__powers_
0x2C0E      [48]    __Lib_Sprintf_octpowers
0x2C3E      [40]    __Lib_Sprintf_dpowers
0x2C66      [32]    __Lib_Sprintf_hexpowers
0x2C86      [17]    __Lib_Sprintf_hexb
0x2C97      [17]    __Lib_Sprintf_hexs
0x2CA8      [13]    ?lstr_1_EBB_DPX
0x2CB5      [13]    ?lstr_2_EBB_DPX
0x2CC2       [2]    ?ICS_timer2_counter
0x2CC4       [2]    ?ICS_can_txPriority
0x2CC6       [2]    ?ICS_error_flag
0x2CC8       [2]    ?ICS_calibration_on_off
0x2CCA       [2]    ?ICS_can_err
0x2CCC       [2]    ?ICS_timer1_counter
0x2CCE       [8]    _PRESCALER_VALUES
0x2CD6       [2]    ?ICS_can_dataOutLength
0x2CD8       [1]    ?ICS_brake_counter
0x2CD9       [1]    ?ICS_ebb_current_state
0x2CDA       [2]    ?ICS_buzzer_state
0x2CDC       [1]    ?ICS_is_requested_movement
0x2CDD       [1]    ?ICS_is_requested_calibration
//** Label List: ** 
//----------------------------------------------
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L_setInterruptPriority12
  L_setInterruptPriority13
  L_setInterruptPriority14
  L_setInterruptPriority15
  L_setInterruptPriority16
  L_setInterruptPriority17
  L_setInterruptPriority18
  L_setInterruptPriority19
  L_setInterruptPriority20
  L_setExternalInterrupt21
  L_setExternalInterrupt22
  L_setExternalInterrupt23
  L_setExternalInterrupt24
  L_setExternalInterrupt25
  L_setExternalInterrupt26
  L_switchExternalInterruptEdge27
  L_switchExternalInterruptEdge28
  L_switchExternalInterruptEdge29
  L_switchExternalInterruptEdge30
  L_switchExternalInterruptEdge31
  L_switchExternalInterruptEdge32
  L_switchExternalInterruptEdge33
  L_switchExternalInterruptEdge34
  L_switchExternalInterruptEdge35
  L_switchExternalInterruptEdge36
  L_switchExternalInterruptEdge37
  L_switchExternalInterruptEdge38
  L_getExternalInterruptEdge39
  L_getExternalInterruptEdge40
  L_getExternalInterruptEdge41
  L_getExternalInterruptEdge42
  L_getExternalInterruptEdge43
  L_getExternalInterruptEdge44
  L_clearExternalInterrupt45
  L_clearExternalInterrupt46
  L_clearExternalInterrupt47
  L_clearExternalInterrupt48
  L_clearExternalInterrupt49
  L_clearExternalInterrupt50
  L_setTimer51
  L_setTimer52
  L_setTimer53
  L_setTimer54
  L_setTimer55
  L_clearTimer56
  L_clearTimer57
  L_clearTimer58
  L_clearTimer59
  L_clearTimer60
  L_turnOnTimer61
  L_turnOnTimer62
  L_turnOnTimer63
  L_turnOnTimer64
  L_turnOnTimer65
  L_turnOffTimer66
  L_turnOffTimer67
  L_turnOffTimer68
  L_turnOffTimer69
  L_turnOffTimer70
  L_getTimerPrescaler71
  L_getTimerPrescaler72
  L_getTimerPrescaler73
  L_getTimerPrescaler74
  L_EEPROM_writeInt75
  L_EEPROM_writeInt76
  L_EEPROM_writeArray77
  L_EEPROM_writeArray78
  L_EEPROM_writeArray79
  L_EEPROM_readArray80
  L_EEPROM_readArray81
  L_EEPROM_readArray82
  L_counter_quarter_turn_match83
  L_counter_quarter_turn_match84
  L_counter_quarter_turn_match85
  L_counter_quarter_turn_match86
  L_counter_quarter_turn_match87
  L_counter_quarter_turn_match88
  L_EBB_control89
  L_EBB_control90
  L_EBB_control91
  L_EBB_control92
  L_EBB_control93
  L_EBB_control94
  L_EBB_control95
  L_EBB_control96
  L_EBB_control97
  L_EBB_control98
  L_EBB_control99
  L_EBB_control100
  L_EBB_control101
  L_EBB_control102
  L_EBB_control103
  L_EBB_control104
  L_EBB_control105
  L_EBB_control106
  L_EBB_control107
  L_EBB_control108
  L_EBB_control109
  L_EBB_control110
  L_EBB_control111
  L_EBB_control112
  L_EBB_control113
  L_EBB_control114
  L_EBB_control115
  L_EBB_control116
  L_EBB_control117
  L_EBB_control118
  L_EBB_control119
  L_EBB_control120
  L_EBB_control121
  L_EBB_control122
  L_EBB_control123
  L_EBB_control124
  L_EBB_control125
  L_EBB_control126
  L_EBB_control127
  L_EBB_control128
  L_EBB_control129
  L_EBB_control130
  L_EBB_control131
  L_EBB_control132
  L_EBB_control133
  L_EBB_control134
  L_EBB_control135
  L_EBB_control136
  L_EBB_control137
  L_EBB_control138
  L_EBB_control139
  L_EBB_Init140
  L_EBB_Init141
  L_EBB_Init142
  L_EBB_Init143
  L_EBB_Init144
  L_EBB_Init145
  L_EBB_Init146
  L_EBB_Init147
  L_EBB_Init148
  L_EBB_Init149
  L_timer1_interrupt151
  L_timer1_interrupt152
  L_timer1_interrupt153
  L_timer1_interrupt154
  L_timer1_interrupt155
  L_timer1_interrupt156
  L_timer2_interrupt157
  L_timer4_interrupt158
  L_main159
  L_main160
  L_CAN_Interrupt161
  L_CAN_Interrupt162
  L_CAN_Interrupt163
  L_CAN_Interrupt164
  L_CAN_Interrupt165
  L_CAN_Interrupt166
  L_CAN_Interrupt167
  L_CAN_Interrupt168
  L_CAN_Interrupt169
  L_CAN_Interrupt170
  L_CAN_Interrupt171
  L_CAN_Interrupt172
  L_CAN_Interrupt173
  L__Can_write174
  L__Can_write175
  L__Can_write176
  L__CAN_Interrupt177
  L__CAN_Interrupt178
  L__CAN_Interrupt179
  L__CAN_Interrupt180
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read183
  L__Can_read184
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write190
  L__Can_write191
  L__Can_write192
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket195
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived198
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived200
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_end_setAllPinAsDigital
  _setAllPinAsDigital
  L_end_setInterruptPriority
  _setInterruptPriority
  L__setInterruptPriority207
  L__setInterruptPriority208
  L__setInterruptPriority209
  L__setInterruptPriority210
  L__setInterruptPriority211
  L__setInterruptPriority212
  L_end_setExternalInterrupt
  _setExternalInterrupt
  L__setExternalInterrupt214
  L__setExternalInterrupt215
  L__setExternalInterrupt216
  L_end_switchExternalInterruptEdge
  _switchExternalInterruptEdge
  L__switchExternalInterruptEdge218
  L__switchExternalInterruptEdge219
  L__switchExternalInterruptEdge220
  L__switchExternalInterruptEdge221
  L__switchExternalInterruptEdge222
  L__switchExternalInterruptEdge223
  L_end_getExternalInterruptEdge
  _getExternalInterruptEdge
  L__getExternalInterruptEdge225
  L__getExternalInterruptEdge226
  L__getExternalInterruptEdge227
  L_end_clearExternalInterrupt
  _clearExternalInterrupt
  L__clearExternalInterrupt229
  L__clearExternalInterrupt230
  L__clearExternalInterrupt231
  L_end_setTimer
  _setTimer
  L__setTimer233
  L__setTimer234
  L__setTimer235
  L_end_clearTimer
  _clearTimer
  L__clearTimer237
  L__clearTimer238
  L__clearTimer239
  L_end_turnOnTimer
  _turnOnTimer
  L__turnOnTimer241
  L__turnOnTimer242
  L__turnOnTimer243
  L_end_turnOffTimer
  _turnOffTimer
  L__turnOffTimer245
  L__turnOffTimer246
  L__turnOffTimer247
  L_end_getTimerPeriod
  _getTimerPeriod
  L_end_getTimerPrescaler
  _getTimerPrescaler
  L__getTimerPrescaler250
  L__getTimerPrescaler251
  L_end_getExactTimerPrescaler
  _getExactTimerPrescaler
  L_end_setupAnalogSampling
  _setupAnalogSampling
  L_end_turnOnAnalogModule
  _turnOnAnalogModule
  L_end_turnOffAnalogModule
  _turnOffAnalogModule
  L_end_startSampling
  _startSampling
  L_end_getAnalogValue
  _getAnalogValue
  L_end_setAnalogPIN
  _setAnalogPIN
  L_end_unsetAnalogPIN
  _unsetAnalogPIN
  L_end_setAnalogInterrupt
  _setAnalogInterrupt
  L_end_unsetAnalogInterrupt
  _unsetAnalogInterrupt
  L_end_clearAnalogInterrupt
  _clearAnalogInterrupt
  L_end_setAutomaticSampling
  _setAutomaticSampling
  L_end_unsetAutomaticSampling
  _unsetAutomaticSampling
  L_end_setAnalogVoltageReference
  _setAnalogVoltageReference
  L_end_setAnalogDataOutputFormat
  _setAnalogDataOutputFormat
  L_end_getMinimumAnalogClockConversion
  _getMinimumAnalogClockConversion
  L_end_EEPROM_writeInt
  _EEPROM_writeInt
  L_end_EEPROM_readInt
  _EEPROM_readInt
  L_end_EEPROM_writeArray
  _EEPROM_writeArray
  L__EEPROM_writeArray271
  L_end_EEPROM_readArray
  _EEPROM_readArray
  L__EEPROM_readArray273
  L_end_CAN_routine
  _CAN_routine
  L_end_Debug_UART_Write
  _Debug_UART_Write
  L_end_counter_quarter_turn_match
  _counter_quarter_turn_match
  L__counter_quarter_turn_match277
  L__counter_quarter_turn_match278
  L__counter_quarter_turn_match279
  L_end_EBB_control
  _EBB_control
  L__EBB_control281
  L__EBB_control282
  L__EBB_control283
  L__EBB_control284
  L__EBB_control285
  L__EBB_control286
  L__EBB_control287
  L__EBB_control288
  L__EBB_control289
  L__EBB_control290
  L__EBB_control291
  L__EBB_control292
  L__EBB_control293
  L__EBB_control294
  L__EBB_control295
  L__EBB_control296
  L__EBB_control297
  L__EBB_control298
  L__EBB_control299
  L__EBB_control300
  L__EBB_control301
  L__EBB_control302
  L__EBB_control303
  L__EBB_control304
  L__EBB_control305
  L__EBB_control306
  L__EBB_control307
  L__EBB_control308
  L__EBB_control309
  L__EBB_control310
  L__EBB_control311
  L__EBB_control312
  L_end_EBB_Init
  _EBB_Init
  L__EBB_Init314
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt316
  L__timer1_interrupt317
  L__timer1_interrupt318
  L__timer1_interrupt319
  L__timer1_interrupt320
  L__timer1_interrupt321
  L_end_timer2_interrupt
  _timer2_interrupt
  L__timer2_interrupt323
  L_end_timer4_interrupt
  _timer4_interrupt
  L__timer4_interrupt325
  L_end_main
  _main
  L__main_end_loop
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt329
  L__CAN_Interrupt330
  L__CAN_Interrupt331
  L__CAN_Interrupt332
  L__CAN_Interrupt333
  L__CAN_Interrupt334
  L__CAN_Interrupt335
  L__CAN_Interrupt336
  L__CAN_Interrupt337
  L__CAN_Interrupt338
  L___Lib_CAN_1_CAN1IDToRegs0
  L___Lib_CAN_1_CAN1IDToRegs1
  L___Lib_CAN_1_CAN1IDToRegs2
  L___Lib_CAN_1_CAN1IDToRegs3
  L___Lib_CAN_1_CAN1IDToRegs4
  L___Lib_CAN_1_CAN1IDToRegs5
  L___Lib_CAN_1_CAN1IDToRegs6
  L___Lib_CAN_1_CAN1IDToRegs7
  L___Lib_CAN_1_CAN1IDToRegs8
  L___Lib_CAN_1_CAN1IDToRegs9
  L___Lib_CAN_1_CAN1IDToRegs10
  L___Lib_CAN_1_CAN1IDToRegs11
  L___Lib_CAN_1_CAN1IDToRegs12
  L_CAN1SetOperationMode13
  L_CAN1SetOperationMode14
  L_CAN1SetOperationMode15
  L_CAN1SetOperationMode16
  L_CAN1SetBaudRate17
  L_CAN1SetBaudRate18
  L_CAN1SetBaudRate19
  L_CAN1SetMask20
  L_CAN1SetMask21
  L_CAN1SetFilter22
  L_CAN1SetFilter23
  L_CAN1SetFilter24
  L_CAN1SetFilter25
  L_CAN1SetFilter26
  L_CAN1SetFilter27
  L_CAN1SetFilter28
  L_CAN1SetFilter29
  L___Lib_CAN_1_RegsToCAN1ID30
  L___Lib_CAN_1_RegsToCAN1ID31
  L_CAN1Write32
  L_CAN1Write33
  L_CAN1Write34
  L_CAN1Write35
  L_CAN1Write36
  L_CAN1Write37
  L_CAN1Write38
  L_CAN1Write39
  L_CAN1Write40
  L_CAN1Write41
  L_CAN1Write42
  L_CAN1Read43
  L_CAN1Read44
  L_CAN1Read45
  L_CAN1Read46
  L_CAN1Read47
  L_CAN1Read48
  L_CAN1Read49
  L_CAN1Read50
  L_CAN1Read51
  L_CAN1Read52
  L_CAN1Read53
  L_CAN1Read54
  L_CAN1Read55
  L_CAN1Read56
  L_CAN1Read57
  L_CAN1Read58
  L_CAN1Initialize59
  L_CAN1Initialize60
  L_CAN1Initialize61
  L_CAN1Initialize62
  L_CAN1Initialize63
  L_end_CAN1IDToRegs
  __Lib_CAN_1_CAN1IDToRegs
  L___Lib_CAN_1_CAN1IDToRegs65
  L___Lib_CAN_1_CAN1IDToRegs66
  L___Lib_CAN_1_CAN1IDToRegs67
  L_end_CAN1SetOperationMode
  _CAN1SetOperationMode
  L__CAN1SetOperationMode69
  L__CAN1SetOperationMode70
  L_end_CAN1GetOperationMode
  _CAN1GetOperationMode
  L_end_CAN1SetBaudRate
  _CAN1SetBaudRate
  L_end_CAN1SetMask
  _CAN1SetMask
  L__CAN1SetMask74
  L_end_CAN1SetFilter
  _CAN1SetFilter
  L__CAN1SetFilter76
  L__CAN1SetFilter77
  L__CAN1SetFilter78
  L__CAN1SetFilter79
  L__CAN1SetFilter80
  L_end_RegsToCAN1ID
  __Lib_CAN_1_RegsToCAN1ID
  L_end_CAN1Write
  _CAN1Write
  L__CAN1Write83
  L_end_CAN1Read
  _CAN1Read
  L__CAN1Read85
  L__CAN1Read86
  L__CAN1Read87
  L_end_CAN1Initialize
  _CAN1Initialize
  L__CAN1Initialize89
  Delay_Cyc_loop
  Delay_Cyc_rez
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_VDelay_ms3
  L_VDelay_ms4
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_VDelay_Advanced_ms7
  L_VDelay_Advanced_ms8
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_Delay_1us11
  L_Delay_10us13
  L_Delay_22us15
  L_Delay_50us17
  L_Delay_80us19
  L_Delay_500us21
  L_Delay_5500us23
  L_Delay_1ms25
  L_Delay_5ms27
  L_Delay_8ms29
  L_Delay_10ms31
  L_Delay_100ms33
  L_Delay_1sec35
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Get_Fosc_Per_Cyc
  _Get_Fosc_Per_Cyc
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_Delay_Cyc_Long
  _Delay_Cyc_Long
  L_end_VDelay_ms
  _VDelay_ms
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L_end_Delay_W0
  _Delay_W0
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_EEPROM_Write0
  L_EEPROM_Write1
  L_EEPROM_Write_Block2
  L_EEPROM_Write_Block3
  L_end_KeySequence
  __Lib_EEPROM_p30_KeySequence
  L_end_EraseGlobal
  __Lib_EEPROM_p30_EraseGlobal
  L_end_EEPROM_Erase
  _EEPROM_Erase
  L_end_EEPROM_Erase_Block
  _EEPROM_Erase_Block
  L_end_EEPROM_Write
  _EEPROM_Write
  L_end_EEPROM_Write_Block
  _EEPROM_Write_Block
  L_end_EEPROM_Read
  _EEPROM_Read
  Divide_32x32___testsus
  the_end_Divide_32x32
  Divide_32x32___divsi3
  Divide_32x32___udivsi3
  Divide_32x32_divtestb
  Divide_32x32_calcquot
  Divide_32x32_returnq
  Divide_32x32_nextbit
  Divide_32x32_iterate
  Modulus_32x32___testsus
  the_end_Modulus_32x32
  Modulus_32x32___modsi3
  Modulus_32x32___umodsi3
  Modulus_32x32_modtestb
  Modulus_32x32_calcrem
  Modulus_32x32_exitr
  Modulus_32x32___udivsi3
  Modulus_32x32_nextbit
  Modulus_32x32_iterate
  L_end__Multiply_32x32
  __Multiply_32x32
  L_end__Divide_32x32
  __Divide_32x32
  L_end__Modulus_32x32
  __Modulus_32x32
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
  L_UART1_Write0
  L_UART1_Write1
  L_UART1_Write_Text2
  L_UART1_Write_Text3
  L_UART1_Read_Text4
  L_UART1_Read_Text5
  L_UART1_Read_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Init13
  L_UART1_Init_Advanced14
  L_UART2_Write15
  L_UART2_Write16
  L_UART2_Write_Text17
  L_UART2_Write_Text18
  L_UART2_Read_Text19
  L_UART2_Read_Text20
  L_UART2_Read_Text21
  L_UART2_Read_Text22
  L_UART2_Read_Text23
  L_UART2_Read_Text24
  L_UART2_Read_Text25
  L_UART2_Read_Text26
  L_UART2_Read_Text27
  L_UART2_Init28
  L_UART2_Init_Advanced29
  L_UART_Write_Text30
  L_UART_Write_Text31
  L_UART_Read_Text32
  L_UART_Read_Text33
  L_UART_Read_Text34
  L_UART_Read_Text35
  L_UART_Read_Text36
  L_UART_Read_Text37
  L_UART_Read_Text38
  L_UART_Read_Text39
  L_UART_Read_Text40
  L__UART1_Read_Text41
  L__UART1_Init42
  L__UART1_Init_Advanced43
  L__UART2_Read_Text44
  L__UART2_Init45
  L__UART2_Init_Advanced46
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L__UART1_Write_Text49
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L__UART1_Read_Text53
  L__UART1_Read_Text54
  L__UART1_Read_Text55
  L__UART1_Read_Text56
  L__UART1_Read_Text57
  L__UART1_Read_Text58
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Init
  _UART1_Init
  L__UART1_Init61
  L__UART1_Init62
  L__UART1_Init63
  L_end_UART1_Init_Advanced
  _UART1_Init_Advanced
  L__UART1_Init_Advanced65
  L__UART1_Init_Advanced66
  L__UART1_Init_Advanced67
  L_end_UART2_Write
  _UART2_Write
  L_end_UART2_Write_Text
  _UART2_Write_Text
  L__UART2_Write_Text70
  L_end_UART2_Data_Ready
  _UART2_Data_Ready
  L_end_UART2_Read
  _UART2_Read
  L_end_UART2_Read_Text
  _UART2_Read_Text
  L__UART2_Read_Text74
  L__UART2_Read_Text75
  L__UART2_Read_Text76
  L__UART2_Read_Text77
  L__UART2_Read_Text78
  L__UART2_Read_Text79
  L_end_UART2_Tx_Idle
  _UART2_Tx_Idle
  L_end_UART2_Init
  _UART2_Init
  L__UART2_Init82
  L__UART2_Init83
  L__UART2_Init84
  L_end_UART2_Init_Advanced
  _UART2_Init_Advanced
  L__UART2_Init_Advanced86
  L__UART2_Init_Advanced87
  L__UART2_Init_Advanced88
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L__UART_Write_Text92
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L__UART_Read_Text96
  L__UART_Read_Text97
  L__UART_Read_Text98
  L__UART_Read_Text99
  L__UART_Read_Text100
  L__UART_Read_Text101
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L_setInterruptPriority12
  L_setInterruptPriority13
  L_setInterruptPriority14
  L_setInterruptPriority15
  L_setInterruptPriority16
  L_setInterruptPriority17
  L_setInterruptPriority18
  L_setInterruptPriority19
  L_setInterruptPriority20
  L_setExternalInterrupt21
  L_setExternalInterrupt22
  L_setExternalInterrupt23
  L_setExternalInterrupt24
  L_setExternalInterrupt25
  L_setExternalInterrupt26
  L_switchExternalInterruptEdge27
  L_switchExternalInterruptEdge28
  L_switchExternalInterruptEdge29
  L_switchExternalInterruptEdge30
  L_switchExternalInterruptEdge31
  L_switchExternalInterruptEdge32
  L_switchExternalInterruptEdge33
  L_switchExternalInterruptEdge34
  L_switchExternalInterruptEdge35
  L_switchExternalInterruptEdge36
  L_switchExternalInterruptEdge37
  L_switchExternalInterruptEdge38
  L_getExternalInterruptEdge39
  L_getExternalInterruptEdge40
  L_getExternalInterruptEdge41
  L_getExternalInterruptEdge42
  L_getExternalInterruptEdge43
  L_getExternalInterruptEdge44
  L_clearExternalInterrupt45
  L_clearExternalInterrupt46
  L_clearExternalInterrupt47
  L_clearExternalInterrupt48
  L_clearExternalInterrupt49
  L_clearExternalInterrupt50
  L_setTimer51
  L_setTimer52
  L_setTimer53
  L_setTimer54
  L_setTimer55
  L_clearTimer56
  L_clearTimer57
  L_clearTimer58
  L_clearTimer59
  L_clearTimer60
  L_turnOnTimer61
  L_turnOnTimer62
  L_turnOnTimer63
  L_turnOnTimer64
  L_turnOnTimer65
  L_turnOffTimer66
  L_turnOffTimer67
  L_turnOffTimer68
  L_turnOffTimer69
  L_turnOffTimer70
  L_getTimerPrescaler71
  L_getTimerPrescaler72
  L_getTimerPrescaler73
  L_getTimerPrescaler74
  L_EEPROM_writeInt75
  L_EEPROM_writeInt76
  L_EEPROM_writeArray77
  L_EEPROM_writeArray78
  L_EEPROM_writeArray79
  L_EEPROM_readArray80
  L_EEPROM_readArray81
  L_EEPROM_readArray82
  L_counter_quarter_turn_match83
  L_counter_quarter_turn_match84
  L_counter_quarter_turn_match85
  L_counter_quarter_turn_match86
  L_counter_quarter_turn_match87
  L_counter_quarter_turn_match88
  L_EBB_control89
  L_EBB_control90
  L_EBB_control91
  L_EBB_control92
  L_EBB_control93
  L_EBB_control94
  L_EBB_control95
  L_EBB_control96
  L_EBB_control97
  L_EBB_control98
  L_EBB_control99
  L_EBB_control100
  L_EBB_control101
  L_EBB_control102
  L_EBB_control103
  L_EBB_control104
  L_EBB_control105
  L_EBB_control106
  L_EBB_control107
  L_EBB_control108
  L_EBB_control109
  L_EBB_control110
  L_EBB_control111
  L_EBB_control112
  L_EBB_control113
  L_EBB_control114
  L_EBB_control115
  L_EBB_control116
  L_EBB_control117
  L_EBB_control118
  L_EBB_control119
  L_EBB_control120
  L_EBB_control121
  L_EBB_control122
  L_EBB_control123
  L_EBB_control124
  L_EBB_control125
  L_EBB_control126
  L_EBB_control127
  L_EBB_control128
  L_EBB_control129
  L_EBB_control130
  L_EBB_control131
  L_EBB_control132
  L_EBB_control133
  L_EBB_control134
  L_EBB_control135
  L_EBB_control136
  L_EBB_control137
  L_EBB_control138
  L_EBB_control139
  L_EBB_Init140
  L_EBB_Init141
  L_EBB_Init142
  L_EBB_Init143
  L_EBB_Init144
  L_EBB_Init145
  L_EBB_Init146
  L_EBB_Init147
  L_EBB_Init148
  L_EBB_Init149
  L_timer1_interrupt151
  L_timer1_interrupt152
  L_timer1_interrupt153
  L_timer1_interrupt154
  L_timer1_interrupt155
  L_timer1_interrupt156
  L_timer2_interrupt157
  L_timer4_interrupt158
  L_main159
  L_main160
  L_CAN_Interrupt161
  L_CAN_Interrupt162
  L_CAN_Interrupt163
  L_CAN_Interrupt164
  L_CAN_Interrupt165
  L_CAN_Interrupt166
  L_CAN_Interrupt167
  L_CAN_Interrupt168
  L_CAN_Interrupt169
  L_CAN_Interrupt170
  L_CAN_Interrupt171
  L_CAN_Interrupt172
  L_CAN_Interrupt173
  L__Can_write174
  L__Can_write175
  L__Can_write176
  L__CAN_Interrupt177
  L__CAN_Interrupt178
  L__CAN_Interrupt179
  L__CAN_Interrupt180
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read183
  L__Can_read184
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write190
  L__Can_write191
  L__Can_write192
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket195
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived198
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived200
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_end_setAllPinAsDigital
  _setAllPinAsDigital
  L_end_setInterruptPriority
  _setInterruptPriority
  L__setInterruptPriority207
  L__setInterruptPriority208
  L__setInterruptPriority209
  L__setInterruptPriority210
  L__setInterruptPriority211
  L__setInterruptPriority212
  L_end_setExternalInterrupt
  _setExternalInterrupt
  L__setExternalInterrupt214
  L__setExternalInterrupt215
  L__setExternalInterrupt216
  L_end_switchExternalInterruptEdge
  _switchExternalInterruptEdge
  L__switchExternalInterruptEdge218
  L__switchExternalInterruptEdge219
  L__switchExternalInterruptEdge220
  L__switchExternalInterruptEdge221
  L__switchExternalInterruptEdge222
  L__switchExternalInterruptEdge223
  L_end_getExternalInterruptEdge
  _getExternalInterruptEdge
  L__getExternalInterruptEdge225
  L__getExternalInterruptEdge226
  L__getExternalInterruptEdge227
  L_end_clearExternalInterrupt
  _clearExternalInterrupt
  L__clearExternalInterrupt229
  L__clearExternalInterrupt230
  L__clearExternalInterrupt231
  L_end_setTimer
  _setTimer
  L__setTimer233
  L__setTimer234
  L__setTimer235
  L_end_clearTimer
  _clearTimer
  L__clearTimer237
  L__clearTimer238
  L__clearTimer239
  L_end_turnOnTimer
  _turnOnTimer
  L__turnOnTimer241
  L__turnOnTimer242
  L__turnOnTimer243
  L_end_turnOffTimer
  _turnOffTimer
  L__turnOffTimer245
  L__turnOffTimer246
  L__turnOffTimer247
  L_end_getTimerPeriod
  _getTimerPeriod
  L_end_getTimerPrescaler
  _getTimerPrescaler
  L__getTimerPrescaler250
  L__getTimerPrescaler251
  L_end_getExactTimerPrescaler
  _getExactTimerPrescaler
  L_end_setupAnalogSampling
  _setupAnalogSampling
  L_end_turnOnAnalogModule
  _turnOnAnalogModule
  L_end_turnOffAnalogModule
  _turnOffAnalogModule
  L_end_startSampling
  _startSampling
  L_end_getAnalogValue
  _getAnalogValue
  L_end_setAnalogPIN
  _setAnalogPIN
  L_end_unsetAnalogPIN
  _unsetAnalogPIN
  L_end_setAnalogInterrupt
  _setAnalogInterrupt
  L_end_unsetAnalogInterrupt
  _unsetAnalogInterrupt
  L_end_clearAnalogInterrupt
  _clearAnalogInterrupt
  L_end_setAutomaticSampling
  _setAutomaticSampling
  L_end_unsetAutomaticSampling
  _unsetAutomaticSampling
  L_end_setAnalogVoltageReference
  _setAnalogVoltageReference
  L_end_setAnalogDataOutputFormat
  _setAnalogDataOutputFormat
  L_end_getMinimumAnalogClockConversion
  _getMinimumAnalogClockConversion
  L_end_EEPROM_writeInt
  _EEPROM_writeInt
  L_end_EEPROM_readInt
  _EEPROM_readInt
  L_end_EEPROM_writeArray
  _EEPROM_writeArray
  L__EEPROM_writeArray271
  L_end_EEPROM_readArray
  _EEPROM_readArray
  L__EEPROM_readArray273
  L_end_CAN_routine
  _CAN_routine
  L_end_Debug_UART_Write
  _Debug_UART_Write
  L_end_counter_quarter_turn_match
  _counter_quarter_turn_match
  L__counter_quarter_turn_match277
  L__counter_quarter_turn_match278
  L__counter_quarter_turn_match279
  L_end_EBB_control
  _EBB_control
  L__EBB_control281
  L__EBB_control282
  L__EBB_control283
  L__EBB_control284
  L__EBB_control285
  L__EBB_control286
  L__EBB_control287
  L__EBB_control288
  L__EBB_control289
  L__EBB_control290
  L__EBB_control291
  L__EBB_control292
  L__EBB_control293
  L__EBB_control294
  L__EBB_control295
  L__EBB_control296
  L__EBB_control297
  L__EBB_control298
  L__EBB_control299
  L__EBB_control300
  L__EBB_control301
  L__EBB_control302
  L__EBB_control303
  L__EBB_control304
  L__EBB_control305
  L__EBB_control306
  L__EBB_control307
  L__EBB_control308
  L__EBB_control309
  L__EBB_control310
  L__EBB_control311
  L__EBB_control312
  L_end_EBB_Init
  _EBB_Init
  L__EBB_Init314
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt316
  L__timer1_interrupt317
  L__timer1_interrupt318
  L__timer1_interrupt319
  L__timer1_interrupt320
  L__timer1_interrupt321
  L_end_timer2_interrupt
  _timer2_interrupt
  L__timer2_interrupt323
  L_end_timer4_interrupt
  _timer4_interrupt
  L__timer4_interrupt325
  L_end_main
  _main
  L__main_end_loop
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt329
  L__CAN_Interrupt330
  L__CAN_Interrupt331
  L__CAN_Interrupt332
  L__CAN_Interrupt333
  L__CAN_Interrupt334
  L__CAN_Interrupt335
  L__CAN_Interrupt336
  L__CAN_Interrupt337
  L__CAN_Interrupt338
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L_setInterruptPriority12
  L_setInterruptPriority13
  L_setInterruptPriority14
  L_setInterruptPriority15
  L_setInterruptPriority16
  L_setInterruptPriority17
  L_setInterruptPriority18
  L_setInterruptPriority19
  L_setInterruptPriority20
  L_setExternalInterrupt21
  L_setExternalInterrupt22
  L_setExternalInterrupt23
  L_setExternalInterrupt24
  L_setExternalInterrupt25
  L_setExternalInterrupt26
  L_switchExternalInterruptEdge27
  L_switchExternalInterruptEdge28
  L_switchExternalInterruptEdge29
  L_switchExternalInterruptEdge30
  L_switchExternalInterruptEdge31
  L_switchExternalInterruptEdge32
  L_switchExternalInterruptEdge33
  L_switchExternalInterruptEdge34
  L_switchExternalInterruptEdge35
  L_switchExternalInterruptEdge36
  L_switchExternalInterruptEdge37
  L_switchExternalInterruptEdge38
  L_getExternalInterruptEdge39
  L_getExternalInterruptEdge40
  L_getExternalInterruptEdge41
  L_getExternalInterruptEdge42
  L_getExternalInterruptEdge43
  L_getExternalInterruptEdge44
  L_clearExternalInterrupt45
  L_clearExternalInterrupt46
  L_clearExternalInterrupt47
  L_clearExternalInterrupt48
  L_clearExternalInterrupt49
  L_clearExternalInterrupt50
  L_setTimer51
  L_setTimer52
  L_setTimer53
  L_setTimer54
  L_setTimer55
  L_clearTimer56
  L_clearTimer57
  L_clearTimer58
  L_clearTimer59
  L_clearTimer60
  L_turnOnTimer61
  L_turnOnTimer62
  L_turnOnTimer63
  L_turnOnTimer64
  L_turnOnTimer65
  L_turnOffTimer66
  L_turnOffTimer67
  L_turnOffTimer68
  L_turnOffTimer69
  L_turnOffTimer70
  L_getTimerPrescaler71
  L_getTimerPrescaler72
  L_getTimerPrescaler73
  L_getTimerPrescaler74
  L_EEPROM_writeInt75
  L_EEPROM_writeInt76
  L_EEPROM_writeArray77
  L_EEPROM_writeArray78
  L_EEPROM_writeArray79
  L_EEPROM_readArray80
  L_EEPROM_readArray81
  L_EEPROM_readArray82
  L_counter_quarter_turn_match83
  L_counter_quarter_turn_match84
  L_counter_quarter_turn_match85
  L_counter_quarter_turn_match86
  L_counter_quarter_turn_match87
  L_counter_quarter_turn_match88
  L_EBB_control89
  L_EBB_control90
  L_EBB_control91
  L_EBB_control92
  L_EBB_control93
  L_EBB_control94
  L_EBB_control95
  L_EBB_control96
  L_EBB_control97
  L_EBB_control98
  L_EBB_control99
  L_EBB_control100
  L_EBB_control101
  L_EBB_control102
  L_EBB_control103
  L_EBB_control104
  L_EBB_control105
  L_EBB_control106
  L_EBB_control107
  L_EBB_control108
  L_EBB_control109
  L_EBB_control110
  L_EBB_control111
  L_EBB_control112
  L_EBB_control113
  L_EBB_control114
  L_EBB_control115
  L_EBB_control116
  L_EBB_control117
  L_EBB_control118
  L_EBB_control119
  L_EBB_control120
  L_EBB_control121
  L_EBB_control122
  L_EBB_control123
  L_EBB_control124
  L_EBB_control125
  L_EBB_control126
  L_EBB_control127
  L_EBB_control128
  L_EBB_control129
  L_EBB_control130
  L_EBB_control131
  L_EBB_control132
  L_EBB_control133
  L_EBB_control134
  L_EBB_control135
  L_EBB_control136
  L_EBB_control137
  L_EBB_control138
  L_EBB_control139
  L_EBB_Init140
  L_EBB_Init141
  L_EBB_Init142
  L_EBB_Init143
  L_EBB_Init144
  L_EBB_Init145
  L_EBB_Init146
  L_EBB_Init147
  L_EBB_Init148
  L_EBB_Init149
  L_timer1_interrupt151
  L_timer1_interrupt152
  L_timer1_interrupt153
  L_timer1_interrupt154
  L_timer1_interrupt155
  L_timer1_interrupt156
  L_timer2_interrupt157
  L_timer4_interrupt158
  L_main159
  L_main160
  L_CAN_Interrupt161
  L_CAN_Interrupt162
  L_CAN_Interrupt163
  L_CAN_Interrupt164
  L_CAN_Interrupt165
  L_CAN_Interrupt166
  L_CAN_Interrupt167
  L_CAN_Interrupt168
  L_CAN_Interrupt169
  L_CAN_Interrupt170
  L_CAN_Interrupt171
  L_CAN_Interrupt172
  L_CAN_Interrupt173
  L__Can_write174
  L__Can_write175
  L__Can_write176
  L__CAN_Interrupt177
  L__CAN_Interrupt178
  L__CAN_Interrupt179
  L__CAN_Interrupt180
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read183
  L__Can_read184
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write190
  L__Can_write191
  L__Can_write192
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket195
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived198
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived200
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_end_setAllPinAsDigital
  _setAllPinAsDigital
  L_end_setInterruptPriority
  _setInterruptPriority
  L__setInterruptPriority207
  L__setInterruptPriority208
  L__setInterruptPriority209
  L__setInterruptPriority210
  L__setInterruptPriority211
  L__setInterruptPriority212
  L_end_setExternalInterrupt
  _setExternalInterrupt
  L__setExternalInterrupt214
  L__setExternalInterrupt215
  L__setExternalInterrupt216
  L_end_switchExternalInterruptEdge
  _switchExternalInterruptEdge
  L__switchExternalInterruptEdge218
  L__switchExternalInterruptEdge219
  L__switchExternalInterruptEdge220
  L__switchExternalInterruptEdge221
  L__switchExternalInterruptEdge222
  L__switchExternalInterruptEdge223
  L_end_getExternalInterruptEdge
  _getExternalInterruptEdge
  L__getExternalInterruptEdge225
  L__getExternalInterruptEdge226
  L__getExternalInterruptEdge227
  L_end_clearExternalInterrupt
  _clearExternalInterrupt
  L__clearExternalInterrupt229
  L__clearExternalInterrupt230
  L__clearExternalInterrupt231
  L_end_setTimer
  _setTimer
  L__setTimer233
  L__setTimer234
  L__setTimer235
  L_end_clearTimer
  _clearTimer
  L__clearTimer237
  L__clearTimer238
  L__clearTimer239
  L_end_turnOnTimer
  _turnOnTimer
  L__turnOnTimer241
  L__turnOnTimer242
  L__turnOnTimer243
  L_end_turnOffTimer
  _turnOffTimer
  L__turnOffTimer245
  L__turnOffTimer246
  L__turnOffTimer247
  L_end_getTimerPeriod
  _getTimerPeriod
  L_end_getTimerPrescaler
  _getTimerPrescaler
  L__getTimerPrescaler250
  L__getTimerPrescaler251
  L_end_getExactTimerPrescaler
  _getExactTimerPrescaler
  L_end_setupAnalogSampling
  _setupAnalogSampling
  L_end_turnOnAnalogModule
  _turnOnAnalogModule
  L_end_turnOffAnalogModule
  _turnOffAnalogModule
  L_end_startSampling
  _startSampling
  L_end_getAnalogValue
  _getAnalogValue
  L_end_setAnalogPIN
  _setAnalogPIN
  L_end_unsetAnalogPIN
  _unsetAnalogPIN
  L_end_setAnalogInterrupt
  _setAnalogInterrupt
  L_end_unsetAnalogInterrupt
  _unsetAnalogInterrupt
  L_end_clearAnalogInterrupt
  _clearAnalogInterrupt
  L_end_setAutomaticSampling
  _setAutomaticSampling
  L_end_unsetAutomaticSampling
  _unsetAutomaticSampling
  L_end_setAnalogVoltageReference
  _setAnalogVoltageReference
  L_end_setAnalogDataOutputFormat
  _setAnalogDataOutputFormat
  L_end_getMinimumAnalogClockConversion
  _getMinimumAnalogClockConversion
  L_end_EEPROM_writeInt
  _EEPROM_writeInt
  L_end_EEPROM_readInt
  _EEPROM_readInt
  L_end_EEPROM_writeArray
  _EEPROM_writeArray
  L__EEPROM_writeArray271
  L_end_EEPROM_readArray
  _EEPROM_readArray
  L__EEPROM_readArray273
  L_end_CAN_routine
  _CAN_routine
  L_end_Debug_UART_Write
  _Debug_UART_Write
  L_end_counter_quarter_turn_match
  _counter_quarter_turn_match
  L__counter_quarter_turn_match277
  L__counter_quarter_turn_match278
  L__counter_quarter_turn_match279
  L_end_EBB_control
  _EBB_control
  L__EBB_control281
  L__EBB_control282
  L__EBB_control283
  L__EBB_control284
  L__EBB_control285
  L__EBB_control286
  L__EBB_control287
  L__EBB_control288
  L__EBB_control289
  L__EBB_control290
  L__EBB_control291
  L__EBB_control292
  L__EBB_control293
  L__EBB_control294
  L__EBB_control295
  L__EBB_control296
  L__EBB_control297
  L__EBB_control298
  L__EBB_control299
  L__EBB_control300
  L__EBB_control301
  L__EBB_control302
  L__EBB_control303
  L__EBB_control304
  L__EBB_control305
  L__EBB_control306
  L__EBB_control307
  L__EBB_control308
  L__EBB_control309
  L__EBB_control310
  L__EBB_control311
  L__EBB_control312
  L_end_EBB_Init
  _EBB_Init
  L__EBB_Init314
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt316
  L__timer1_interrupt317
  L__timer1_interrupt318
  L__timer1_interrupt319
  L__timer1_interrupt320
  L__timer1_interrupt321
  L_end_timer2_interrupt
  _timer2_interrupt
  L__timer2_interrupt323
  L_end_timer4_interrupt
  _timer4_interrupt
  L__timer4_interrupt325
  L_end_main
  _main
  L__main_end_loop
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt329
  L__CAN_Interrupt330
  L__CAN_Interrupt331
  L__CAN_Interrupt332
  L__CAN_Interrupt333
  L__CAN_Interrupt334
  L__CAN_Interrupt335
  L__CAN_Interrupt336
  L__CAN_Interrupt337
  L__CAN_Interrupt338
  L___Lib_CAN_1_CAN1IDToRegs0
  L___Lib_CAN_1_CAN1IDToRegs1
  L___Lib_CAN_1_CAN1IDToRegs2
  L___Lib_CAN_1_CAN1IDToRegs3
  L___Lib_CAN_1_CAN1IDToRegs4
  L___Lib_CAN_1_CAN1IDToRegs5
  L___Lib_CAN_1_CAN1IDToRegs6
  L___Lib_CAN_1_CAN1IDToRegs7
  L___Lib_CAN_1_CAN1IDToRegs8
  L___Lib_CAN_1_CAN1IDToRegs9
  L___Lib_CAN_1_CAN1IDToRegs10
  L___Lib_CAN_1_CAN1IDToRegs11
  L___Lib_CAN_1_CAN1IDToRegs12
  L_CAN1SetOperationMode13
  L_CAN1SetOperationMode14
  L_CAN1SetOperationMode15
  L_CAN1SetOperationMode16
  L_CAN1SetBaudRate17
  L_CAN1SetBaudRate18
  L_CAN1SetBaudRate19
  L_CAN1SetMask20
  L_CAN1SetMask21
  L_CAN1SetFilter22
  L_CAN1SetFilter23
  L_CAN1SetFilter24
  L_CAN1SetFilter25
  L_CAN1SetFilter26
  L_CAN1SetFilter27
  L_CAN1SetFilter28
  L_CAN1SetFilter29
  L___Lib_CAN_1_RegsToCAN1ID30
  L___Lib_CAN_1_RegsToCAN1ID31
  L_CAN1Write32
  L_CAN1Write33
  L_CAN1Write34
  L_CAN1Write35
  L_CAN1Write36
  L_CAN1Write37
  L_CAN1Write38
  L_CAN1Write39
  L_CAN1Write40
  L_CAN1Write41
  L_CAN1Write42
  L_CAN1Read43
  L_CAN1Read44
  L_CAN1Read45
  L_CAN1Read46
  L_CAN1Read47
  L_CAN1Read48
  L_CAN1Read49
  L_CAN1Read50
  L_CAN1Read51
  L_CAN1Read52
  L_CAN1Read53
  L_CAN1Read54
  L_CAN1Read55
  L_CAN1Read56
  L_CAN1Read57
  L_CAN1Read58
  L_CAN1Initialize59
  L_CAN1Initialize60
  L_CAN1Initialize61
  L_CAN1Initialize62
  L_CAN1Initialize63
  L_end_CAN1IDToRegs
  __Lib_CAN_1_CAN1IDToRegs
  L___Lib_CAN_1_CAN1IDToRegs65
  L___Lib_CAN_1_CAN1IDToRegs66
  L___Lib_CAN_1_CAN1IDToRegs67
  L_end_CAN1SetOperationMode
  _CAN1SetOperationMode
  L__CAN1SetOperationMode69
  L__CAN1SetOperationMode70
  L_end_CAN1GetOperationMode
  _CAN1GetOperationMode
  L_end_CAN1SetBaudRate
  _CAN1SetBaudRate
  L_end_CAN1SetMask
  _CAN1SetMask
  L__CAN1SetMask74
  L_end_CAN1SetFilter
  _CAN1SetFilter
  L__CAN1SetFilter76
  L__CAN1SetFilter77
  L__CAN1SetFilter78
  L__CAN1SetFilter79
  L__CAN1SetFilter80
  L_end_RegsToCAN1ID
  __Lib_CAN_1_RegsToCAN1ID
  L_end_CAN1Write
  _CAN1Write
  L__CAN1Write83
  L_end_CAN1Read
  _CAN1Read
  L__CAN1Read85
  L__CAN1Read86
  L__CAN1Read87
  L_end_CAN1Initialize
  _CAN1Initialize
  L__CAN1Initialize89
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L_setInterruptPriority12
  L_setInterruptPriority13
  L_setInterruptPriority14
  L_setInterruptPriority15
  L_setInterruptPriority16
  L_setInterruptPriority17
  L_setInterruptPriority18
  L_setInterruptPriority19
  L_setInterruptPriority20
  L_setExternalInterrupt21
  L_setExternalInterrupt22
  L_setExternalInterrupt23
  L_setExternalInterrupt24
  L_setExternalInterrupt25
  L_setExternalInterrupt26
  L_switchExternalInterruptEdge27
  L_switchExternalInterruptEdge28
  L_switchExternalInterruptEdge29
  L_switchExternalInterruptEdge30
  L_switchExternalInterruptEdge31
  L_switchExternalInterruptEdge32
  L_switchExternalInterruptEdge33
  L_switchExternalInterruptEdge34
  L_switchExternalInterruptEdge35
  L_switchExternalInterruptEdge36
  L_switchExternalInterruptEdge37
  L_switchExternalInterruptEdge38
  L_getExternalInterruptEdge39
  L_getExternalInterruptEdge40
  L_getExternalInterruptEdge41
  L_getExternalInterruptEdge42
  L_getExternalInterruptEdge43
  L_getExternalInterruptEdge44
  L_clearExternalInterrupt45
  L_clearExternalInterrupt46
  L_clearExternalInterrupt47
  L_clearExternalInterrupt48
  L_clearExternalInterrupt49
  L_clearExternalInterrupt50
  L_setTimer51
  L_setTimer52
  L_setTimer53
  L_setTimer54
  L_setTimer55
  L_clearTimer56
  L_clearTimer57
  L_clearTimer58
  L_clearTimer59
  L_clearTimer60
  L_turnOnTimer61
  L_turnOnTimer62
  L_turnOnTimer63
  L_turnOnTimer64
  L_turnOnTimer65
  L_turnOffTimer66
  L_turnOffTimer67
  L_turnOffTimer68
  L_turnOffTimer69
  L_turnOffTimer70
  L_getTimerPrescaler71
  L_getTimerPrescaler72
  L_getTimerPrescaler73
  L_getTimerPrescaler74
  L_EEPROM_writeInt75
  L_EEPROM_writeInt76
  L_EEPROM_writeArray77
  L_EEPROM_writeArray78
  L_EEPROM_writeArray79
  L_EEPROM_readArray80
  L_EEPROM_readArray81
  L_EEPROM_readArray82
  L_counter_quarter_turn_match83
  L_counter_quarter_turn_match84
  L_counter_quarter_turn_match85
  L_counter_quarter_turn_match86
  L_counter_quarter_turn_match87
  L_counter_quarter_turn_match88
  L_EBB_control89
  L_EBB_control90
  L_EBB_control91
  L_EBB_control92
  L_EBB_control93
  L_EBB_control94
  L_EBB_control95
  L_EBB_control96
  L_EBB_control97
  L_EBB_control98
  L_EBB_control99
  L_EBB_control100
  L_EBB_control101
  L_EBB_control102
  L_EBB_control103
  L_EBB_control104
  L_EBB_control105
  L_EBB_control106
  L_EBB_control107
  L_EBB_control108
  L_EBB_control109
  L_EBB_control110
  L_EBB_control111
  L_EBB_control112
  L_EBB_control113
  L_EBB_control114
  L_EBB_control115
  L_EBB_control116
  L_EBB_control117
  L_EBB_control118
  L_EBB_control119
  L_EBB_control120
  L_EBB_control121
  L_EBB_control122
  L_EBB_control123
  L_EBB_control124
  L_EBB_control125
  L_EBB_control126
  L_EBB_control127
  L_EBB_control128
  L_EBB_control129
  L_EBB_control130
  L_EBB_control131
  L_EBB_control132
  L_EBB_control133
  L_EBB_control134
  L_EBB_control135
  L_EBB_control136
  L_EBB_control137
  L_EBB_control138
  L_EBB_control139
  L_EBB_Init140
  L_EBB_Init141
  L_EBB_Init142
  L_EBB_Init143
  L_EBB_Init144
  L_EBB_Init145
  L_EBB_Init146
  L_EBB_Init147
  L_EBB_Init148
  L_EBB_Init149
  L_timer1_interrupt151
  L_timer1_interrupt152
  L_timer1_interrupt153
  L_timer1_interrupt154
  L_timer1_interrupt155
  L_timer1_interrupt156
  L_timer2_interrupt157
  L_timer4_interrupt158
  L_main159
  L_main160
  L_CAN_Interrupt161
  L_CAN_Interrupt162
  L_CAN_Interrupt163
  L_CAN_Interrupt164
  L_CAN_Interrupt165
  L_CAN_Interrupt166
  L_CAN_Interrupt167
  L_CAN_Interrupt168
  L_CAN_Interrupt169
  L_CAN_Interrupt170
  L_CAN_Interrupt171
  L_CAN_Interrupt172
  L_CAN_Interrupt173
  L__Can_write174
  L__Can_write175
  L__Can_write176
  L__CAN_Interrupt177
  L__CAN_Interrupt178
  L__CAN_Interrupt179
  L__CAN_Interrupt180
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read183
  L__Can_read184
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write190
  L__Can_write191
  L__Can_write192
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket195
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived198
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived200
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_end_setAllPinAsDigital
  _setAllPinAsDigital
  L_end_setInterruptPriority
  _setInterruptPriority
  L__setInterruptPriority207
  L__setInterruptPriority208
  L__setInterruptPriority209
  L__setInterruptPriority210
  L__setInterruptPriority211
  L__setInterruptPriority212
  L_end_setExternalInterrupt
  _setExternalInterrupt
  L__setExternalInterrupt214
  L__setExternalInterrupt215
  L__setExternalInterrupt216
  L_end_switchExternalInterruptEdge
  _switchExternalInterruptEdge
  L__switchExternalInterruptEdge218
  L__switchExternalInterruptEdge219
  L__switchExternalInterruptEdge220
  L__switchExternalInterruptEdge221
  L__switchExternalInterruptEdge222
  L__switchExternalInterruptEdge223
  L_end_getExternalInterruptEdge
  _getExternalInterruptEdge
  L__getExternalInterruptEdge225
  L__getExternalInterruptEdge226
  L__getExternalInterruptEdge227
  L_end_clearExternalInterrupt
  _clearExternalInterrupt
  L__clearExternalInterrupt229
  L__clearExternalInterrupt230
  L__clearExternalInterrupt231
  L_end_setTimer
  _setTimer
  L__setTimer233
  L__setTimer234
  L__setTimer235
  L_end_clearTimer
  _clearTimer
  L__clearTimer237
  L__clearTimer238
  L__clearTimer239
  L_end_turnOnTimer
  _turnOnTimer
  L__turnOnTimer241
  L__turnOnTimer242
  L__turnOnTimer243
  L_end_turnOffTimer
  _turnOffTimer
  L__turnOffTimer245
  L__turnOffTimer246
  L__turnOffTimer247
  L_end_getTimerPeriod
  _getTimerPeriod
  L_end_getTimerPrescaler
  _getTimerPrescaler
  L__getTimerPrescaler250
  L__getTimerPrescaler251
  L_end_getExactTimerPrescaler
  _getExactTimerPrescaler
  L_end_setupAnalogSampling
  _setupAnalogSampling
  L_end_turnOnAnalogModule
  _turnOnAnalogModule
  L_end_turnOffAnalogModule
  _turnOffAnalogModule
  L_end_startSampling
  _startSampling
  L_end_getAnalogValue
  _getAnalogValue
  L_end_setAnalogPIN
  _setAnalogPIN
  L_end_unsetAnalogPIN
  _unsetAnalogPIN
  L_end_setAnalogInterrupt
  _setAnalogInterrupt
  L_end_unsetAnalogInterrupt
  _unsetAnalogInterrupt
  L_end_clearAnalogInterrupt
  _clearAnalogInterrupt
  L_end_setAutomaticSampling
  _setAutomaticSampling
  L_end_unsetAutomaticSampling
  _unsetAutomaticSampling
  L_end_setAnalogVoltageReference
  _setAnalogVoltageReference
  L_end_setAnalogDataOutputFormat
  _setAnalogDataOutputFormat
  L_end_getMinimumAnalogClockConversion
  _getMinimumAnalogClockConversion
  L_end_EEPROM_writeInt
  _EEPROM_writeInt
  L_end_EEPROM_readInt
  _EEPROM_readInt
  L_end_EEPROM_writeArray
  _EEPROM_writeArray
  L__EEPROM_writeArray271
  L_end_EEPROM_readArray
  _EEPROM_readArray
  L__EEPROM_readArray273
  L_end_CAN_routine
  _CAN_routine
  L_end_Debug_UART_Write
  _Debug_UART_Write
  L_end_counter_quarter_turn_match
  _counter_quarter_turn_match
  L__counter_quarter_turn_match277
  L__counter_quarter_turn_match278
  L__counter_quarter_turn_match279
  L_end_EBB_control
  _EBB_control
  L__EBB_control281
  L__EBB_control282
  L__EBB_control283
  L__EBB_control284
  L__EBB_control285
  L__EBB_control286
  L__EBB_control287
  L__EBB_control288
  L__EBB_control289
  L__EBB_control290
  L__EBB_control291
  L__EBB_control292
  L__EBB_control293
  L__EBB_control294
  L__EBB_control295
  L__EBB_control296
  L__EBB_control297
  L__EBB_control298
  L__EBB_control299
  L__EBB_control300
  L__EBB_control301
  L__EBB_control302
  L__EBB_control303
  L__EBB_control304
  L__EBB_control305
  L__EBB_control306
  L__EBB_control307
  L__EBB_control308
  L__EBB_control309
  L__EBB_control310
  L__EBB_control311
  L__EBB_control312
  L_end_EBB_Init
  _EBB_Init
  L__EBB_Init314
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt316
  L__timer1_interrupt317
  L__timer1_interrupt318
  L__timer1_interrupt319
  L__timer1_interrupt320
  L__timer1_interrupt321
  L_end_timer2_interrupt
  _timer2_interrupt
  L__timer2_interrupt323
  L_end_timer4_interrupt
  _timer4_interrupt
  L__timer4_interrupt325
  L_end_main
  _main
  L__main_end_loop
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt329
  L__CAN_Interrupt330
  L__CAN_Interrupt331
  L__CAN_Interrupt332
  L__CAN_Interrupt333
  L__CAN_Interrupt334
  L__CAN_Interrupt335
  L__CAN_Interrupt336
  L__CAN_Interrupt337
  L__CAN_Interrupt338
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L_setInterruptPriority12
  L_setInterruptPriority13
  L_setInterruptPriority14
  L_setInterruptPriority15
  L_setInterruptPriority16
  L_setInterruptPriority17
  L_setInterruptPriority18
  L_setInterruptPriority19
  L_setInterruptPriority20
  L_setExternalInterrupt21
  L_setExternalInterrupt22
  L_setExternalInterrupt23
  L_setExternalInterrupt24
  L_setExternalInterrupt25
  L_setExternalInterrupt26
  L_switchExternalInterruptEdge27
  L_switchExternalInterruptEdge28
  L_switchExternalInterruptEdge29
  L_switchExternalInterruptEdge30
  L_switchExternalInterruptEdge31
  L_switchExternalInterruptEdge32
  L_switchExternalInterruptEdge33
  L_switchExternalInterruptEdge34
  L_switchExternalInterruptEdge35
  L_switchExternalInterruptEdge36
  L_switchExternalInterruptEdge37
  L_switchExternalInterruptEdge38
  L_getExternalInterruptEdge39
  L_getExternalInterruptEdge40
  L_getExternalInterruptEdge41
  L_getExternalInterruptEdge42
  L_getExternalInterruptEdge43
  L_getExternalInterruptEdge44
  L_clearExternalInterrupt45
  L_clearExternalInterrupt46
  L_clearExternalInterrupt47
  L_clearExternalInterrupt48
  L_clearExternalInterrupt49
  L_clearExternalInterrupt50
  L_setTimer51
  L_setTimer52
  L_setTimer53
  L_setTimer54
  L_setTimer55
  L_clearTimer56
  L_clearTimer57
  L_clearTimer58
  L_clearTimer59
  L_clearTimer60
  L_turnOnTimer61
  L_turnOnTimer62
  L_turnOnTimer63
  L_turnOnTimer64
  L_turnOnTimer65
  L_turnOffTimer66
  L_turnOffTimer67
  L_turnOffTimer68
  L_turnOffTimer69
  L_turnOffTimer70
  L_getTimerPrescaler71
  L_getTimerPrescaler72
  L_getTimerPrescaler73
  L_getTimerPrescaler74
  L_EEPROM_writeInt75
  L_EEPROM_writeInt76
  L_EEPROM_writeArray77
  L_EEPROM_writeArray78
  L_EEPROM_writeArray79
  L_EEPROM_readArray80
  L_EEPROM_readArray81
  L_EEPROM_readArray82
  L_counter_quarter_turn_match83
  L_counter_quarter_turn_match84
  L_counter_quarter_turn_match85
  L_counter_quarter_turn_match86
  L_counter_quarter_turn_match87
  L_counter_quarter_turn_match88
  L_EBB_control89
  L_EBB_control90
  L_EBB_control91
  L_EBB_control92
  L_EBB_control93
  L_EBB_control94
  L_EBB_control95
  L_EBB_control96
  L_EBB_control97
  L_EBB_control98
  L_EBB_control99
  L_EBB_control100
  L_EBB_control101
  L_EBB_control102
  L_EBB_control103
  L_EBB_control104
  L_EBB_control105
  L_EBB_control106
  L_EBB_control107
  L_EBB_control108
  L_EBB_control109
  L_EBB_control110
  L_EBB_control111
  L_EBB_control112
  L_EBB_control113
  L_EBB_control114
  L_EBB_control115
  L_EBB_control116
  L_EBB_control117
  L_EBB_control118
  L_EBB_control119
  L_EBB_control120
  L_EBB_control121
  L_EBB_control122
  L_EBB_control123
  L_EBB_control124
  L_EBB_control125
  L_EBB_control126
  L_EBB_control127
  L_EBB_control128
  L_EBB_control129
  L_EBB_control130
  L_EBB_control131
  L_EBB_control132
  L_EBB_control133
  L_EBB_control134
  L_EBB_control135
  L_EBB_control136
  L_EBB_control137
  L_EBB_control138
  L_EBB_control139
  L_EBB_Init140
  L_EBB_Init141
  L_EBB_Init142
  L_EBB_Init143
  L_EBB_Init144
  L_EBB_Init145
  L_EBB_Init146
  L_EBB_Init147
  L_EBB_Init148
  L_EBB_Init149
  L_timer1_interrupt151
  L_timer1_interrupt152
  L_timer1_interrupt153
  L_timer1_interrupt154
  L_timer1_interrupt155
  L_timer1_interrupt156
  L_timer2_interrupt157
  L_timer4_interrupt158
  L_main159
  L_main160
  L_CAN_Interrupt161
  L_CAN_Interrupt162
  L_CAN_Interrupt163
  L_CAN_Interrupt164
  L_CAN_Interrupt165
  L_CAN_Interrupt166
  L_CAN_Interrupt167
  L_CAN_Interrupt168
  L_CAN_Interrupt169
  L_CAN_Interrupt170
  L_CAN_Interrupt171
  L_CAN_Interrupt172
  L_CAN_Interrupt173
  L__Can_write174
  L__Can_write175
  L__Can_write176
  L__CAN_Interrupt177
  L__CAN_Interrupt178
  L__CAN_Interrupt179
  L__CAN_Interrupt180
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read183
  L__Can_read184
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write190
  L__Can_write191
  L__Can_write192
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket195
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived198
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived200
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_end_setAllPinAsDigital
  _setAllPinAsDigital
  L_end_setInterruptPriority
  _setInterruptPriority
  L__setInterruptPriority207
  L__setInterruptPriority208
  L__setInterruptPriority209
  L__setInterruptPriority210
  L__setInterruptPriority211
  L__setInterruptPriority212
  L_end_setExternalInterrupt
  _setExternalInterrupt
  L__setExternalInterrupt214
  L__setExternalInterrupt215
  L__setExternalInterrupt216
  L_end_switchExternalInterruptEdge
  _switchExternalInterruptEdge
  L__switchExternalInterruptEdge218
  L__switchExternalInterruptEdge219
  L__switchExternalInterruptEdge220
  L__switchExternalInterruptEdge221
  L__switchExternalInterruptEdge222
  L__switchExternalInterruptEdge223
  L_end_getExternalInterruptEdge
  _getExternalInterruptEdge
  L__getExternalInterruptEdge225
  L__getExternalInterruptEdge226
  L__getExternalInterruptEdge227
  L_end_clearExternalInterrupt
  _clearExternalInterrupt
  L__clearExternalInterrupt229
  L__clearExternalInterrupt230
  L__clearExternalInterrupt231
  L_end_setTimer
  _setTimer
  L__setTimer233
  L__setTimer234
  L__setTimer235
  L_end_clearTimer
  _clearTimer
  L__clearTimer237
  L__clearTimer238
  L__clearTimer239
  L_end_turnOnTimer
  _turnOnTimer
  L__turnOnTimer241
  L__turnOnTimer242
  L__turnOnTimer243
  L_end_turnOffTimer
  _turnOffTimer
  L__turnOffTimer245
  L__turnOffTimer246
  L__turnOffTimer247
  L_end_getTimerPeriod
  _getTimerPeriod
  L_end_getTimerPrescaler
  _getTimerPrescaler
  L__getTimerPrescaler250
  L__getTimerPrescaler251
  L_end_getExactTimerPrescaler
  _getExactTimerPrescaler
  L_end_setupAnalogSampling
  _setupAnalogSampling
  L_end_turnOnAnalogModule
  _turnOnAnalogModule
  L_end_turnOffAnalogModule
  _turnOffAnalogModule
  L_end_startSampling
  _startSampling
  L_end_getAnalogValue
  _getAnalogValue
  L_end_setAnalogPIN
  _setAnalogPIN
  L_end_unsetAnalogPIN
  _unsetAnalogPIN
  L_end_setAnalogInterrupt
  _setAnalogInterrupt
  L_end_unsetAnalogInterrupt
  _unsetAnalogInterrupt
  L_end_clearAnalogInterrupt
  _clearAnalogInterrupt
  L_end_setAutomaticSampling
  _setAutomaticSampling
  L_end_unsetAutomaticSampling
  _unsetAutomaticSampling
  L_end_setAnalogVoltageReference
  _setAnalogVoltageReference
  L_end_setAnalogDataOutputFormat
  _setAnalogDataOutputFormat
  L_end_getMinimumAnalogClockConversion
  _getMinimumAnalogClockConversion
  L_end_EEPROM_writeInt
  _EEPROM_writeInt
  L_end_EEPROM_readInt
  _EEPROM_readInt
  L_end_EEPROM_writeArray
  _EEPROM_writeArray
  L__EEPROM_writeArray271
  L_end_EEPROM_readArray
  _EEPROM_readArray
  L__EEPROM_readArray273
  L_end_CAN_routine
  _CAN_routine
  L_end_Debug_UART_Write
  _Debug_UART_Write
  L_end_counter_quarter_turn_match
  _counter_quarter_turn_match
  L__counter_quarter_turn_match277
  L__counter_quarter_turn_match278
  L__counter_quarter_turn_match279
  L_end_EBB_control
  _EBB_control
  L__EBB_control281
  L__EBB_control282
  L__EBB_control283
  L__EBB_control284
  L__EBB_control285
  L__EBB_control286
  L__EBB_control287
  L__EBB_control288
  L__EBB_control289
  L__EBB_control290
  L__EBB_control291
  L__EBB_control292
  L__EBB_control293
  L__EBB_control294
  L__EBB_control295
  L__EBB_control296
  L__EBB_control297
  L__EBB_control298
  L__EBB_control299
  L__EBB_control300
  L__EBB_control301
  L__EBB_control302
  L__EBB_control303
  L__EBB_control304
  L__EBB_control305
  L__EBB_control306
  L__EBB_control307
  L__EBB_control308
  L__EBB_control309
  L__EBB_control310
  L__EBB_control311
  L__EBB_control312
  L_end_EBB_Init
  _EBB_Init
  L__EBB_Init314
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt316
  L__timer1_interrupt317
  L__timer1_interrupt318
  L__timer1_interrupt319
  L__timer1_interrupt320
  L__timer1_interrupt321
  L_end_timer2_interrupt
  _timer2_interrupt
  L__timer2_interrupt323
  L_end_timer4_interrupt
  _timer4_interrupt
  L__timer4_interrupt325
  L_end_main
  _main
  L__main_end_loop
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt329
  L__CAN_Interrupt330
  L__CAN_Interrupt331
  L__CAN_Interrupt332
  L__CAN_Interrupt333
  L__CAN_Interrupt334
  L__CAN_Interrupt335
  L__CAN_Interrupt336
  L__CAN_Interrupt337
  L__CAN_Interrupt338
  L_islower0
  L_islower1
  L_isupper2
  L_isupper3
  L_isalpha4
  L_isalpha5
  L_iscntrl6
  L_iscntrl7
  L_isdigit8
  L_isdigit9
  L_isalnum10
  L_isalnum11
  L_isspace12
  L_isspace13
  L_isspace14
  L_isspace15
  L_ispunct16
  L_ispunct17
  L_ispunct18
  L_ispunct19
  L_ispunct20
  L_ispunct21
  L_ispunct22
  L_ispunct23
  L_isgraph24
  L_isgraph25
  L_isxdigit26
  L_isxdigit27
  L_isxdigit28
  L_isxdigit29
  L_tolower30
  L_tolower31
  L_tolower32
  L_toupper33
  L_toupper34
  L_toupper35
  L__isspace36
  L__isspace37
  L__isspace38
  L__tolower39
  L__tolower40
  L__tolower41
  L__toupper42
  L__toupper43
  L__toupper44
  L_end_islower
  _islower
  L__islower46
  L__islower47
  L_end_isupper
  _isupper
  L__isupper49
  L__isupper50
  L_end_isalpha
  _isalpha
  L__isalpha52
  L__isalpha53
  L_end_iscntrl
  _iscntrl
  L__iscntrl55
  L__iscntrl56
  L_end_isdigit
  _isdigit
  L__isdigit58
  L__isdigit59
  L_end_isalnum
  _isalnum
  L__isalnum61
  L__isalnum62
  L__isalnum63
  L_end_isspace
  _isspace
  L__isspace65
  L__isspace66
  L__isspace67
  L_end_ispunct
  _ispunct
  L__ispunct69
  L__ispunct70
  L__ispunct71
  L__ispunct72
  L__ispunct73
  L__ispunct74
  L__ispunct75
  L__ispunct76
  L_end_isgraph
  _isgraph
  L__isgraph78
  L__isgraph79
  L__isgraph80
  L__isgraph81
  L_end_isxdigit
  _isxdigit
  L__isxdigit83
  L__isxdigit84
  L__isxdigit85
  L__isxdigit86
  L_end_tolower
  _tolower
  L__tolower88
  L__tolower89
  L_end_toupper
  _toupper
  L__toupper91
  L__toupper92
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
  L___Lib_Sprintf_fround0
  L___Lib_Sprintf_fround1
  L___Lib_Sprintf_fround2
  L___Lib_Sprintf_scale3
  L___Lib_Sprintf_scale4
  L___Lib_Sprintf_scale5
  L___Lib_Sprintf_scale6
  L___Lib_Sprintf_scale7
  L___Lib_Sprintf_scale8
  L___Lib_Sprintf_scale9
  L___Lib_Sprintf__doprntf10
  L___Lib_Sprintf__doprntf11
  L___Lib_Sprintf__doprntf12
  L___Lib_Sprintf__doprntf13
  L___Lib_Sprintf__doprntf14
  L___Lib_Sprintf__doprntf15
  L___Lib_Sprintf__doprntf16
  L___Lib_Sprintf__doprntf17
  L___Lib_Sprintf__doprntf18
  L___Lib_Sprintf__doprntf19
  L___Lib_Sprintf__doprntf20
  L___Lib_Sprintf__doprntf21
  L___Lib_Sprintf__doprntf22
  L___Lib_Sprintf__doprntf23
  L___Lib_Sprintf__doprntf24
  L___Lib_Sprintf__doprntf25
  L___Lib_Sprintf__doprntf26
  L___Lib_Sprintf__doprntf27
  L___Lib_Sprintf__doprntf28
  L___Lib_Sprintf__doprntf29
  L___Lib_Sprintf__doprntf30
  L___Lib_Sprintf__doprntf31
  L___Lib_Sprintf__doprntf32
  L___Lib_Sprintf__doprntf33
  L___Lib_Sprintf__doprntf34
  L___Lib_Sprintf__doprntf35
  L___Lib_Sprintf__doprntf36
  ____doprntf_loop
  L___Lib_Sprintf__doprntf37
  L___Lib_Sprintf__doprntf38
  L___Lib_Sprintf__doprntf39
  L___Lib_Sprintf__doprntf40
  L___Lib_Sprintf__doprntf41
  L___Lib_Sprintf__doprntf42
  L___Lib_Sprintf__doprntf43
  L___Lib_Sprintf__doprntf44
  L___Lib_Sprintf__doprntf45
  L___Lib_Sprintf__doprntf46
  L___Lib_Sprintf__doprntf47
  L___Lib_Sprintf__doprntf48
  L___Lib_Sprintf__doprntf49
  L___Lib_Sprintf__doprntf50
  L___Lib_Sprintf__doprntf51
  L___Lib_Sprintf__doprntf52
  L___Lib_Sprintf__doprntf53
  L___Lib_Sprintf__doprntf54
  L___Lib_Sprintf__doprntf55
  ____doprntf_dostring
  L___Lib_Sprintf__doprntf56
  L___Lib_Sprintf__doprntf57
  L___Lib_Sprintf__doprntf58
  L___Lib_Sprintf__doprntf59
  L___Lib_Sprintf__doprntf60
  L___Lib_Sprintf__doprntf61
  L___Lib_Sprintf__doprntf62
  L___Lib_Sprintf__doprntf63
  L___Lib_Sprintf__doprntf64
  L___Lib_Sprintf__doprntf65
  L___Lib_Sprintf__doprntf66
  L___Lib_Sprintf__doprntf67
  L___Lib_Sprintf__doprntf68
  L___Lib_Sprintf__doprntf69
  L___Lib_Sprintf__doprntf70
  L___Lib_Sprintf__doprntf71
  L___Lib_Sprintf__doprntf72
  L___Lib_Sprintf__doprntf73
  L___Lib_Sprintf__doprntf74
  L___Lib_Sprintf__doprntf75
  L___Lib_Sprintf__doprntf76
  L___Lib_Sprintf__doprntf77
  L___Lib_Sprintf__doprntf78
  L___Lib_Sprintf__doprntf79
  L___Lib_Sprintf__doprntf80
  L___Lib_Sprintf__doprntf81
  L___Lib_Sprintf__doprntf82
  L___Lib_Sprintf__doprntf83
  L___Lib_Sprintf__doprntf84
  L___Lib_Sprintf__doprntf85
  L___Lib_Sprintf__doprntf86
  L___Lib_Sprintf__doprntf87
  L___Lib_Sprintf__doprntf88
  L___Lib_Sprintf__doprntf89
  L___Lib_Sprintf__doprntf90
  L___Lib_Sprintf__doprntf91
  L___Lib_Sprintf__doprntf92
  L___Lib_Sprintf__doprntf93
  L___Lib_Sprintf__doprntf94
  L___Lib_Sprintf__doprntf95
  L___Lib_Sprintf__doprntf96
  L___Lib_Sprintf__doprntf97
  L___Lib_Sprintf__doprntf98
  L___Lib_Sprintf__doprntf99
  L___Lib_Sprintf__doprntf100
  L___Lib_Sprintf__doprntf101
  L___Lib_Sprintf__doprntf102
  L___Lib_Sprintf__doprntf103
  L___Lib_Sprintf__doprntf104
  L___Lib_Sprintf__doprntf105
  L___Lib_Sprintf__doprntf106
  L___Lib_Sprintf__doprntf107
  L___Lib_Sprintf__doprntf108
  L___Lib_Sprintf__doprntf109
  L___Lib_Sprintf__doprntf110
  L___Lib_Sprintf__doprntf111
  L___Lib_Sprintf__doprntf112
  L___Lib_Sprintf__doprntf113
  L___Lib_Sprintf__doprntf114
  L___Lib_Sprintf__doprntf115
  L___Lib_Sprintf__doprntf116
  L___Lib_Sprintf__doprntf117
  L___Lib_Sprintf__doprntf118
  L___Lib_Sprintf__doprntf119
  L___Lib_Sprintf__doprntf120
  L___Lib_Sprintf__doprntf121
  L___Lib_Sprintf__doprntf122
  L___Lib_Sprintf__doprntf123
  L___Lib_Sprintf__doprntf124
  L___Lib_Sprintf__doprntf125
  L___Lib_Sprintf__doprntf126
  L___Lib_Sprintf__doprntf127
  L___Lib_Sprintf__doprntf128
  L___Lib_Sprintf__doprntf129
  L___Lib_Sprintf__doprntf130
  L___Lib_Sprintf__doprntf131
  L___Lib_Sprintf__doprntf132
  L___Lib_Sprintf__doprntf133
  L___Lib_Sprintf__doprntf134
  L___Lib_Sprintf__doprntf135
  L___Lib_Sprintf__doprntf136
  L___Lib_Sprintf__doprntf137
  L___Lib_Sprintf__doprntf138
  L___Lib_Sprintf__doprntf139
  L___Lib_Sprintf__doprntf140
  L___Lib_Sprintf__doprntf141
  L___Lib_Sprintf__doprntf142
  L___Lib_Sprintf__doprntf143
  L___Lib_Sprintf__doprntf144
  L___Lib_Sprintf__doprntf145
  L___Lib_Sprintf__doprntf146
  L___Lib_Sprintf__doprntf147
  L___Lib_Sprintf__doprntf148
  L___Lib_Sprintf__doprntf149
  L___Lib_Sprintf__doprntf150
  L___Lib_Sprintf__doprntf151
  L___Lib_Sprintf__doprntf152
  L___Lib_Sprintf__doprntf153
  L___Lib_Sprintf__doprntf154
  L___Lib_Sprintf__doprntf155
  L___Lib_Sprintf__doprntf156
  L___Lib_Sprintf__doprntf157
  L___Lib_Sprintf__doprntf158
  L___Lib_Sprintf__doprntf159
  L___Lib_Sprintf__doprntf160
  L___Lib_Sprintf__doprntf161
  L___Lib_Sprintf__doprntf162
  L___Lib_Sprintf__doprntf163
  L___Lib_Sprintf__doprntf164
  L___Lib_Sprintf__doprntf165
  L___Lib_Sprintf__doprntf166
  L___Lib_Sprintf__doprntf167
  L___Lib_Sprintf__doprntf168
  L___Lib_Sprintf__doprntf169
  L___Lib_Sprintf__doprntf170
  L___Lib_Sprintf__doprntf171
  L___Lib_Sprintf__doprntf172
  L___Lib_Sprintf__doprntf173
  L___Lib_Sprintf__doprntf174
  L___Lib_Sprintf__doprntf175
  L___Lib_Sprintf__doprntf176
  L___Lib_Sprintf__doprntf177
  L___Lib_Sprintf__doprntf178
  L___Lib_Sprintf__doprntf179
  L___Lib_Sprintf__doprntf180
  L___Lib_Sprintf__doprntf181
  L___Lib_Sprintf__doprntf182
  L___Lib_Sprintf__doprntf183
  L___Lib_Sprintf__doprntf184
  L___Lib_Sprintf__doprntf185
  L___Lib_Sprintf__doprntf186
  L___Lib_Sprintf__doprntf187
  L___Lib_Sprintf__doprntf188
  L___Lib_Sprintf__doprntf189
  L___Lib_Sprintf__doprntf190
  L___Lib_Sprintf__doprntf191
  L___Lib_Sprintf__doprntf192
  L___Lib_Sprintf__doprntf193
  L___Lib_Sprintf__doprntf194
  L___Lib_Sprintf__doprntf195
  L___Lib_Sprintf__doprntf196
  L___Lib_Sprintf__doprntf197
  L___Lib_Sprintf__doprntf198
  L___Lib_Sprintf__doprntf199
  L___Lib_Sprintf__doprntf200
  L___Lib_Sprintf__doprntf201
  L___Lib_Sprintf__doprntf202
  L___Lib_Sprintf__doprntf203
  L___Lib_Sprintf__doprntf204
  L___Lib_Sprintf__doprntf205
  L___Lib_Sprintf__doprntf206
  L___Lib_Sprintf__doprntf207
  L___Lib_Sprintf__doprntf208
  L___Lib_Sprintf__doprntf209
  L___Lib_Sprintf__doprntf210
  L___Lib_Sprintf__doprntf211
  L___Lib_Sprintf__doprntf212
  L___Lib_Sprintf__doprntf213
  L___Lib_Sprintf__doprntf214
  L___Lib_Sprintf__doprntf215
  L___Lib_Sprintf__doprntf216
  L___Lib_Sprintf__doprntf217
  L___Lib_Sprintf__doprntf218
  L___Lib_Sprintf__doprntf219
  L___Lib_Sprintf__doprntf220
  L___Lib_Sprintf__doprntf221
  L___Lib_Sprintf__doprntf222
  L___Lib_Sprintf__doprntf223
  L___Lib_Sprintf__doprntf224
  L___Lib_Sprintf__doprntf225
  L___Lib_Sprintf__doprntf226
  L___Lib_Sprintf__doprntf227
  L___Lib_Sprintf__doprntf228
  L___Lib_Sprintf__doprntf229
  L___Lib_Sprintf__doprntf230
  L___Lib_Sprintf__doprntf231
  L___Lib_Sprintf__doprntf232
  L___Lib_Sprintf__doprntf233
  L___Lib_Sprintf__doprntf234
  L___Lib_Sprintf__doprntf235
  L___Lib_Sprintf__doprntf236
  L___Lib_Sprintf__doprntf237
  L___Lib_Sprintf__doprntf238
  L___Lib_Sprintf__doprntf239
  L___Lib_Sprintf__doprntf240
  L___Lib_Sprintf__doprntf241
  L___Lib_Sprintf__doprntf242
  L___Lib_Sprintf__doprntf243
  L___Lib_Sprintf__doprntf244
  L___Lib_Sprintf__doprntf245
  L___Lib_Sprintf__doprntf246
  L___Lib_Sprintf__doprntf247
  L___Lib_Sprintf__doprntf248
  L___Lib_Sprintf__doprntf249
  L___Lib_Sprintf__doprntf250
  L___Lib_Sprintf__doprntf251
  L___Lib_Sprintf__doprntf252
  L___Lib_Sprintf__doprntf253
  L___Lib_Sprintf__doprntf254
  L___Lib_Sprintf__doprntf255
  L___Lib_Sprintf__doprntf256
  L___Lib_Sprintf__doprntf257
  L___Lib_Sprintf__doprntf258
  L___Lib_Sprintf__doprntf259
  L___Lib_Sprintf__doprntf260
  L___Lib_Sprintf__doprntf261
  L___Lib_Sprintf__doprntf262
  L___Lib_Sprintf__doprntf263
  L___Lib_Sprintf__doprntf264
  L___Lib_Sprintf__doprntf265
  L___Lib_Sprintf__doprntf266
  L___Lib_Sprintf__doprntf267
  L___Lib_Sprintf__doprntf268
  L___Lib_Sprintf__doprntf269
  L___Lib_Sprintf__doprntf270
  L___Lib_Sprintf__doprntf271
  L___Lib_Sprintf__doprntf272
  L___Lib_Sprintf__doprntf273
  L___Lib_Sprintf__doprntf274
  L___Lib_Sprintf__doprntf275
  L___Lib_Sprintf__doprntf276
  L___Lib_Sprintf__doprntf277
  L___Lib_Sprintf__doprntf278
  L___Lib_Sprintf__doprntf279
  L___Lib_Sprintf__doprntf280
  L___Lib_Sprintf__doprntf281
  L___Lib_Sprintf__doprntf282
  L___Lib_Sprintf__doprntf283
  L___Lib_Sprintf__doprntf284
  L___Lib_Sprintf__doprntf285
  L___Lib_Sprintf__doprntf286
  L___Lib_Sprintf__doprntf287
  L___Lib_Sprintf__doprntf288
  L___Lib_Sprintf__doprntf289
  L___Lib_Sprintf__doprntf290
  L___Lib_Sprintf__doprntf291
  L___Lib_Sprintf__doprntf292
  L___Lib_Sprintf__doprntf293
  L___Lib_Sprintf__doprntf294
  L___Lib_Sprintf__doprntf295
  L___Lib_Sprintf__doprntf296
  L___Lib_Sprintf__doprntf297
  L___Lib_Sprintf__doprntf298
  L___Lib_Sprintf__doprntf299
  L___Lib_Sprintf__doprntf300
  L___Lib_Sprintf__doprntf301
  L___Lib_Sprintf__doprntf302
  L___Lib_Sprintf__doprntf303
  L___Lib_Sprintf__doprntf304
  L___Lib_Sprintf__doprntf305
  L___Lib_Sprintf__doprntf306
  L___Lib_Sprintf__doprntf307
  L___Lib_Sprintf__doprntf308
  L___Lib_Sprintf__doprntf309
  L___Lib_Sprintf__doprntf310
  L___Lib_Sprintf__doprntf311
  L___Lib_Sprintf__doprntf312
  L___Lib_Sprintf__doprntf313
  L___Lib_Sprintf__doprntf314
  L___Lib_Sprintf__doprntf315
  L___Lib_Sprintf__doprntf316
  L___Lib_Sprintf__doprntf317
  L___Lib_Sprintf__doprntf318
  L___Lib_Sprintf__doprntf319
  L___Lib_Sprintf__doprntf320
  L___Lib_Sprintf__doprntf321
  L___Lib_Sprintf__doprntf322
  L___Lib_Sprintf__doprntf323
  L___Lib_Sprintf__doprntf324
  L___Lib_Sprintf__doprntf325
  L___Lib_Sprintf__doprntf326
  L___Lib_Sprintf__doprntf327
  L___Lib_Sprintf__doprntf328
  L___Lib_Sprintf__doprntf329
  L___Lib_Sprintf__doprntf330
  L___Lib_Sprintf__doprntf331
  L___Lib_Sprintf__doprntf332
  L___Lib_Sprintf__doprntf333
  L___Lib_Sprintf__doprntf334
  L___Lib_Sprintf__doprntf335
  L___Lib_Sprintf__doprntf336
  L___Lib_Sprintf__doprntf337
  L___Lib_Sprintf__doprntf338
  L___Lib_Sprintf__doprntf339
  L___Lib_Sprintf__doprntf340
  L___Lib_Sprintf__doprntf341
  L___Lib_Sprintf__doprntf342
  L___Lib_Sprintf__doprntf343
  L___Lib_Sprintf__doprntf344
  L___Lib_Sprintf__doprntf345
  L___Lib_Sprintf__doprntf346
  L___Lib_Sprintf__doprntf347
  L___Lib_Sprintf__doprntf348
  L___Lib_Sprintf__doprntf349
  L___Lib_Sprintf__doprntf350
  L___Lib_Sprintf__doprntf351
  L___Lib_Sprintf__doprntf352
  L___Lib_Sprintf__doprntf353
  L_end_fround
  __Lib_Sprintf_fround
  L___Lib_Sprintf_fround355
  L___Lib_Sprintf_fround356
  L_end_scale
  __Lib_Sprintf_scale
  L___Lib_Sprintf_scale358
  L___Lib_Sprintf_scale359
  L___Lib_Sprintf_scale360
  L___Lib_Sprintf_scale361
  L___Lib_Sprintf_scale362
  L_end__doprntf
  __Lib_Sprintf__doprntf
  L___Lib_Sprintf__doprntf364
  L___Lib_Sprintf__doprntf365
  L___Lib_Sprintf__doprntf366
  L___Lib_Sprintf__doprntf367
  L___Lib_Sprintf__doprntf368
  L___Lib_Sprintf__doprntf369
  L___Lib_Sprintf__doprntf370
  L___Lib_Sprintf__doprntf371
  L___Lib_Sprintf__doprntf372
  L___Lib_Sprintf__doprntf373
  L___Lib_Sprintf__doprntf374
  L___Lib_Sprintf__doprntf375
  L___Lib_Sprintf__doprntf376
  L___Lib_Sprintf__doprntf377
  L___Lib_Sprintf__doprntf378
  L___Lib_Sprintf__doprntf379
  L___Lib_Sprintf__doprntf380
  L___Lib_Sprintf__doprntf381
  L___Lib_Sprintf__doprntf382
  L___Lib_Sprintf__doprntf383
  L___Lib_Sprintf__doprntf384
  L___Lib_Sprintf__doprntf385
  L___Lib_Sprintf__doprntf386
  L___Lib_Sprintf__doprntf387
  L___Lib_Sprintf__doprntf388
  L___Lib_Sprintf__doprntf389
  L___Lib_Sprintf__doprntf390
  L___Lib_Sprintf__doprntf391
  L___Lib_Sprintf__doprntf392
  L___Lib_Sprintf__doprntf393
  L___Lib_Sprintf__doprntf394
  L___Lib_Sprintf__doprntf395
  L___Lib_Sprintf__doprntf396
  L___Lib_Sprintf__doprntf397
  L___Lib_Sprintf__doprntf398
  L___Lib_Sprintf__doprntf399
  L___Lib_Sprintf__doprntf400
  L___Lib_Sprintf__doprntf401
  L___Lib_Sprintf__doprntf402
  L___Lib_Sprintf__doprntf403
  L___Lib_Sprintf__doprntf404
  L___Lib_Sprintf__doprntf405
  L___Lib_Sprintf__doprntf406
  L___Lib_Sprintf__doprntf407
  L___Lib_Sprintf__doprntf408
  L___Lib_Sprintf__doprntf409
  L___Lib_Sprintf__doprntf410
  L___Lib_Sprintf__doprntf411
  L___Lib_Sprintf__doprntf412
  L___Lib_Sprintf__doprntf413
  L___Lib_Sprintf__doprntf414
  L___Lib_Sprintf__doprntf415
  L___Lib_Sprintf__doprntf416
  L___Lib_Sprintf__doprntf417
  L___Lib_Sprintf__doprntf418
  L___Lib_Sprintf__doprntf419
  L___Lib_Sprintf__doprntf420
  L___Lib_Sprintf__doprntf421
  L___Lib_Sprintf__doprntf422
  L___Lib_Sprintf__doprntf423
  L___Lib_Sprintf__doprntf424
  L___Lib_Sprintf__doprntf425
  L___Lib_Sprintf__doprntf426
  L___Lib_Sprintf__doprntf427
  L___Lib_Sprintf__doprntf428
  L___Lib_Sprintf__doprntf429
  L___Lib_Sprintf__doprntf430
  L___Lib_Sprintf__doprntf431
  L___Lib_Sprintf__doprntf432
  L___Lib_Sprintf__doprntf433
  L___Lib_Sprintf__doprntf434
  L___Lib_Sprintf__doprntf435
  L___Lib_Sprintf__doprntf436
  L___Lib_Sprintf__doprntf437
  L___Lib_Sprintf__doprntf438
  L___Lib_Sprintf__doprntf439
  L___Lib_Sprintf__doprntf440
  L___Lib_Sprintf__doprntf441
  L___Lib_Sprintf__doprntf442
  L___Lib_Sprintf__doprntf443
  L___Lib_Sprintf__doprntf444
  L___Lib_Sprintf__doprntf445
  L___Lib_Sprintf__doprntf446
  L___Lib_Sprintf__doprntf447
  L___Lib_Sprintf__doprntf448
  L___Lib_Sprintf__doprntf449
  L___Lib_Sprintf__doprntf450
  L___Lib_Sprintf__doprntf451
  L___Lib_Sprintf__doprntf452
  L___Lib_Sprintf__doprntf453
  L___Lib_Sprintf__doprntf454
  L___Lib_Sprintf__doprntf455
  L___Lib_Sprintf__doprntf456
  L___Lib_Sprintf__doprntf457
  L___Lib_Sprintf__doprntf458
  L___Lib_Sprintf__doprntf459
  L___Lib_Sprintf__doprntf460
  L___Lib_Sprintf__doprntf461
  L___Lib_Sprintf__doprntf462
  L___Lib_Sprintf__doprntf463
  L___Lib_Sprintf__doprntf464
  L___Lib_Sprintf__doprntf465
  L___Lib_Sprintf__doprntf466
  L___Lib_Sprintf__doprntf467
  L___Lib_Sprintf__doprntf468
  L___Lib_Sprintf__doprntf469
  L___Lib_Sprintf__doprntf470
  L___Lib_Sprintf__doprntf471
  L___Lib_Sprintf__doprntf472
  L___Lib_Sprintf__doprntf473
  L___Lib_Sprintf__doprntf474
  L___Lib_Sprintf__doprntf475
  L___Lib_Sprintf__doprntf476
  L___Lib_Sprintf__doprntf477
  L___Lib_Sprintf__doprntf478
  L___Lib_Sprintf__doprntf479
  L___Lib_Sprintf__doprntf480
  L___Lib_Sprintf__doprntf481
  L___Lib_Sprintf__doprntf482
  L___Lib_Sprintf__doprntf483
  L___Lib_Sprintf__doprntf484
  L___Lib_Sprintf__doprntf485
  L___Lib_Sprintf__doprntf486
  L___Lib_Sprintf__doprntf487
  L___Lib_Sprintf__doprntf488
  L___Lib_Sprintf__doprntf489
  L___Lib_Sprintf__doprntf490
  L___Lib_Sprintf__doprntf491
  L___Lib_Sprintf__doprntf492
  L___Lib_Sprintf__doprntf493
  L___Lib_Sprintf__doprntf494
  L___Lib_Sprintf__doprntf495
  L___Lib_Sprintf__doprntf496
  L___Lib_Sprintf__doprntf497
  L___Lib_Sprintf__doprntf498
  L___Lib_Sprintf__doprntf499
  L_end_sprintf
  _sprintf
  L_UART1_Write0
  L_UART1_Write1
  L_UART1_Write_Text2
  L_UART1_Write_Text3
  L_UART1_Read_Text4
  L_UART1_Read_Text5
  L_UART1_Read_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Init13
  L_UART1_Init_Advanced14
  L_UART2_Write15
  L_UART2_Write16
  L_UART2_Write_Text17
  L_UART2_Write_Text18
  L_UART2_Read_Text19
  L_UART2_Read_Text20
  L_UART2_Read_Text21
  L_UART2_Read_Text22
  L_UART2_Read_Text23
  L_UART2_Read_Text24
  L_UART2_Read_Text25
  L_UART2_Read_Text26
  L_UART2_Read_Text27
  L_UART2_Init28
  L_UART2_Init_Advanced29
  L_UART_Write_Text30
  L_UART_Write_Text31
  L_UART_Read_Text32
  L_UART_Read_Text33
  L_UART_Read_Text34
  L_UART_Read_Text35
  L_UART_Read_Text36
  L_UART_Read_Text37
  L_UART_Read_Text38
  L_UART_Read_Text39
  L_UART_Read_Text40
  L__UART1_Read_Text41
  L__UART1_Init42
  L__UART1_Init_Advanced43
  L__UART2_Read_Text44
  L__UART2_Init45
  L__UART2_Init_Advanced46
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L__UART1_Write_Text49
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L__UART1_Read_Text53
  L__UART1_Read_Text54
  L__UART1_Read_Text55
  L__UART1_Read_Text56
  L__UART1_Read_Text57
  L__UART1_Read_Text58
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Init
  _UART1_Init
  L__UART1_Init61
  L__UART1_Init62
  L__UART1_Init63
  L_end_UART1_Init_Advanced
  _UART1_Init_Advanced
  L__UART1_Init_Advanced65
  L__UART1_Init_Advanced66
  L__UART1_Init_Advanced67
  L_end_UART2_Write
  _UART2_Write
  L_end_UART2_Write_Text
  _UART2_Write_Text
  L__UART2_Write_Text70
  L_end_UART2_Data_Ready
  _UART2_Data_Ready
  L_end_UART2_Read
  _UART2_Read
  L_end_UART2_Read_Text
  _UART2_Read_Text
  L__UART2_Read_Text74
  L__UART2_Read_Text75
  L__UART2_Read_Text76
  L__UART2_Read_Text77
  L__UART2_Read_Text78
  L__UART2_Read_Text79
  L_end_UART2_Tx_Idle
  _UART2_Tx_Idle
  L_end_UART2_Init
  _UART2_Init
  L__UART2_Init82
  L__UART2_Init83
  L__UART2_Init84
  L_end_UART2_Init_Advanced
  _UART2_Init_Advanced
  L__UART2_Init_Advanced86
  L__UART2_Init_Advanced87
  L__UART2_Init_Advanced88
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L__UART_Write_Text92
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L__UART_Read_Text96
  L__UART_Read_Text97
  L__UART_Read_Text98
  L__UART_Read_Text99
  L__UART_Read_Text100
  L__UART_Read_Text101
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L_setInterruptPriority12
  L_setInterruptPriority13
  L_setInterruptPriority14
  L_setInterruptPriority15
  L_setInterruptPriority16
  L_setInterruptPriority17
  L_setInterruptPriority18
  L_setInterruptPriority19
  L_setInterruptPriority20
  L_setExternalInterrupt21
  L_setExternalInterrupt22
  L_setExternalInterrupt23
  L_setExternalInterrupt24
  L_setExternalInterrupt25
  L_setExternalInterrupt26
  L_switchExternalInterruptEdge27
  L_switchExternalInterruptEdge28
  L_switchExternalInterruptEdge29
  L_switchExternalInterruptEdge30
  L_switchExternalInterruptEdge31
  L_switchExternalInterruptEdge32
  L_switchExternalInterruptEdge33
  L_switchExternalInterruptEdge34
  L_switchExternalInterruptEdge35
  L_switchExternalInterruptEdge36
  L_switchExternalInterruptEdge37
  L_switchExternalInterruptEdge38
  L_getExternalInterruptEdge39
  L_getExternalInterruptEdge40
  L_getExternalInterruptEdge41
  L_getExternalInterruptEdge42
  L_getExternalInterruptEdge43
  L_getExternalInterruptEdge44
  L_clearExternalInterrupt45
  L_clearExternalInterrupt46
  L_clearExternalInterrupt47
  L_clearExternalInterrupt48
  L_clearExternalInterrupt49
  L_clearExternalInterrupt50
  L_setTimer51
  L_setTimer52
  L_setTimer53
  L_setTimer54
  L_setTimer55
  L_clearTimer56
  L_clearTimer57
  L_clearTimer58
  L_clearTimer59
  L_clearTimer60
  L_turnOnTimer61
  L_turnOnTimer62
  L_turnOnTimer63
  L_turnOnTimer64
  L_turnOnTimer65
  L_turnOffTimer66
  L_turnOffTimer67
  L_turnOffTimer68
  L_turnOffTimer69
  L_turnOffTimer70
  L_getTimerPrescaler71
  L_getTimerPrescaler72
  L_getTimerPrescaler73
  L_getTimerPrescaler74
  L_EEPROM_writeInt75
  L_EEPROM_writeInt76
  L_EEPROM_writeArray77
  L_EEPROM_writeArray78
  L_EEPROM_writeArray79
  L_EEPROM_readArray80
  L_EEPROM_readArray81
  L_EEPROM_readArray82
  L_counter_quarter_turn_match83
  L_counter_quarter_turn_match84
  L_counter_quarter_turn_match85
  L_counter_quarter_turn_match86
  L_counter_quarter_turn_match87
  L_counter_quarter_turn_match88
  L_EBB_control89
  L_EBB_control90
  L_EBB_control91
  L_EBB_control92
  L_EBB_control93
  L_EBB_control94
  L_EBB_control95
  L_EBB_control96
  L_EBB_control97
  L_EBB_control98
  L_EBB_control99
  L_EBB_control100
  L_EBB_control101
  L_EBB_control102
  L_EBB_control103
  L_EBB_control104
  L_EBB_control105
  L_EBB_control106
  L_EBB_control107
  L_EBB_control108
  L_EBB_control109
  L_EBB_control110
  L_EBB_control111
  L_EBB_control112
  L_EBB_control113
  L_EBB_control114
  L_EBB_control115
  L_EBB_control116
  L_EBB_control117
  L_EBB_control118
  L_EBB_control119
  L_EBB_control120
  L_EBB_control121
  L_EBB_control122
  L_EBB_control123
  L_EBB_control124
  L_EBB_control125
  L_EBB_control126
  L_EBB_control127
  L_EBB_control128
  L_EBB_control129
  L_EBB_control130
  L_EBB_control131
  L_EBB_control132
  L_EBB_control133
  L_EBB_control134
  L_EBB_control135
  L_EBB_control136
  L_EBB_control137
  L_EBB_control138
  L_EBB_control139
  L_EBB_Init140
  L_EBB_Init141
  L_EBB_Init142
  L_EBB_Init143
  L_EBB_Init144
  L_EBB_Init145
  L_EBB_Init146
  L_EBB_Init147
  L_EBB_Init148
  L_EBB_Init149
  L_timer1_interrupt151
  L_timer1_interrupt152
  L_timer1_interrupt153
  L_timer1_interrupt154
  L_timer1_interrupt155
  L_timer1_interrupt156
  L_timer2_interrupt157
  L_timer4_interrupt158
  L_main159
  L_main160
  L_CAN_Interrupt161
  L_CAN_Interrupt162
  L_CAN_Interrupt163
  L_CAN_Interrupt164
  L_CAN_Interrupt165
  L_CAN_Interrupt166
  L_CAN_Interrupt167
  L_CAN_Interrupt168
  L_CAN_Interrupt169
  L_CAN_Interrupt170
  L_CAN_Interrupt171
  L_CAN_Interrupt172
  L_CAN_Interrupt173
  L__Can_write174
  L__Can_write175
  L__Can_write176
  L__CAN_Interrupt177
  L__CAN_Interrupt178
  L__CAN_Interrupt179
  L__CAN_Interrupt180
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read183
  L__Can_read184
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write190
  L__Can_write191
  L__Can_write192
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket195
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived198
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived200
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_end_setAllPinAsDigital
  _setAllPinAsDigital
  L_end_setInterruptPriority
  _setInterruptPriority
  L__setInterruptPriority207
  L__setInterruptPriority208
  L__setInterruptPriority209
  L__setInterruptPriority210
  L__setInterruptPriority211
  L__setInterruptPriority212
  L_end_setExternalInterrupt
  _setExternalInterrupt
  L__setExternalInterrupt214
  L__setExternalInterrupt215
  L__setExternalInterrupt216
  L_end_switchExternalInterruptEdge
  _switchExternalInterruptEdge
  L__switchExternalInterruptEdge218
  L__switchExternalInterruptEdge219
  L__switchExternalInterruptEdge220
  L__switchExternalInterruptEdge221
  L__switchExternalInterruptEdge222
  L__switchExternalInterruptEdge223
  L_end_getExternalInterruptEdge
  _getExternalInterruptEdge
  L__getExternalInterruptEdge225
  L__getExternalInterruptEdge226
  L__getExternalInterruptEdge227
  L_end_clearExternalInterrupt
  _clearExternalInterrupt
  L__clearExternalInterrupt229
  L__clearExternalInterrupt230
  L__clearExternalInterrupt231
  L_end_setTimer
  _setTimer
  L__setTimer233
  L__setTimer234
  L__setTimer235
  L_end_clearTimer
  _clearTimer
  L__clearTimer237
  L__clearTimer238
  L__clearTimer239
  L_end_turnOnTimer
  _turnOnTimer
  L__turnOnTimer241
  L__turnOnTimer242
  L__turnOnTimer243
  L_end_turnOffTimer
  _turnOffTimer
  L__turnOffTimer245
  L__turnOffTimer246
  L__turnOffTimer247
  L_end_getTimerPeriod
  _getTimerPeriod
  L_end_getTimerPrescaler
  _getTimerPrescaler
  L__getTimerPrescaler250
  L__getTimerPrescaler251
  L_end_getExactTimerPrescaler
  _getExactTimerPrescaler
  L_end_setupAnalogSampling
  _setupAnalogSampling
  L_end_turnOnAnalogModule
  _turnOnAnalogModule
  L_end_turnOffAnalogModule
  _turnOffAnalogModule
  L_end_startSampling
  _startSampling
  L_end_getAnalogValue
  _getAnalogValue
  L_end_setAnalogPIN
  _setAnalogPIN
  L_end_unsetAnalogPIN
  _unsetAnalogPIN
  L_end_setAnalogInterrupt
  _setAnalogInterrupt
  L_end_unsetAnalogInterrupt
  _unsetAnalogInterrupt
  L_end_clearAnalogInterrupt
  _clearAnalogInterrupt
  L_end_setAutomaticSampling
  _setAutomaticSampling
  L_end_unsetAutomaticSampling
  _unsetAutomaticSampling
  L_end_setAnalogVoltageReference
  _setAnalogVoltageReference
  L_end_setAnalogDataOutputFormat
  _setAnalogDataOutputFormat
  L_end_getMinimumAnalogClockConversion
  _getMinimumAnalogClockConversion
  L_end_EEPROM_writeInt
  _EEPROM_writeInt
  L_end_EEPROM_readInt
  _EEPROM_readInt
  L_end_EEPROM_writeArray
  _EEPROM_writeArray
  L__EEPROM_writeArray271
  L_end_EEPROM_readArray
  _EEPROM_readArray
  L__EEPROM_readArray273
  L_end_CAN_routine
  _CAN_routine
  L_end_Debug_UART_Write
  _Debug_UART_Write
  L_end_counter_quarter_turn_match
  _counter_quarter_turn_match
  L__counter_quarter_turn_match277
  L__counter_quarter_turn_match278
  L__counter_quarter_turn_match279
  L_end_EBB_control
  _EBB_control
  L__EBB_control281
  L__EBB_control282
  L__EBB_control283
  L__EBB_control284
  L__EBB_control285
  L__EBB_control286
  L__EBB_control287
  L__EBB_control288
  L__EBB_control289
  L__EBB_control290
  L__EBB_control291
  L__EBB_control292
  L__EBB_control293
  L__EBB_control294
  L__EBB_control295
  L__EBB_control296
  L__EBB_control297
  L__EBB_control298
  L__EBB_control299
  L__EBB_control300
  L__EBB_control301
  L__EBB_control302
  L__EBB_control303
  L__EBB_control304
  L__EBB_control305
  L__EBB_control306
  L__EBB_control307
  L__EBB_control308
  L__EBB_control309
  L__EBB_control310
  L__EBB_control311
  L__EBB_control312
  L_end_EBB_Init
  _EBB_Init
  L__EBB_Init314
  L_end_timer1_interrupt
  _timer1_interrupt
  L__timer1_interrupt316
  L__timer1_interrupt317
  L__timer1_interrupt318
  L__timer1_interrupt319
  L__timer1_interrupt320
  L__timer1_interrupt321
  L_end_timer2_interrupt
  _timer2_interrupt
  L__timer2_interrupt323
  L_end_timer4_interrupt
  _timer4_interrupt
  L__timer4_interrupt325
  L_end_main
  _main
  L__main_end_loop
  L_end_CAN_Interrupt
  _CAN_Interrupt
  L__CAN_Interrupt329
  L__CAN_Interrupt330
  L__CAN_Interrupt331
  L__CAN_Interrupt332
  L__CAN_Interrupt333
  L__CAN_Interrupt334
  L__CAN_Interrupt335
  L__CAN_Interrupt336
  L__CAN_Interrupt337
  L__CAN_Interrupt338
